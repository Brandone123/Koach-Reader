{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\screens\\\\StatsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport { Title } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport Chip from \"react-native-paper/lib/module/components/Chip/Chip\";\nimport Divider from \"react-native-paper/lib/module/components/Divider\";\nimport * as Avatar from \"react-native-paper/lib/module/components/Avatar/Avatar\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width\n} = Dimensions.get('window');\nconst StatsScreen = ({\n  navigation\n}) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const {\n    t\n  } = useTranslation();\n  const [stats, setStats] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [timeRange, setTimeRange] = useState('week');\n  useEffect(() => {\n    fetchReadingStats();\n  }, [timeRange]);\n  const fetchReadingStats = async () => {\n    setIsLoading(true);\n    try {\n      const data = await fetchApi(`/api/stats?range=${timeRange}`);\n      setStats(data);\n    } catch (error) {\n      try {\n        const mockData = await mockFetchApi(`/api/stats?range=${timeRange}`);\n        setStats(mockData);\n      } catch (mockError) {\n        console.error('Failed to fetch reading stats:', mockError);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const maxPagesRead = stats?.readingByDay ? Math.max(...stats.readingByDay.map(item => item.pagesRead)) : 0;\n  const formatTime = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    if (hours === 0) {\n      return `${mins} min`;\n    } else if (mins === 0) {\n      return `${hours} hr`;\n    } else {\n      return `${hours} hr ${mins} min`;\n    }\n  };\n  const renderReadingByDayChart = () => {\n    if (!stats?.readingByDay) return null;\n    return _jsxDEV(View, {\n      style: styles.chartContainer,\n      children: stats.readingByDay.map((item, index) => _jsxDEV(View, {\n        style: styles.barChartRow,\n        children: [_jsxDEV(Text, {\n          style: styles.barChartLabel,\n          children: item.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.barContainer,\n          children: [_jsxDEV(View, {\n            style: [styles.bar, {\n              width: `${item.pagesRead / maxPagesRead * 100}%`,\n              backgroundColor: index % 2 === 0 ? '#6200ee' : '#03dac6'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.barValue,\n            children: [item.pagesRead, \" pages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  };\n  const renderReadingByTimeChart = () => {\n    if (!stats?.readingByTime) return null;\n    const colors = ['#6200ee', '#03dac6', '#ff6c00', '#b38dff'];\n    return _jsxDEV(View, {\n      style: styles.timeDistributionContainer,\n      children: [_jsxDEV(View, {\n        style: styles.pieChartContainer,\n        children: _jsxDEV(View, {\n          style: styles.pieChart,\n          children: stats.readingByTime.map((item, index) => {\n            const startPercent = stats.readingByTime.slice(0, index).reduce((sum, curr) => sum + curr.percentage, 0);\n            const startAngle = startPercent / 100 * 360;\n            const angle = item.percentage / 100 * 360;\n            return _jsxDEV(View, {\n              style: [styles.pieSlice, {\n                backgroundColor: colors[index % colors.length],\n                transform: [{\n                  rotate: `${startAngle}deg`\n                }, {\n                  translateX: -50\n                }, {\n                  translateY: -50\n                }],\n                width: angle <= 180 ? '100%' : '50%',\n                height: '100%'\n              }]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.timeDistributionLegend,\n        children: stats.readingByTime.map((item, index) => _jsxDEV(View, {\n          style: styles.legendItem,\n          children: [_jsxDEV(View, {\n            style: [styles.legendColor, {\n              backgroundColor: colors[index % colors.length]\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.legendText,\n            children: [item.time, \" (\", item.percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6200ee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: t('stats.loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return _jsxDEV(View, {\n      style: styles.emptyContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.emptyText,\n        children: t('stats.noStats')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: () => navigation.navigate('Home'),\n        style: styles.emptyButton,\n        children: t('stats.goToBooks')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Title, {\n        style: styles.title,\n        children: t('stats.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.subtitle,\n        children: t('stats.tracking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.timeRangeContainer,\n        children: [_jsxDEV(Chip, {\n          selected: timeRange === 'week',\n          onPress: () => setTimeRange('week'),\n          style: styles.timeRangeChip,\n          selectedColor: \"#fff\",\n          children: t('stats.week')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), _jsxDEV(Chip, {\n          selected: timeRange === 'month',\n          onPress: () => setTimeRange('month'),\n          style: styles.timeRangeChip,\n          selectedColor: \"#fff\",\n          children: t('stats.month')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), _jsxDEV(Chip, {\n          selected: timeRange === 'year',\n          onPress: () => setTimeRange('year'),\n          style: styles.timeRangeChip,\n          selectedColor: \"#fff\",\n          children: t('stats.year')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), _jsxDEV(Card, {\n      style: styles.card,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Title, {\n          style: styles.cardTitle,\n          children: t('stats.summary')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statsGrid,\n          children: [_jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statValue,\n              children: stats.daysActive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: t('stats.daysActive')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statValue,\n              children: stats.totalPagesRead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: t('stats.pagesRead')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statValue,\n              children: formatTime(stats.totalReadingTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: t('stats.timeSpent')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statValue,\n              children: stats.booksCompleted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: t('stats.booksCompleted')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), _jsxDEV(Divider, {\n          style: styles.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.streakContainer,\n          children: [_jsxDEV(View, {\n            style: styles.streakItem,\n            children: [_jsxDEV(Avatar.Icon, {\n              size: 40,\n              icon: \"fire\",\n              style: styles.streakIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.streakTextContainer,\n              children: [_jsxDEV(Text, {\n                style: styles.streakValue,\n                children: [stats.currentStreak, \" \", t('stats.days')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), _jsxDEV(Text, {\n                style: styles.streakLabel,\n                children: t('stats.currentStreak')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.streakItem,\n            children: [_jsxDEV(Avatar.Icon, {\n              size: 40,\n              icon: \"trophy\",\n              style: styles.streakIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.streakTextContainer,\n              children: [_jsxDEV(Text, {\n                style: styles.streakValue,\n                children: [stats.longestStreak, \" \", t('stats.days')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), _jsxDEV(Text, {\n                style: styles.streakLabel,\n                children: t('stats.longestStreak')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), _jsxDEV(Card, {\n      style: styles.card,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Title, {\n          style: styles.cardTitle,\n          children: \"Reading Patterns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.patternContainer,\n          children: [_jsxDEV(View, {\n            style: styles.patternItem,\n            children: [_jsxDEV(Text, {\n              style: styles.patternLabel,\n              children: \"Preferred Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.patternValue,\n              children: stats.preferredReadingTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.patternItem,\n            children: [_jsxDEV(Text, {\n              style: styles.patternLabel,\n              children: \"Favorite Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.patternValue,\n              children: stats.mostReadCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.patternItem,\n            children: [_jsxDEV(Text, {\n              style: styles.patternLabel,\n              children: \"Avg. Pages/Day:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.patternValue,\n              children: stats.averagePagesPerDay ? stats.averagePagesPerDay.toFixed(1) : '0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.patternItem,\n            children: [_jsxDEV(Text, {\n              style: styles.patternLabel,\n              children: \"Avg. Time/Day:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.patternValue,\n              children: formatTime(stats.averageTimePerDay)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), _jsxDEV(Card, {\n      style: styles.card,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Title, {\n          style: styles.cardTitle,\n          children: \"Reading by Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), renderReadingByDayChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), _jsxDEV(Card, {\n      style: [styles.card, styles.lastCard],\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Title, {\n          style: styles.cardTitle,\n          children: \"Time Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), renderReadingByTimeChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#6200ee',\n    padding: 24,\n    paddingTop: 36\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 4,\n    marginBottom: 16\n  },\n  timeRangeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 8\n  },\n  timeRangeChip: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)'\n  },\n  card: {\n    margin: 16,\n    marginBottom: 8,\n    borderRadius: 8,\n    elevation: 2\n  },\n  lastCard: {\n    marginBottom: 24\n  },\n  cardTitle: {\n    fontSize: 18,\n    marginBottom: 16\n  },\n  divider: {\n    marginVertical: 16\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  statItem: {\n    width: '48%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#6200ee'\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 4\n  },\n  streakContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  streakItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '48%'\n  },\n  streakIcon: {\n    backgroundColor: '#6200ee'\n  },\n  streakTextContainer: {\n    marginLeft: 12\n  },\n  streakValue: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  streakLabel: {\n    fontSize: 14,\n    color: '#666'\n  },\n  patternContainer: {\n    marginTop: 8\n  },\n  patternItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  patternLabel: {\n    fontSize: 16,\n    color: '#333'\n  },\n  patternValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#6200ee'\n  },\n  chartContainer: {\n    marginTop: 8\n  },\n  barChartRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  barChartLabel: {\n    width: 60,\n    fontSize: 14\n  },\n  barContainer: {\n    flex: 1,\n    height: 24,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 4,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  bar: {\n    height: '100%',\n    borderRadius: 4\n  },\n  barValue: {\n    position: 'absolute',\n    left: 8,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 2\n  },\n  timeDistributionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8\n  },\n  pieChartContainer: {\n    width: width * 0.35,\n    height: width * 0.35,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  pieChart: {\n    width: '80%',\n    height: '80%',\n    borderRadius: 100,\n    overflow: 'hidden',\n    backgroundColor: '#f0f0f0',\n    position: 'relative'\n  },\n  pieSlice: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '50%',\n    height: '100%',\n    transform: [{\n      translateX: 0\n    }, {\n      translateY: 0\n    }]\n  },\n  timeDistributionLegend: {\n    flex: 1,\n    marginLeft: 16\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  legendColor: {\n    width: 16,\n    height: 16,\n    borderRadius: 8,\n    marginRight: 8\n  },\n  legendText: {\n    fontSize: 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  emptyButton: {\n    marginTop: 16\n  }\n});\nexport default StatsScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","ScrollView","Dimensions","ActivityIndicator","Card","Title","Button","Chip","Divider","Avatar","useDispatch","useSelector","selectUser","fetchApi","mockFetchApi","useTranslation","jsxDEV","_jsxDEV","width","get","StatsScreen","navigation","dispatch","user","t","stats","setStats","isLoading","setIsLoading","timeRange","setTimeRange","fetchReadingStats","data","error","mockData","mockError","console","maxPagesRead","readingByDay","Math","max","map","item","pagesRead","formatTime","minutes","hours","floor","mins","renderReadingByDayChart","style","styles","chartContainer","children","index","barChartRow","barChartLabel","day","fileName","_jsxFileName","lineNumber","columnNumber","barContainer","bar","backgroundColor","barValue","renderReadingByTimeChart","readingByTime","colors","timeDistributionContainer","pieChartContainer","pieChart","startPercent","slice","reduce","sum","curr","percentage","startAngle","angle","pieSlice","length","transform","rotate","translateX","translateY","height","timeDistributionLegend","legendItem","legendColor","legendText","time","loadingContainer","size","color","loadingText","emptyContainer","emptyText","mode","onPress","navigate","emptyButton","container","header","title","subtitle","timeRangeContainer","selected","timeRangeChip","selectedColor","card","Content","cardTitle","statsGrid","statItem","statValue","daysActive","statLabel","totalPagesRead","totalReadingTime","booksCompleted","divider","streakContainer","streakItem","Icon","icon","streakIcon","streakTextContainer","streakValue","currentStreak","streakLabel","longestStreak","patternContainer","patternItem","patternLabel","patternValue","preferredReadingTime","mostReadCategory","averagePagesPerDay","toFixed","averageTimePerDay","lastCard","create","flex","padding","paddingTop","fontSize","fontWeight","marginTop","marginBottom","flexDirection","justifyContent","margin","borderRadius","elevation","marginVertical","flexWrap","alignItems","marginLeft","paddingBottom","borderBottomWidth","borderBottomColor","overflow","position","left","textShadowColor","textShadowOffset","textShadowRadius","top","marginRight","textAlign"],"sources":["D:/All_Projects/Koach-Reader/client/src/screens/StatsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  Dimensions,\n  ActivityIndicator\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Chip,\n  Divider,\n  Avatar\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../../App';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../store';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\nimport { useTranslation } from 'react-i18next';\n\n// Height and width for responsive designs\nconst { width } = Dimensions.get('window');\n\ntype StatsScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Stats'>;\n\ninterface StatsScreenProps {\n  navigation: StatsScreenNavigationProp;\n}\n\n// Reading stats interface\ninterface ReadingStats {\n  daysActive: number;\n  totalReadingTime: number;\n  totalPagesRead: number;\n  booksStarted: number;\n  booksCompleted: number;\n  averagePagesPerDay: number;\n  averageTimePerDay: number;\n  currentStreak: number;\n  longestStreak: number;\n  preferredReadingTime: string;\n  mostReadCategory: string;\n  readingByDay: Array<{ day: string; pagesRead: number }>;\n  readingByTime: Array<{ time: string; percentage: number }>;\n}\n\nconst StatsScreen: React.FC<StatsScreenProps> = ({ navigation }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const user = useSelector(selectUser);\n  const { t } = useTranslation();\n  \n  const [stats, setStats] = useState<ReadingStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [timeRange, setTimeRange] = useState<'week' | 'month' | 'year'>('week');\n  \n  useEffect(() => {\n    fetchReadingStats();\n  }, [timeRange]);\n  \n  const fetchReadingStats = async () => {\n    setIsLoading(true);\n    try {\n      // Try to fetch from real API first\n      const data = await fetchApi(`/api/stats?range=${timeRange}`);\n      setStats(data);\n    } catch (error) {\n      try {\n        // Fall back to mock API\n        const mockData = await mockFetchApi(`/api/stats?range=${timeRange}`);\n        setStats(mockData);\n      } catch (mockError) {\n        console.error('Failed to fetch reading stats:', mockError);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Calculate the max value for the bar chart\n  const maxPagesRead = stats?.readingByDay ? \n    Math.max(...stats.readingByDay.map(item => item.pagesRead)) : 0;\n  \n  // Helper function to format time in hours and minutes\n  const formatTime = (minutes: number) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    \n    if (hours === 0) {\n      return `${mins} min`;\n    } else if (mins === 0) {\n      return `${hours} hr`;\n    } else {\n      return `${hours} hr ${mins} min`;\n    }\n  };\n  \n  // Render a simple bar chart for reading by day\n  const renderReadingByDayChart = () => {\n    if (!stats?.readingByDay) return null;\n    \n    return (\n      <View style={styles.chartContainer}>\n        {stats.readingByDay.map((item, index) => (\n          <View key={index} style={styles.barChartRow}>\n            <Text style={styles.barChartLabel}>{item.day}</Text>\n            <View style={styles.barContainer}>\n              <View \n                style={[\n                  styles.bar, \n                  { \n                    width: `${(item.pagesRead / maxPagesRead) * 100}%`,\n                    backgroundColor: index % 2 === 0 ? '#6200ee' : '#03dac6'\n                  }\n                ]} \n              />\n              <Text style={styles.barValue}>{item.pagesRead} pages</Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  };\n  \n  // Render a simple pie chart for reading by time\n  const renderReadingByTimeChart = () => {\n    if (!stats?.readingByTime) return null;\n    \n    const colors = ['#6200ee', '#03dac6', '#ff6c00', '#b38dff'];\n    \n    return (\n      <View style={styles.timeDistributionContainer}>\n        <View style={styles.pieChartContainer}>\n          <View style={styles.pieChart}>\n            {stats.readingByTime.map((item, index) => {\n              // Calculate the start and end angles for this slice\n              const startPercent = stats.readingByTime\n                .slice(0, index)\n                .reduce((sum, curr) => sum + curr.percentage, 0);\n              \n              const startAngle = (startPercent / 100) * 360;\n              const angle = (item.percentage / 100) * 360;\n              \n              return (\n                <View \n                  key={index}\n                  style={[\n                    styles.pieSlice,\n                    {\n                      backgroundColor: colors[index % colors.length],\n                      transform: [\n                        { rotate: `${startAngle}deg` },\n                        { translateX: -50 },\n                        { translateY: -50 },\n                      ],\n                      width: angle <= 180 ? '100%' : '50%',\n                      height: '100%',\n                    }\n                  ]}\n                />\n              );\n            })}\n          </View>\n        </View>\n        \n        <View style={styles.timeDistributionLegend}>\n          {stats.readingByTime.map((item, index) => (\n            <View key={index} style={styles.legendItem}>\n              <View \n                style={[\n                  styles.legendColor, \n                  { backgroundColor: colors[index % colors.length] }\n                ]} \n              />\n              <Text style={styles.legendText}>\n                {item.time} ({item.percentage}%)\n              </Text>\n            </View>\n          ))}\n        </View>\n      </View>\n    );\n  };\n  \n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#6200ee\" />\n        <Text style={styles.loadingText}>{t('stats.loading')}</Text>\n      </View>\n    );\n  }\n  \n  if (!stats) {\n    return (\n      <View style={styles.emptyContainer}>\n        <Text style={styles.emptyText}>\n          {t('stats.noStats')}\n        </Text>\n        <Button \n          mode=\"contained\"\n          onPress={() => navigation.navigate('Home')}\n          style={styles.emptyButton}\n        >\n          {t('stats.goToBooks')}\n        </Button>\n      </View>\n    );\n  }\n  \n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Title style={styles.title}>{t('stats.title')}</Title>\n        <Text style={styles.subtitle}>{t('stats.tracking')}</Text>\n        \n        <View style={styles.timeRangeContainer}>\n          <Chip \n            selected={timeRange === 'week'} \n            onPress={() => setTimeRange('week')}\n            style={styles.timeRangeChip}\n            selectedColor=\"#fff\"\n          >\n            {t('stats.week')}\n          </Chip>\n          <Chip \n            selected={timeRange === 'month'} \n            onPress={() => setTimeRange('month')}\n            style={styles.timeRangeChip}\n            selectedColor=\"#fff\"\n          >\n            {t('stats.month')}\n          </Chip>\n          <Chip \n            selected={timeRange === 'year'} \n            onPress={() => setTimeRange('year')}\n            style={styles.timeRangeChip}\n            selectedColor=\"#fff\"\n          >\n            {t('stats.year')}\n          </Chip>\n        </View>\n      </View>\n      \n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.cardTitle}>{t('stats.summary')}</Title>\n          \n          <View style={styles.statsGrid}>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{stats.daysActive}</Text>\n              <Text style={styles.statLabel}>{t('stats.daysActive')}</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{stats.totalPagesRead}</Text>\n              <Text style={styles.statLabel}>{t('stats.pagesRead')}</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{formatTime(stats.totalReadingTime)}</Text>\n              <Text style={styles.statLabel}>{t('stats.timeSpent')}</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{stats.booksCompleted}</Text>\n              <Text style={styles.statLabel}>{t('stats.booksCompleted')}</Text>\n            </View>\n          </View>\n          \n          <Divider style={styles.divider} />\n          \n          <View style={styles.streakContainer}>\n            <View style={styles.streakItem}>\n              <Avatar.Icon size={40} icon=\"fire\" style={styles.streakIcon} />\n              <View style={styles.streakTextContainer}>\n                <Text style={styles.streakValue}>{stats.currentStreak} {t('stats.days')}</Text>\n                <Text style={styles.streakLabel}>{t('stats.currentStreak')}</Text>\n              </View>\n            </View>\n            <View style={styles.streakItem}>\n              <Avatar.Icon size={40} icon=\"trophy\" style={styles.streakIcon} />\n              <View style={styles.streakTextContainer}>\n                <Text style={styles.streakValue}>{stats.longestStreak} {t('stats.days')}</Text>\n                <Text style={styles.streakLabel}>{t('stats.longestStreak')}</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n      \n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.cardTitle}>Reading Patterns</Title>\n          \n          <View style={styles.patternContainer}>\n            <View style={styles.patternItem}>\n              <Text style={styles.patternLabel}>Preferred Time:</Text>\n              <Text style={styles.patternValue}>{stats.preferredReadingTime}</Text>\n            </View>\n            <View style={styles.patternItem}>\n              <Text style={styles.patternLabel}>Favorite Category:</Text>\n              <Text style={styles.patternValue}>{stats.mostReadCategory}</Text>\n            </View>\n            <View style={styles.patternItem}>\n              <Text style={styles.patternLabel}>Avg. Pages/Day:</Text>\n              <Text style={styles.patternValue}>\n                {stats.averagePagesPerDay ? stats.averagePagesPerDay.toFixed(1) : '0'}\n              </Text>\n            </View>\n            <View style={styles.patternItem}>\n              <Text style={styles.patternLabel}>Avg. Time/Day:</Text>\n              <Text style={styles.patternValue}>{formatTime(stats.averageTimePerDay)}</Text>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n      \n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.cardTitle}>Reading by Day</Title>\n          {renderReadingByDayChart()}\n        </Card.Content>\n      </Card>\n      \n      <Card style={[styles.card, styles.lastCard]}>\n        <Card.Content>\n          <Title style={styles.cardTitle}>Time Distribution</Title>\n          {renderReadingByTimeChart()}\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#6200ee',\n    padding: 24,\n    paddingTop: 36,\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 4,\n    marginBottom: 16,\n  },\n  timeRangeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 8,\n  },\n  timeRangeChip: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n  },\n  card: {\n    margin: 16,\n    marginBottom: 8,\n    borderRadius: 8,\n    elevation: 2,\n  },\n  lastCard: {\n    marginBottom: 24,\n  },\n  cardTitle: {\n    fontSize: 18,\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  statItem: {\n    width: '48%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#6200ee',\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 4,\n  },\n  streakContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  streakItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '48%',\n  },\n  streakIcon: {\n    backgroundColor: '#6200ee',\n  },\n  streakTextContainer: {\n    marginLeft: 12,\n  },\n  streakValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  streakLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  patternContainer: {\n    marginTop: 8,\n  },\n  patternItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0',\n  },\n  patternLabel: {\n    fontSize: 16,\n    color: '#333',\n  },\n  patternValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#6200ee',\n  },\n  chartContainer: {\n    marginTop: 8,\n  },\n  barChartRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  barChartLabel: {\n    width: 60,\n    fontSize: 14,\n  },\n  barContainer: {\n    flex: 1,\n    height: 24,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 4,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  bar: {\n    height: '100%',\n    borderRadius: 4,\n  },\n  barValue: {\n    position: 'absolute',\n    left: 8,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: { width: 1, height: 1 },\n    textShadowRadius: 2,\n  },\n  timeDistributionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  pieChartContainer: {\n    width: width * 0.35,\n    height: width * 0.35,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  pieChart: {\n    width: '80%',\n    height: '80%',\n    borderRadius: 100,\n    overflow: 'hidden',\n    backgroundColor: '#f0f0f0',\n    position: 'relative',\n  },\n  pieSlice: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '50%',\n    height: '100%',\n    transform: [{ translateX: 0 }, { translateY: 0 }],\n  },\n  timeDistributionLegend: {\n    flex: 1,\n    marginLeft: 16,\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  legendColor: {\n    width: 16,\n    height: 16,\n    borderRadius: 8,\n    marginRight: 8,\n  },\n  legendText: {\n    fontSize: 14,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  emptyButton: {\n    marginTop: 16,\n  },\n});\n\nexport default StatsScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,OAAA;AAAA,YAAAC,MAAA;AAoBnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAM;EAAEC;AAAM,CAAC,GAAGhB,UAAU,CAACiB,GAAG,CAAC,QAAQ,CAAC;AAyB1C,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAClE,MAAMC,QAAQ,GAAGZ,WAAW,CAAc,CAAC;EAC3C,MAAMa,IAAI,GAAGZ,WAAW,CAACC,UAAU,CAAC;EACpC,MAAM;IAAEY;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAE9B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAsB,IAAI,CAAC;EAC7D,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAA4B,MAAM,CAAC;EAE7ED,SAAS,CAAC,MAAM;IACdmC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCH,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MAEF,MAAMI,IAAI,GAAG,MAAMnB,QAAQ,CAAC,oBAAoBgB,SAAS,EAAE,CAAC;MAC5DH,QAAQ,CAACM,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI;QAEF,MAAMC,QAAQ,GAAG,MAAMpB,YAAY,CAAC,oBAAoBe,SAAS,EAAE,CAAC;QACpEH,QAAQ,CAACQ,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOC,SAAS,EAAE;QAClBC,OAAO,CAACH,KAAK,CAAC,gCAAgC,EAAEE,SAAS,CAAC;MAC5D;IACF,CAAC,SAAS;MACRP,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAGD,MAAMS,YAAY,GAAGZ,KAAK,EAAEa,YAAY,GACtCC,IAAI,CAACC,GAAG,CAAC,GAAGf,KAAK,CAACa,YAAY,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAAC,GAAG,CAAC;EAGjE,MAAMC,UAAU,GAAIC,OAAe,IAAK;IACtC,MAAMC,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACtC,MAAMG,IAAI,GAAGH,OAAO,GAAG,EAAE;IAEzB,IAAIC,KAAK,KAAK,CAAC,EAAE;MACf,OAAO,GAAGE,IAAI,MAAM;IACtB,CAAC,MAAM,IAAIA,IAAI,KAAK,CAAC,EAAE;MACrB,OAAO,GAAGF,KAAK,KAAK;IACtB,CAAC,MAAM;MACL,OAAO,GAAGA,KAAK,OAAOE,IAAI,MAAM;IAClC;EACF,CAAC;EAGD,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAACxB,KAAK,EAAEa,YAAY,EAAE,OAAO,IAAI;IAErC,OACErB,OAAA,CAAClB,IAAI;MAACmD,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAC,QAAA,EAChC5B,KAAK,CAACa,YAAY,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEY,KAAK,KAClCrC,OAAA,CAAClB,IAAI;QAAamD,KAAK,EAAEC,MAAM,CAACI,WAAY;QAAAF,QAAA,GAC1CpC,OAAA,CAACjB,IAAI;UAACkD,KAAK,EAAEC,MAAM,CAACK,aAAc;UAAAH,QAAA,EAAEX,IAAI,CAACe;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACpD5C,OAAA,CAAClB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACW,YAAa;UAAAT,QAAA,GAC/BpC,OAAA,CAAClB,IAAI;YACHmD,KAAK,EAAE,CACLC,MAAM,CAACY,GAAG,EACV;cACE7C,KAAK,EAAE,GAAIwB,IAAI,CAACC,SAAS,GAAGN,YAAY,GAAI,GAAG,GAAG;cAClD2B,eAAe,EAAEV,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG;YACjD,CAAC;UACD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACF5C,OAAA,CAACjB,IAAI;YAACkD,KAAK,EAAEC,MAAM,CAACc,QAAS;YAAAZ,QAAA,GAAEX,IAAI,CAACC,SAAS,EAAC,QAAM;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA,GAbEP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEX,CAAC;EAGD,MAAMK,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAI,CAACzC,KAAK,EAAE0C,aAAa,EAAE,OAAO,IAAI;IAEtC,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAE3D,OACEnD,OAAA,CAAClB,IAAI;MAACmD,KAAK,EAAEC,MAAM,CAACkB,yBAA0B;MAAAhB,QAAA,GAC5CpC,OAAA,CAAClB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAACmB,iBAAkB;QAAAjB,QAAA,EACpCpC,OAAA,CAAClB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACoB,QAAS;UAAAlB,QAAA,EAC1B5B,KAAK,CAAC0C,aAAa,CAAC1B,GAAG,CAAC,CAACC,IAAI,EAAEY,KAAK,KAAK;YAExC,MAAMkB,YAAY,GAAG/C,KAAK,CAAC0C,aAAa,CACrCM,KAAK,CAAC,CAAC,EAAEnB,KAAK,CAAC,CACfoB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,UAAU,EAAE,CAAC,CAAC;YAElD,MAAMC,UAAU,GAAIN,YAAY,GAAG,GAAG,GAAI,GAAG;YAC7C,MAAMO,KAAK,GAAIrC,IAAI,CAACmC,UAAU,GAAG,GAAG,GAAI,GAAG;YAE3C,OACE5D,OAAA,CAAClB,IAAI;cAEHmD,KAAK,EAAE,CACLC,MAAM,CAAC6B,QAAQ,EACf;gBACEhB,eAAe,EAAEI,MAAM,CAACd,KAAK,GAAGc,MAAM,CAACa,MAAM,CAAC;gBAC9CC,SAAS,EAAE,CACT;kBAAEC,MAAM,EAAE,GAAGL,UAAU;gBAAM,CAAC,EAC9B;kBAAEM,UAAU,EAAE,CAAC;gBAAG,CAAC,EACnB;kBAAEC,UAAU,EAAE,CAAC;gBAAG,CAAC,CACpB;gBACDnE,KAAK,EAAE6D,KAAK,IAAI,GAAG,GAAG,MAAM,GAAG,KAAK;gBACpCO,MAAM,EAAE;cACV,CAAC;YACD,GAbGhC,KAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcX,CAAC;UAEN,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEP5C,OAAA,CAAClB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAACoC,sBAAuB;QAAAlC,QAAA,EACxC5B,KAAK,CAAC0C,aAAa,CAAC1B,GAAG,CAAC,CAACC,IAAI,EAAEY,KAAK,KACnCrC,OAAA,CAAClB,IAAI;UAAamD,KAAK,EAAEC,MAAM,CAACqC,UAAW;UAAAnC,QAAA,GACzCpC,OAAA,CAAClB,IAAI;YACHmD,KAAK,EAAE,CACLC,MAAM,CAACsC,WAAW,EAClB;cAAEzB,eAAe,EAAEI,MAAM,CAACd,KAAK,GAAGc,MAAM,CAACa,MAAM;YAAE,CAAC;UAClD;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACF5C,OAAA,CAACjB,IAAI;YAACkD,KAAK,EAAEC,MAAM,CAACuC,UAAW;YAAArC,QAAA,GAC5BX,IAAI,CAACiD,IAAI,EAAC,IAAE,EAACjD,IAAI,CAACmC,UAAU,EAAC,IAChC;UAAA;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GATEP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEX,CAAC;EAED,IAAIlC,SAAS,EAAE;IACb,OACEV,OAAA,CAAClB,IAAI;MAACmD,KAAK,EAAEC,MAAM,CAACyC,gBAAiB;MAAAvC,QAAA,GACnCpC,OAAA,CAACd,iBAAiB;QAAC0F,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;QAAApC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClD5C,OAAA,CAACjB,IAAI;QAACkD,KAAK,EAAEC,MAAM,CAAC4C,WAAY;QAAA1C,QAAA,EAAE7B,CAAC,CAAC,eAAe;MAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAEX;EAEA,IAAI,CAACpC,KAAK,EAAE;IACV,OACER,OAAA,CAAClB,IAAI;MAACmD,KAAK,EAAEC,MAAM,CAAC6C,cAAe;MAAA3C,QAAA,GACjCpC,OAAA,CAACjB,IAAI;QAACkD,KAAK,EAAEC,MAAM,CAAC8C,SAAU;QAAA5C,QAAA,EAC3B7B,CAAC,CAAC,eAAe;MAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EACP5C,OAAA,CAACX,MAAM;QACL4F,IAAI,EAAC,WAAW;QAChBC,OAAO,EAAEA,CAAA,KAAM9E,UAAU,CAAC+E,QAAQ,CAAC,MAAM,CAAE;QAC3ClD,KAAK,EAAEC,MAAM,CAACkD,WAAY;QAAAhD,QAAA,EAEzB7B,CAAC,CAAC,iBAAiB;MAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEX;EAEA,OACE5C,OAAA,CAAChB,UAAU;IAACiD,KAAK,EAAEC,MAAM,CAACmD,SAAU;IAAAjD,QAAA,GAClCpC,OAAA,CAAClB,IAAI;MAACmD,KAAK,EAAEC,MAAM,CAACoD,MAAO;MAAAlD,QAAA,GACzBpC,OAAA,CAACZ,KAAK;QAAC6C,KAAK,EAAEC,MAAM,CAACqD,KAAM;QAAAnD,QAAA,EAAE7B,CAAC,CAAC,aAAa;MAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtD5C,OAAA,CAACjB,IAAI;QAACkD,KAAK,EAAEC,MAAM,CAACsD,QAAS;QAAApD,QAAA,EAAE7B,CAAC,CAAC,gBAAgB;MAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAE1D5C,OAAA,CAAClB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAACuD,kBAAmB;QAAArD,QAAA,GACrCpC,OAAA,CAACV,IAAI;UACHoG,QAAQ,EAAE9E,SAAS,KAAK,MAAO;UAC/BsE,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAAC,MAAM,CAAE;UACpCoB,KAAK,EAAEC,MAAM,CAACyD,aAAc;UAC5BC,aAAa,EAAC,MAAM;UAAAxD,QAAA,EAEnB7B,CAAC,CAAC,YAAY;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,EACP5C,OAAA,CAACV,IAAI;UACHoG,QAAQ,EAAE9E,SAAS,KAAK,OAAQ;UAChCsE,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAAC,OAAO,CAAE;UACrCoB,KAAK,EAAEC,MAAM,CAACyD,aAAc;UAC5BC,aAAa,EAAC,MAAM;UAAAxD,QAAA,EAEnB7B,CAAC,CAAC,aAAa;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,EACP5C,OAAA,CAACV,IAAI;UACHoG,QAAQ,EAAE9E,SAAS,KAAK,MAAO;UAC/BsE,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAAC,MAAM,CAAE;UACpCoB,KAAK,EAAEC,MAAM,CAACyD,aAAc;UAC5BC,aAAa,EAAC,MAAM;UAAAxD,QAAA,EAEnB7B,CAAC,CAAC,YAAY;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEP5C,OAAA,CAACb,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAAC2D,IAAK;MAAAzD,QAAA,EACvBpC,OAAA,CAACb,IAAI,CAAC2G,OAAO;QAAA1D,QAAA,GACXpC,OAAA,CAACZ,KAAK;UAAC6C,KAAK,EAAEC,MAAM,CAAC6D,SAAU;UAAA3D,QAAA,EAAE7B,CAAC,CAAC,eAAe;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAE5D5C,OAAA,CAAClB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAAC8D,SAAU;UAAA5D,QAAA,GAC5BpC,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAAC+D,QAAS;YAAA7D,QAAA,GAC3BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACgE,SAAU;cAAA9D,QAAA,EAAE5B,KAAK,CAAC2F;YAAU;cAAA1D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACxD5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACkE,SAAU;cAAAhE,QAAA,EAAE7B,CAAC,CAAC,kBAAkB;YAAC;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAAC+D,QAAS;YAAA7D,QAAA,GAC3BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACgE,SAAU;cAAA9D,QAAA,EAAE5B,KAAK,CAAC6F;YAAc;cAAA5D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC5D5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACkE,SAAU;cAAAhE,QAAA,EAAE7B,CAAC,CAAC,iBAAiB;YAAC;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAAC+D,QAAS;YAAA7D,QAAA,GAC3BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACgE,SAAU;cAAA9D,QAAA,EAAET,UAAU,CAACnB,KAAK,CAAC8F,gBAAgB;YAAC;cAAA7D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC1E5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACkE,SAAU;cAAAhE,QAAA,EAAE7B,CAAC,CAAC,iBAAiB;YAAC;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAAC+D,QAAS;YAAA7D,QAAA,GAC3BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACgE,SAAU;cAAA9D,QAAA,EAAE5B,KAAK,CAAC+F;YAAc;cAAA9D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC5D5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACkE,SAAU;cAAAhE,QAAA,EAAE7B,CAAC,CAAC,sBAAsB;YAAC;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEP5C,OAAA,CAACT,OAAO;UAAC0C,KAAK,EAAEC,MAAM,CAACsE;QAAQ;UAAA/D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAElC5C,OAAA,CAAClB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACuE,eAAgB;UAAArE,QAAA,GAClCpC,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACwE,UAAW;YAAAtE,QAAA,GAC7BpC,OAAA,CAACR,MAAM,CAACmH,IAAI;cAAC/B,IAAI,EAAE,EAAG;cAACgC,IAAI,EAAC,MAAM;cAAC3E,KAAK,EAAEC,MAAM,CAAC2E;YAAW;cAAApE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC/D5C,OAAA,CAAClB,IAAI;cAACmD,KAAK,EAAEC,MAAM,CAAC4E,mBAAoB;cAAA1E,QAAA,GACtCpC,OAAA,CAACjB,IAAI;gBAACkD,KAAK,EAAEC,MAAM,CAAC6E,WAAY;gBAAA3E,QAAA,GAAE5B,KAAK,CAACwG,aAAa,EAAC,GAAC,EAACzG,CAAC,CAAC,YAAY,CAAC;cAAA;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EAC/E5C,OAAA,CAACjB,IAAI;gBAACkD,KAAK,EAAEC,MAAM,CAAC+E,WAAY;gBAAA7E,QAAA,EAAE7B,CAAC,CAAC,qBAAqB;cAAC;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACwE,UAAW;YAAAtE,QAAA,GAC7BpC,OAAA,CAACR,MAAM,CAACmH,IAAI;cAAC/B,IAAI,EAAE,EAAG;cAACgC,IAAI,EAAC,QAAQ;cAAC3E,KAAK,EAAEC,MAAM,CAAC2E;YAAW;cAAApE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACjE5C,OAAA,CAAClB,IAAI;cAACmD,KAAK,EAAEC,MAAM,CAAC4E,mBAAoB;cAAA1E,QAAA,GACtCpC,OAAA,CAACjB,IAAI;gBAACkD,KAAK,EAAEC,MAAM,CAAC6E,WAAY;gBAAA3E,QAAA,GAAE5B,KAAK,CAAC0G,aAAa,EAAC,GAAC,EAAC3G,CAAC,CAAC,YAAY,CAAC;cAAA;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EAC/E5C,OAAA,CAACjB,IAAI;gBAACkD,KAAK,EAAEC,MAAM,CAAC+E,WAAY;gBAAA7E,QAAA,EAAE7B,CAAC,CAAC,qBAAqB;cAAC;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,EAEP5C,OAAA,CAACb,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAAC2D,IAAK;MAAAzD,QAAA,EACvBpC,OAAA,CAACb,IAAI,CAAC2G,OAAO;QAAA1D,QAAA,GACXpC,OAAA,CAACZ,KAAK;UAAC6C,KAAK,EAAEC,MAAM,CAAC6D,SAAU;UAAA3D,QAAA,EAAC;QAAgB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAExD5C,OAAA,CAAClB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACiF,gBAAiB;UAAA/E,QAAA,GACnCpC,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACkF,WAAY;YAAAhF,QAAA,GAC9BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACmF,YAAa;cAAAjF,QAAA,EAAC;YAAe;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACxD5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACoF,YAAa;cAAAlF,QAAA,EAAE5B,KAAK,CAAC+G;YAAoB;cAAA9E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACkF,WAAY;YAAAhF,QAAA,GAC9BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACmF,YAAa;cAAAjF,QAAA,EAAC;YAAkB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC3D5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACoF,YAAa;cAAAlF,QAAA,EAAE5B,KAAK,CAACgH;YAAgB;cAAA/E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACkF,WAAY;YAAAhF,QAAA,GAC9BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACmF,YAAa;cAAAjF,QAAA,EAAC;YAAe;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACxD5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACoF,YAAa;cAAAlF,QAAA,EAC9B5B,KAAK,CAACiH,kBAAkB,GAAGjH,KAAK,CAACiH,kBAAkB,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG;YAAG;cAAAjF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACP5C,OAAA,CAAClB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACkF,WAAY;YAAAhF,QAAA,GAC9BpC,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACmF,YAAa;cAAAjF,QAAA,EAAC;YAAc;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACvD5C,OAAA,CAACjB,IAAI;cAACkD,KAAK,EAAEC,MAAM,CAACoF,YAAa;cAAAlF,QAAA,EAAET,UAAU,CAACnB,KAAK,CAACmH,iBAAiB;YAAC;cAAAlF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,EAEP5C,OAAA,CAACb,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAAC2D,IAAK;MAAAzD,QAAA,EACvBpC,OAAA,CAACb,IAAI,CAAC2G,OAAO;QAAA1D,QAAA,GACXpC,OAAA,CAACZ,KAAK;UAAC6C,KAAK,EAAEC,MAAM,CAAC6D,SAAU;UAAA3D,QAAA,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACrDZ,uBAAuB,CAAC,CAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,EAEP5C,OAAA,CAACb,IAAI;MAAC8C,KAAK,EAAE,CAACC,MAAM,CAAC2D,IAAI,EAAE3D,MAAM,CAAC0F,QAAQ,CAAE;MAAAxF,QAAA,EAC1CpC,OAAA,CAACb,IAAI,CAAC2G,OAAO;QAAA1D,QAAA,GACXpC,OAAA,CAACZ,KAAK;UAAC6C,KAAK,EAAEC,MAAM,CAAC6D,SAAU;UAAA3D,QAAA,EAAC;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACxDK,wBAAwB,CAAC,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;AAED,MAAMV,MAAM,GAAGrD,UAAU,CAACgJ,MAAM,CAAC;EAC/BxC,SAAS,EAAE;IACTyC,IAAI,EAAE,CAAC;IACP/E,eAAe,EAAE;EACnB,CAAC;EACDuC,MAAM,EAAE;IACNvC,eAAe,EAAE,SAAS;IAC1BgF,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDzC,KAAK,EAAE;IACLV,KAAK,EAAE,OAAO;IACdoD,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACD1C,QAAQ,EAAE;IACRX,KAAK,EAAE,0BAA0B;IACjCsD,SAAS,EAAE,CAAC;IACZC,YAAY,EAAE;EAChB,CAAC;EACD3C,kBAAkB,EAAE;IAClB4C,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,cAAc;IAC9BH,SAAS,EAAE;EACb,CAAC;EACDxC,aAAa,EAAE;IACb5C,eAAe,EAAE;EACnB,CAAC;EACD8C,IAAI,EAAE;IACJ0C,MAAM,EAAE,EAAE;IACVH,YAAY,EAAE,CAAC;IACfI,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDb,QAAQ,EAAE;IACRQ,YAAY,EAAE;EAChB,CAAC;EACDrC,SAAS,EAAE;IACTkC,QAAQ,EAAE,EAAE;IACZG,YAAY,EAAE;EAChB,CAAC;EACD5B,OAAO,EAAE;IACPkC,cAAc,EAAE;EAClB,CAAC;EACD1C,SAAS,EAAE;IACTqC,aAAa,EAAE,KAAK;IACpBM,QAAQ,EAAE,MAAM;IAChBL,cAAc,EAAE;EAClB,CAAC;EACDrC,QAAQ,EAAE;IACRhG,KAAK,EAAE,KAAK;IACZ2I,UAAU,EAAE,QAAQ;IACpBN,cAAc,EAAE,QAAQ;IACxBvF,eAAe,EAAE,SAAS;IAC1ByF,YAAY,EAAE,CAAC;IACfT,OAAO,EAAE,EAAE;IACXK,YAAY,EAAE;EAChB,CAAC;EACDlC,SAAS,EAAE;IACT+B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBrD,KAAK,EAAE;EACT,CAAC;EACDuB,SAAS,EAAE;IACT6B,QAAQ,EAAE,EAAE;IACZpD,KAAK,EAAE,MAAM;IACbsD,SAAS,EAAE;EACb,CAAC;EACD1B,eAAe,EAAE;IACf4B,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EAClB,CAAC;EACD5B,UAAU,EAAE;IACV2B,aAAa,EAAE,KAAK;IACpBO,UAAU,EAAE,QAAQ;IACpB3I,KAAK,EAAE;EACT,CAAC;EACD4G,UAAU,EAAE;IACV9D,eAAe,EAAE;EACnB,CAAC;EACD+D,mBAAmB,EAAE;IACnB+B,UAAU,EAAE;EACd,CAAC;EACD9B,WAAW,EAAE;IACXkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDjB,WAAW,EAAE;IACXgB,QAAQ,EAAE,EAAE;IACZpD,KAAK,EAAE;EACT,CAAC;EACDsC,gBAAgB,EAAE;IAChBgB,SAAS,EAAE;EACb,CAAC;EACDf,WAAW,EAAE;IACXiB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BF,YAAY,EAAE,EAAE;IAChBU,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACD3B,YAAY,EAAE;IACZY,QAAQ,EAAE,EAAE;IACZpD,KAAK,EAAE;EACT,CAAC;EACDyC,YAAY,EAAE;IACZW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBrD,KAAK,EAAE;EACT,CAAC;EACD1C,cAAc,EAAE;IACdgG,SAAS,EAAE;EACb,CAAC;EACD7F,WAAW,EAAE;IACX+F,aAAa,EAAE,KAAK;IACpBO,UAAU,EAAE,QAAQ;IACpBR,YAAY,EAAE;EAChB,CAAC;EACD7F,aAAa,EAAE;IACbtC,KAAK,EAAE,EAAE;IACTgI,QAAQ,EAAE;EACZ,CAAC;EACDpF,YAAY,EAAE;IACZiF,IAAI,EAAE,CAAC;IACPzD,MAAM,EAAE,EAAE;IACVtB,eAAe,EAAE,SAAS;IAC1ByF,YAAY,EAAE,CAAC;IACfS,QAAQ,EAAE,QAAQ;IAClBZ,aAAa,EAAE,KAAK;IACpBO,UAAU,EAAE;EACd,CAAC;EACD9F,GAAG,EAAE;IACHuB,MAAM,EAAE,MAAM;IACdmE,YAAY,EAAE;EAChB,CAAC;EACDxF,QAAQ,EAAE;IACRkG,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPtE,KAAK,EAAE,OAAO;IACdoD,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBkB,eAAe,EAAE,oBAAoB;IACrCC,gBAAgB,EAAE;MAAEpJ,KAAK,EAAE,CAAC;MAAEoE,MAAM,EAAE;IAAE,CAAC;IACzCiF,gBAAgB,EAAE;EACpB,CAAC;EACDlG,yBAAyB,EAAE;IACzBiF,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BM,UAAU,EAAE,QAAQ;IACpBT,SAAS,EAAE;EACb,CAAC;EACD9E,iBAAiB,EAAE;IACjBpD,KAAK,EAAEA,KAAK,GAAG,IAAI;IACnBoE,MAAM,EAAEpE,KAAK,GAAG,IAAI;IACpBqI,cAAc,EAAE,QAAQ;IACxBM,UAAU,EAAE;EACd,CAAC;EACDtF,QAAQ,EAAE;IACRrD,KAAK,EAAE,KAAK;IACZoE,MAAM,EAAE,KAAK;IACbmE,YAAY,EAAE,GAAG;IACjBS,QAAQ,EAAE,QAAQ;IAClBlG,eAAe,EAAE,SAAS;IAC1BmG,QAAQ,EAAE;EACZ,CAAC;EACDnF,QAAQ,EAAE;IACRmF,QAAQ,EAAE,UAAU;IACpBK,GAAG,EAAE,CAAC;IACNJ,IAAI,EAAE,CAAC;IACPlJ,KAAK,EAAE,KAAK;IACZoE,MAAM,EAAE,MAAM;IACdJ,SAAS,EAAE,CAAC;MAAEE,UAAU,EAAE;IAAE,CAAC,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAC;EAClD,CAAC;EACDE,sBAAsB,EAAE;IACtBwD,IAAI,EAAE,CAAC;IACPe,UAAU,EAAE;EACd,CAAC;EACDtE,UAAU,EAAE;IACV8D,aAAa,EAAE,KAAK;IACpBO,UAAU,EAAE,QAAQ;IACpBR,YAAY,EAAE;EAChB,CAAC;EACD5D,WAAW,EAAE;IACXvE,KAAK,EAAE,EAAE;IACToE,MAAM,EAAE,EAAE;IACVmE,YAAY,EAAE,CAAC;IACfgB,WAAW,EAAE;EACf,CAAC;EACD/E,UAAU,EAAE;IACVwD,QAAQ,EAAE;EACZ,CAAC;EACDtD,gBAAgB,EAAE;IAChBmD,IAAI,EAAE,CAAC;IACPQ,cAAc,EAAE,QAAQ;IACxBM,UAAU,EAAE;EACd,CAAC;EACD9D,WAAW,EAAE;IACXqD,SAAS,EAAE,EAAE;IACbF,QAAQ,EAAE,EAAE;IACZpD,KAAK,EAAE;EACT,CAAC;EACDE,cAAc,EAAE;IACd+C,IAAI,EAAE,CAAC;IACPQ,cAAc,EAAE,QAAQ;IACxBM,UAAU,EAAE,QAAQ;IACpBb,OAAO,EAAE;EACX,CAAC;EACD/C,SAAS,EAAE;IACTiD,QAAQ,EAAE,EAAE;IACZpD,KAAK,EAAE,MAAM;IACb4E,SAAS,EAAE,QAAQ;IACnBrB,YAAY,EAAE;EAChB,CAAC;EACDhD,WAAW,EAAE;IACX+C,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAehI,WAAW","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}