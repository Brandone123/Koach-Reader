{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\components\\\\BottomNavigationBar.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BottomNavigation from \"react-native-paper/lib/module/components/BottomNavigation/BottomNavigation\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../slices/authSlice';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BottomNavigationBar = ({\n  hideForRoutes = ['Onboarding']\n}) => {\n  const [index, setIndex] = useState(2);\n  const navigation = useNavigation();\n  const user = useSelector(selectUser);\n  const navState = navigation.getState?.();\n  const currentRoute = navState ? navState.routes[navState.index].name : '';\n  if (hideForRoutes.includes(currentRoute)) {\n    return null;\n  }\n  const isPremium = user?.isPremium || false;\n  const routes = [{\n    key: 'leaderboard',\n    title: 'Leaderboard',\n    icon: 'trophy-award',\n    color: '#FFC107'\n  }, {\n    key: 'challenges',\n    title: 'Challenges',\n    icon: 'flag-checkered',\n    color: '#FF6B6B'\n  }, {\n    key: 'home',\n    title: 'Home',\n    icon: 'home',\n    color: '#8A2BE2'\n  }, {\n    key: 'profile',\n    title: 'Profile',\n    icon: 'account-circle',\n    color: '#2980B9'\n  }, {\n    key: 'stats',\n    title: 'Stats',\n    icon: 'chart-line',\n    color: '#00CEC9'\n  }];\n  const LeaderboardScene = () => null;\n  const ChallengesScene = () => null;\n  const HomeScene = () => null;\n  const ProfileScene = () => null;\n  const StatsScene = () => null;\n  const renderScene = BottomNavigation.SceneMap({\n    leaderboard: LeaderboardScene,\n    challenges: ChallengesScene,\n    home: HomeScene,\n    profile: ProfileScene,\n    stats: StatsScene\n  });\n  const handleIndexChange = newIndex => {\n    setIndex(newIndex);\n    switch (routes[newIndex].key) {\n      case 'leaderboard':\n        navigation.navigate('Leaderboard');\n        break;\n      case 'challenges':\n        navigation.navigate('Challenges');\n        break;\n      case 'home':\n        navigation.navigate('Home');\n        break;\n      case 'profile':\n        navigation.navigate('Profile');\n        break;\n      case 'stats':\n        navigation.navigate('Stats');\n        break;\n    }\n  };\n  const handleAddBook = () => {\n    if (isPremium) {\n      navigation.navigate('ReadingPlan', {});\n    } else {\n      alert('Cette fonctionnalité est réservée aux utilisateurs premium');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(BottomNavigation, {\n      navigationState: {\n        index,\n        routes\n      },\n      onIndexChange: handleIndexChange,\n      renderScene: renderScene,\n      shifting: true,\n      labeled: true,\n      activeColor: \"#FFFFFF\",\n      inactiveColor: \"rgba(255,255,255,0.7)\",\n      sceneAnimationEnabled: true,\n      barStyle: styles.bar,\n      theme: {\n        colors: {\n          secondaryContainer: 'transparent'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.fabContainer,\n      onPress: handleAddBook,\n      children: _jsxDEV(View, {\n        style: styles.fab,\n        children: _jsxDEV(MaterialCommunityIcons, {\n          name: \"plus-circle\",\n          size: 56,\n          color: \"#8A2BE2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'transparent',\n    zIndex: 999\n  },\n  bar: {\n    backgroundColor: '#8A2BE2',\n    height: Platform.OS === 'ios' ? 80 : 64,\n    paddingBottom: Platform.OS === 'ios' ? 30 : 0,\n    borderTopWidth: 0,\n    elevation: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3\n  },\n  fabContainer: {\n    position: 'absolute',\n    alignSelf: 'center',\n    bottom: Platform.OS === 'ios' ? 60 : 44,\n    zIndex: 1000\n  },\n  fab: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 28,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    width: 56,\n    height: 56,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default BottomNavigationBar;","map":{"version":3,"names":["React","useState","View","StyleSheet","Platform","TouchableOpacity","BottomNavigation","useNavigation","useSelector","selectUser","MaterialCommunityIcons","jsxDEV","_jsxDEV","BottomNavigationBar","hideForRoutes","index","setIndex","navigation","user","navState","getState","currentRoute","routes","name","includes","isPremium","key","title","icon","color","LeaderboardScene","ChallengesScene","HomeScene","ProfileScene","StatsScene","renderScene","SceneMap","leaderboard","challenges","home","profile","stats","handleIndexChange","newIndex","navigate","handleAddBook","alert","style","styles","container","children","navigationState","onIndexChange","shifting","labeled","activeColor","inactiveColor","sceneAnimationEnabled","barStyle","bar","theme","colors","secondaryContainer","fileName","_jsxFileName","lineNumber","columnNumber","fabContainer","onPress","fab","size","create","position","bottom","left","right","backgroundColor","zIndex","height","OS","paddingBottom","borderTopWidth","elevation","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","alignSelf","borderRadius","justifyContent","alignItems"],"sources":["D:/All_Projects/Koach-Reader/client/src/components/BottomNavigationBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Platform, TouchableOpacity } from 'react-native';\r\nimport { BottomNavigation, Text, Badge, IconButton } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { RootStackParamList } from '../../App';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../slices/authSlice';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\ninterface BottomBarProps {\r\n  hideForRoutes?: string[];\r\n}\r\n\r\nconst BottomNavigationBar: React.FC<BottomBarProps> = ({ hideForRoutes = ['Onboarding'] }) => {\r\n  const [index, setIndex] = useState(2); // Home index par défaut\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const user = useSelector(selectUser);\r\n  \r\n  // Vérifier si l'utilisateur est sur une route où la barre doit être masquée\r\n  // On utilise getState() pour obtenir la route actuelle\r\n  // Ajouter un guard pour éviter l'erreur si getState() est undefined\r\n  const navState = navigation.getState?.();\r\n  const currentRoute = navState ? navState.routes[navState.index].name : '';\r\n  \r\n  if (hideForRoutes.includes(currentRoute)) {\r\n    return null; // Ne pas afficher la barre sur les routes spécifiées\r\n  }\r\n  \r\n  const isPremium = user?.isPremium || false;\r\n\r\n  const routes = [\r\n    { key: 'leaderboard', title: 'Leaderboard', icon: 'trophy-award', color: '#FFC107' },\r\n    { key: 'challenges', title: 'Challenges', icon: 'flag-checkered', color: '#FF6B6B' },\r\n    { key: 'home', title: 'Home', icon: 'home', color: '#8A2BE2' },\r\n    { key: 'profile', title: 'Profile', icon: 'account-circle', color: '#2980B9' },\r\n    { key: 'stats', title: 'Stats', icon: 'chart-line', color: '#00CEC9' },\r\n  ];\r\n\r\n  // Define empty component for each scene\r\n  const LeaderboardScene = () => null;\r\n  const ChallengesScene = () => null;\r\n  const HomeScene = () => null;\r\n  const ProfileScene = () => null;\r\n  const StatsScene = () => null;\r\n  \r\n  // Map the components to keys\r\n  const renderScene = BottomNavigation.SceneMap({\r\n    leaderboard: LeaderboardScene,\r\n    challenges: ChallengesScene,\r\n    home: HomeScene,\r\n    profile: ProfileScene,\r\n    stats: StatsScene,\r\n  });\r\n\r\n  const handleIndexChange = (newIndex: number) => {\r\n    setIndex(newIndex);\r\n    \r\n    switch (routes[newIndex].key) {\r\n      case 'leaderboard':\r\n        navigation.navigate('Leaderboard');\r\n        break;\r\n      case 'challenges':\r\n        navigation.navigate('Challenges');\r\n        break;\r\n      case 'home':\r\n        navigation.navigate('Home');\r\n        break;\r\n      case 'profile':\r\n        navigation.navigate('Profile');\r\n        break;\r\n      case 'stats':\r\n        navigation.navigate('Stats');\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Gérer le clic sur le bouton d'ajout de livre\r\n  const handleAddBook = () => {\r\n    if (isPremium) {\r\n      navigation.navigate('ReadingPlan', {});\r\n    } else {\r\n      // Rediriger vers une page demandant à l'utilisateur de devenir premium\r\n      // À implémenter plus tard: navigation.navigate('PremiumPlans');\r\n      alert('Cette fonctionnalité est réservée aux utilisateurs premium');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BottomNavigation\r\n        navigationState={{ index, routes }}\r\n        onIndexChange={handleIndexChange}\r\n        renderScene={renderScene}\r\n        shifting={true}\r\n        labeled={true}\r\n        activeColor=\"#FFFFFF\"\r\n        inactiveColor=\"rgba(255,255,255,0.7)\"\r\n        sceneAnimationEnabled={true}\r\n        barStyle={styles.bar}\r\n        theme={{\r\n          colors: {\r\n            secondaryContainer: 'transparent',\r\n          }\r\n        }}\r\n      />\r\n      <TouchableOpacity \r\n        style={styles.fabContainer}\r\n        onPress={handleAddBook}\r\n      >\r\n        <View style={styles.fab}>\r\n          <MaterialCommunityIcons name=\"plus-circle\" size={56} color=\"#8A2BE2\" />\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: 'transparent',\r\n    zIndex: 999,\r\n  },\r\n  bar: {\r\n    backgroundColor: '#8A2BE2',\r\n    height: Platform.OS === 'ios' ? 80 : 64,\r\n    paddingBottom: Platform.OS === 'ios' ? 30 : 0,\r\n    borderTopWidth: 0,\r\n    elevation: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: -2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n  },\r\n  fabContainer: {\r\n    position: 'absolute',\r\n    alignSelf: 'center',\r\n    bottom: Platform.OS === 'ios' ? 60 : 44,\r\n    zIndex: 1000,\r\n  },\r\n  fab: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 28,\r\n    elevation: 5,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    width: 56,\r\n    height: 56,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n});\r\n\r\nexport default BottomNavigationBar; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,gBAAA;AAGxC,SAASC,aAAa,QAAQ,0BAA0B;AAGxD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,sBAAsB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5D,MAAMC,mBAA6C,GAAGA,CAAC;EAAEC,aAAa,GAAG,CAAC,YAAY;AAAE,CAAC,KAAK;EAC5F,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMgB,UAAU,GAAGV,aAAa,CAAiB,CAAC;EAClD,MAAMW,IAAI,GAAGV,WAAW,CAACC,UAAU,CAAC;EAKpC,MAAMU,QAAQ,GAAGF,UAAU,CAACG,QAAQ,GAAG,CAAC;EACxC,MAAMC,YAAY,GAAGF,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAACH,QAAQ,CAACJ,KAAK,CAAC,CAACQ,IAAI,GAAG,EAAE;EAEzE,IAAIT,aAAa,CAACU,QAAQ,CAACH,YAAY,CAAC,EAAE;IACxC,OAAO,IAAI;EACb;EAEA,MAAMI,SAAS,GAAGP,IAAI,EAAEO,SAAS,IAAI,KAAK;EAE1C,MAAMH,MAAM,GAAG,CACb;IAAEI,GAAG,EAAE,aAAa;IAAEC,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAU,CAAC,EACpF;IAAEH,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAU,CAAC,EACpF;IAAEH,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC9D;IAAEH,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC9E;IAAEH,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAU,CAAC,CACvE;EAGD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,IAAI;EACnC,MAAMC,eAAe,GAAGA,CAAA,KAAM,IAAI;EAClC,MAAMC,SAAS,GAAGA,CAAA,KAAM,IAAI;EAC5B,MAAMC,YAAY,GAAGA,CAAA,KAAM,IAAI;EAC/B,MAAMC,UAAU,GAAGA,CAAA,KAAM,IAAI;EAG7B,MAAMC,WAAW,GAAG7B,gBAAgB,CAAC8B,QAAQ,CAAC;IAC5CC,WAAW,EAAEP,gBAAgB;IAC7BQ,UAAU,EAAEP,eAAe;IAC3BQ,IAAI,EAAEP,SAAS;IACfQ,OAAO,EAAEP,YAAY;IACrBQ,KAAK,EAAEP;EACT,CAAC,CAAC;EAEF,MAAMQ,iBAAiB,GAAIC,QAAgB,IAAK;IAC9C3B,QAAQ,CAAC2B,QAAQ,CAAC;IAElB,QAAQrB,MAAM,CAACqB,QAAQ,CAAC,CAACjB,GAAG;MAC1B,KAAK,aAAa;QAChBT,UAAU,CAAC2B,QAAQ,CAAC,aAAa,CAAC;QAClC;MACF,KAAK,YAAY;QACf3B,UAAU,CAAC2B,QAAQ,CAAC,YAAY,CAAC;QACjC;MACF,KAAK,MAAM;QACT3B,UAAU,CAAC2B,QAAQ,CAAC,MAAM,CAAC;QAC3B;MACF,KAAK,SAAS;QACZ3B,UAAU,CAAC2B,QAAQ,CAAC,SAAS,CAAC;QAC9B;MACF,KAAK,OAAO;QACV3B,UAAU,CAAC2B,QAAQ,CAAC,OAAO,CAAC;QAC5B;IACJ;EACF,CAAC;EAGD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIpB,SAAS,EAAE;MACbR,UAAU,CAAC2B,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MAGLE,KAAK,CAAC,4DAA4D,CAAC;IACrE;EACF,CAAC;EAED,OACElC,OAAA,CAACV,IAAI;IAAC6C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BtC,OAAA,CAACN,gBAAgB;MACf6C,eAAe,EAAE;QAAEpC,KAAK;QAAEO;MAAO,CAAE;MACnC8B,aAAa,EAAEV,iBAAkB;MACjCP,WAAW,EAAEA,WAAY;MACzBkB,QAAQ,EAAE,IAAK;MACfC,OAAO,EAAE,IAAK;MACdC,WAAW,EAAC,SAAS;MACrBC,aAAa,EAAC,uBAAuB;MACrCC,qBAAqB,EAAE,IAAK;MAC5BC,QAAQ,EAAEV,MAAM,CAACW,GAAI;MACrBC,KAAK,EAAE;QACLC,MAAM,EAAE;UACNC,kBAAkB,EAAE;QACtB;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACFtD,OAAA,CAACP,gBAAgB;MACf0C,KAAK,EAAEC,MAAM,CAACmB,YAAa;MAC3BC,OAAO,EAAEvB,aAAc;MAAAK,QAAA,EAEvBtC,OAAA,CAACV,IAAI;QAAC6C,KAAK,EAAEC,MAAM,CAACqB,GAAI;QAAAnB,QAAA,EACtBtC,OAAA,CAACF,sBAAsB;UAACa,IAAI,EAAC,aAAa;UAAC+C,IAAI,EAAE,EAAG;UAACzC,KAAK,EAAC;QAAS;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEX,CAAC;AAED,MAAMlB,MAAM,GAAG7C,UAAU,CAACoE,MAAM,CAAC;EAC/BtB,SAAS,EAAE;IACTuB,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE;EACV,CAAC;EACDlB,GAAG,EAAE;IACHiB,eAAe,EAAE,SAAS;IAC1BE,MAAM,EAAE1E,QAAQ,CAAC2E,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,EAAE;IACvCC,aAAa,EAAE5E,QAAQ,CAAC2E,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,CAAC;IAC7CE,cAAc,EAAE,CAAC;IACjBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEP,MAAM,EAAE,CAAC;IAAE,CAAC;IACtCQ,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDpB,YAAY,EAAE;IACZK,QAAQ,EAAE,UAAU;IACpBgB,SAAS,EAAE,QAAQ;IACnBf,MAAM,EAAErE,QAAQ,CAAC2E,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,EAAE;IACvCF,MAAM,EAAE;EACV,CAAC;EACDR,GAAG,EAAE;IACHO,eAAe,EAAE,SAAS;IAC1Ba,YAAY,EAAE,EAAE;IAChBP,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEP,MAAM,EAAE;IAAE,CAAC;IACrCQ,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBF,KAAK,EAAE,EAAE;IACTP,MAAM,EAAE,EAAE;IACVY,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe9E,mBAAmB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}