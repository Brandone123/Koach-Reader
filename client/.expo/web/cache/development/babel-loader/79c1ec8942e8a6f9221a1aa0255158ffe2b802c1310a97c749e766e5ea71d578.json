{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\KoachReadsFinal\\\\client\\\\src\\\\screens\\\\MediaViewerScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport PDFViewer from '../components/PDFViewer';\nimport AudioPlayer from '../components/AudioPlayer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MediaType = function (MediaType) {\n  MediaType[\"PDF\"] = \"pdf\";\n  MediaType[\"AUDIO\"] = \"audio\";\n  MediaType[\"UNKNOWN\"] = \"unknown\";\n  return MediaType;\n}(MediaType || {});\nconst MediaViewerScreen = ({\n  navigation,\n  route\n}) => {\n  const {\n    bookId,\n    mediaType\n  } = route.params;\n  const [mediaInfo, setMediaInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const determineMediaType = uri => {\n    if (!uri) return MediaType.UNKNOWN;\n    const lowerCaseUri = uri.toLowerCase();\n    if (lowerCaseUri.endsWith('.pdf') || lowerCaseUri.includes('application/pdf')) {\n      return MediaType.PDF;\n    } else if (lowerCaseUri.endsWith('.mp3') || lowerCaseUri.endsWith('.m4a') || lowerCaseUri.endsWith('.wav') || lowerCaseUri.endsWith('.ogg')) {\n      return MediaType.AUDIO;\n    }\n    return mediaType === 'audio' ? MediaType.AUDIO : MediaType.PDF;\n  };\n  useEffect(() => {\n    fetchMediaInfo();\n  }, [bookId, mediaType]);\n  const fetchMediaInfo = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const endpoint = mediaType === 'audio' ? `/api/books/${bookId}/audio` : `/api/books/${bookId}/file`;\n      const data = await fetchApi(endpoint);\n      setMediaInfo({\n        uri: data.fileUrl,\n        type: determineMediaType(data.fileUrl),\n        title: data.title || 'Book Content',\n        creator: data.author\n      });\n    } catch (apiError) {\n      try {\n        const mockEndpoint = mediaType === 'audio' ? `/api/books/${bookId}/audio` : `/api/books/${bookId}/file`;\n        const mockData = await mockFetchApi(mockEndpoint);\n        let sampleUri = '';\n        if (mediaType === 'audio') {\n          sampleUri = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';\n        } else {\n          sampleUri = 'https://www.africau.edu/images/default/sample.pdf';\n        }\n        setMediaInfo({\n          uri: sampleUri,\n          type: mediaType === 'audio' ? MediaType.AUDIO : MediaType.PDF,\n          title: mockData?.title || 'Sample Book',\n          creator: mockData?.author || 'Sample Author'\n        });\n      } catch (mockError) {\n        console.error('Failed to load media info:', mockError);\n        setError('Failed to load media information. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleError = error => {\n    console.error('Media error:', error);\n    setError('An error occurred while loading the media. Please try again.');\n  };\n  const handleClose = () => {\n    navigation.goBack();\n  };\n  const handlePageChange = (page, totalPages) => {\n    console.log(`Page ${page} of ${totalPages}`);\n  };\n  if (loading) {\n    return _jsxDEV(SafeAreaView, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6200ee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Loading media...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !mediaInfo) {\n    return _jsxDEV(SafeAreaView, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error || 'Could not load media'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: () => navigation.goBack(),\n        style: styles.errorButton,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: mediaInfo.type === MediaType.PDF ? _jsxDEV(PDFViewer, {\n      uri: mediaInfo.uri,\n      title: mediaInfo.title,\n      onClose: handleClose,\n      onError: handleError,\n      bookId: bookId,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : mediaInfo.type === MediaType.AUDIO ? _jsxDEV(AudioPlayer, {\n      uri: mediaInfo.uri,\n      title: mediaInfo.title,\n      artist: mediaInfo.creator,\n      onClose: handleClose,\n      onError: handleError,\n      bookId: bookId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : _jsxDEV(SafeAreaView, {\n      style: styles.unsupportedContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.unsupportedText,\n        children: \"Unsupported media type. Please try another format.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: () => navigation.goBack(),\n        style: styles.unsupportedButton,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#B00020',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  errorButton: {\n    marginTop: 8\n  },\n  unsupportedContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: '#f5f5f5'\n  },\n  unsupportedText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  unsupportedButton: {\n    marginTop: 8\n  }\n});\nexport default MediaViewerScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","ActivityIndicator","SafeAreaView","Button","PDFViewer","AudioPlayer","useDispatch","useSelector","selectUser","fetchApi","mockFetchApi","jsxDEV","_jsxDEV","MediaType","MediaViewerScreen","navigation","route","bookId","mediaType","params","mediaInfo","setMediaInfo","loading","setLoading","error","setError","dispatch","user","determineMediaType","uri","UNKNOWN","lowerCaseUri","toLowerCase","endsWith","includes","PDF","AUDIO","fetchMediaInfo","endpoint","data","fileUrl","type","title","creator","author","apiError","mockEndpoint","mockData","sampleUri","mockError","console","handleError","handleClose","goBack","handlePageChange","page","totalPages","log","style","styles","loadingContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","loadingText","errorContainer","errorText","mode","onPress","errorButton","container","onClose","onError","onPageChange","artist","unsupportedContainer","unsupportedText","unsupportedButton","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","padding","textAlign","marginBottom"],"sources":["D:/All_Projects/KoachReadsFinal/client/src/screens/MediaViewerScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  ActivityIndicator, \n  Alert,\n  SafeAreaView\n} from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RouteProp } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { RootStackParamList } from '../../App';\nimport PDFViewer from '../components/PDFViewer';\nimport AudioPlayer from '../components/AudioPlayer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../store';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\n\ntype MediaViewerScreenNavigationProp = StackNavigationProp<RootStackParamList, 'MediaViewer'>;\ntype MediaViewerScreenRouteProp = RouteProp<RootStackParamList, 'MediaViewer'>;\n\nexport interface MediaViewerScreenProps {\n  navigation: MediaViewerScreenNavigationProp;\n  route: MediaViewerScreenRouteProp;\n}\n\nenum MediaType {\n  PDF = 'pdf',\n  AUDIO = 'audio',\n  UNKNOWN = 'unknown'\n}\n\ninterface MediaInfo {\n  uri: string;\n  type: MediaType;\n  title: string;\n  creator?: string;\n}\n\nconst MediaViewerScreen = ({ navigation, route }: MediaViewerScreenProps) => {\n  const { bookId, mediaType } = route.params;\n  const [mediaInfo, setMediaInfo] = useState<MediaInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const dispatch = useDispatch<AppDispatch>();\n  const user = useSelector(selectUser);\n\n  // Fonction pour déterminer le type de fichier à partir de l'URI\n  const determineMediaType = (uri: string): MediaType => {\n    if (!uri) return MediaType.UNKNOWN;\n    \n    const lowerCaseUri = uri.toLowerCase();\n    if (lowerCaseUri.endsWith('.pdf') || lowerCaseUri.includes('application/pdf')) {\n      return MediaType.PDF;\n    } else if (\n      lowerCaseUri.endsWith('.mp3') || \n      lowerCaseUri.endsWith('.m4a') || \n      lowerCaseUri.endsWith('.wav') || \n      lowerCaseUri.endsWith('.ogg')\n    ) {\n      return MediaType.AUDIO;\n    }\n    \n    // Utiliser le type spécifié si le type ne peut pas être déterminé à partir de l'URI\n    return mediaType === 'audio' ? MediaType.AUDIO : MediaType.PDF;\n  };\n\n  useEffect(() => {\n    fetchMediaInfo();\n  }, [bookId, mediaType]);\n\n  const fetchMediaInfo = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Try real API first\n      const endpoint = mediaType === 'audio' \n        ? `/api/books/${bookId}/audio` \n        : `/api/books/${bookId}/file`;\n      \n      const data = await fetchApi(endpoint);\n      \n      setMediaInfo({\n        uri: data.fileUrl,\n        type: determineMediaType(data.fileUrl),\n        title: data.title || 'Book Content',\n        creator: data.author\n      });\n    } catch (apiError) {\n      try {\n        // Fall back to mock data\n        const mockEndpoint = mediaType === 'audio' \n          ? `/api/books/${bookId}/audio` \n          : `/api/books/${bookId}/file`;\n        \n        const mockData = await mockFetchApi(mockEndpoint);\n        \n        // For mock data, create sample URLs\n        let sampleUri = '';\n        if (mediaType === 'audio') {\n          // Sample audio URL for testing\n          sampleUri = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';\n        } else {\n          // Sample PDF URL for testing\n          sampleUri = 'https://www.africau.edu/images/default/sample.pdf';\n        }\n        \n        setMediaInfo({\n          uri: sampleUri,\n          type: mediaType === 'audio' ? MediaType.AUDIO : MediaType.PDF,\n          title: mockData?.title || 'Sample Book',\n          creator: mockData?.author || 'Sample Author'\n        });\n      } catch (mockError) {\n        console.error('Failed to load media info:', mockError);\n        setError('Failed to load media information. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = (error: Error) => {\n    console.error('Media error:', error);\n    setError('An error occurred while loading the media. Please try again.');\n  };\n\n  const handleClose = () => {\n    navigation.goBack();\n  };\n\n  const handlePageChange = (page: number, totalPages: number) => {\n    // Here you could save reading progress\n    console.log(`Page ${page} of ${totalPages}`);\n  };\n\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#6200ee\" />\n        <Text style={styles.loadingText}>Loading media...</Text>\n      </SafeAreaView>\n    );\n  }\n\n  if (error || !mediaInfo) {\n    return (\n      <SafeAreaView style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error || 'Could not load media'}</Text>\n        <Button \n          mode=\"contained\" \n          onPress={() => navigation.goBack()}\n          style={styles.errorButton}\n        >\n          Go Back\n        </Button>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {mediaInfo.type === MediaType.PDF ? (\n        <PDFViewer \n          uri={mediaInfo.uri}\n          title={mediaInfo.title}\n          onClose={handleClose}\n          onError={handleError}\n          bookId={bookId}\n          onPageChange={handlePageChange}\n        />\n      ) : mediaInfo.type === MediaType.AUDIO ? (\n        <AudioPlayer \n          uri={mediaInfo.uri}\n          title={mediaInfo.title}\n          artist={mediaInfo.creator}\n          onClose={handleClose}\n          onError={handleError}\n          bookId={bookId}\n        />\n      ) : (\n        <SafeAreaView style={styles.unsupportedContainer}>\n          <Text style={styles.unsupportedText}>\n            Unsupported media type. Please try another format.\n          </Text>\n          <Button \n            mode=\"contained\" \n            onPress={() => navigation.goBack()}\n            style={styles.unsupportedButton}\n          >\n            Go Back\n          </Button>\n        </SafeAreaView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: '#f5f5f5',\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#B00020',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  errorButton: {\n    marginTop: 8,\n  },\n  unsupportedContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: '#f5f5f5',\n  },\n  unsupportedText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  unsupportedButton: {\n    marginTop: 8,\n  },\n});\n\nexport default MediaViewerScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,MAAA;AAanD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAU3CC,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA,EAATA,SAAS;AAad,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAA8B,CAAC,KAAK;EAC3E,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK,CAACG,MAAM;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAmB,IAAI,CAAC;EAClE,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM8B,QAAQ,GAAGpB,WAAW,CAAc,CAAC;EAC3C,MAAMqB,IAAI,GAAGpB,WAAW,CAACC,UAAU,CAAC;EAGpC,MAAMoB,kBAAkB,GAAIC,GAAW,IAAgB;IACrD,IAAI,CAACA,GAAG,EAAE,OAAOhB,SAAS,CAACiB,OAAO;IAElC,MAAMC,YAAY,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC;IACtC,IAAID,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,YAAY,CAACG,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MAC7E,OAAOrB,SAAS,CAACsB,GAAG;IACtB,CAAC,MAAM,IACLJ,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,IAC7BF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,IAC7BF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,IAC7BF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,EAC7B;MACA,OAAOpB,SAAS,CAACuB,KAAK;IACxB;IAGA,OAAOlB,SAAS,KAAK,OAAO,GAAGL,SAAS,CAACuB,KAAK,GAAGvB,SAAS,CAACsB,GAAG;EAChE,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdwC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACpB,MAAM,EAAEC,SAAS,CAAC,CAAC;EAEvB,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCd,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MAEF,MAAMa,QAAQ,GAAGpB,SAAS,KAAK,OAAO,GAClC,cAAcD,MAAM,QAAQ,GAC5B,cAAcA,MAAM,OAAO;MAE/B,MAAMsB,IAAI,GAAG,MAAM9B,QAAQ,CAAC6B,QAAQ,CAAC;MAErCjB,YAAY,CAAC;QACXQ,GAAG,EAAEU,IAAI,CAACC,OAAO;QACjBC,IAAI,EAAEb,kBAAkB,CAACW,IAAI,CAACC,OAAO,CAAC;QACtCE,KAAK,EAAEH,IAAI,CAACG,KAAK,IAAI,cAAc;QACnCC,OAAO,EAAEJ,IAAI,CAACK;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,QAAQ,EAAE;MACjB,IAAI;QAEF,MAAMC,YAAY,GAAG5B,SAAS,KAAK,OAAO,GACtC,cAAcD,MAAM,QAAQ,GAC5B,cAAcA,MAAM,OAAO;QAE/B,MAAM8B,QAAQ,GAAG,MAAMrC,YAAY,CAACoC,YAAY,CAAC;QAGjD,IAAIE,SAAS,GAAG,EAAE;QAClB,IAAI9B,SAAS,KAAK,OAAO,EAAE;UAEzB8B,SAAS,GAAG,+DAA+D;QAC7E,CAAC,MAAM;UAELA,SAAS,GAAG,mDAAmD;QACjE;QAEA3B,YAAY,CAAC;UACXQ,GAAG,EAAEmB,SAAS;UACdP,IAAI,EAAEvB,SAAS,KAAK,OAAO,GAAGL,SAAS,CAACuB,KAAK,GAAGvB,SAAS,CAACsB,GAAG;UAC7DO,KAAK,EAAEK,QAAQ,EAAEL,KAAK,IAAI,aAAa;UACvCC,OAAO,EAAEI,QAAQ,EAAEH,MAAM,IAAI;QAC/B,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOK,SAAS,EAAE;QAClBC,OAAO,CAAC1B,KAAK,CAAC,4BAA4B,EAAEyB,SAAS,CAAC;QACtDxB,QAAQ,CAAC,2DAA2D,CAAC;MACvE;IACF,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4B,WAAW,GAAI3B,KAAY,IAAK;IACpC0B,OAAO,CAAC1B,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpCC,QAAQ,CAAC,8DAA8D,CAAC;EAC1E,CAAC;EAED,MAAM2B,WAAW,GAAGA,CAAA,KAAM;IACxBrC,UAAU,CAACsC,MAAM,CAAC,CAAC;EACrB,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,IAAY,EAAEC,UAAkB,KAAK;IAE7DN,OAAO,CAACO,GAAG,CAAC,QAAQF,IAAI,OAAOC,UAAU,EAAE,CAAC;EAC9C,CAAC;EAED,IAAIlC,OAAO,EAAE;IACX,OACEV,OAAA,CAACV,YAAY;MAACwD,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,GAC3CjD,OAAA,CAACX,iBAAiB;QAAC6D,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClDvD,OAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACS,WAAY;QAAAP,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEnB;EAEA,IAAI3C,KAAK,IAAI,CAACJ,SAAS,EAAE;IACvB,OACER,OAAA,CAACV,YAAY;MAACwD,KAAK,EAAEC,MAAM,CAACU,cAAe;MAAAR,QAAA,GACzCjD,OAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACW,SAAU;QAAAT,QAAA,EAAErC,KAAK,IAAI;MAAsB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACvEvD,OAAA,CAACT,MAAM;QACLoE,IAAI,EAAC,WAAW;QAChBC,OAAO,EAAEA,CAAA,KAAMzD,UAAU,CAACsC,MAAM,CAAC,CAAE;QACnCK,KAAK,EAAEC,MAAM,CAACc,WAAY;QAAAZ,QAAA,EAC3B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEnB;EAEA,OACEvD,OAAA,CAACb,IAAI;IAAC2D,KAAK,EAAEC,MAAM,CAACe,SAAU;IAAAb,QAAA,EAC3BzC,SAAS,CAACqB,IAAI,KAAK5B,SAAS,CAACsB,GAAG,GAC/BvB,OAAA,CAACR,SAAS;MACRyB,GAAG,EAAET,SAAS,CAACS,GAAI;MACnBa,KAAK,EAAEtB,SAAS,CAACsB,KAAM;MACvBiC,OAAO,EAAEvB,WAAY;MACrBwB,OAAO,EAAEzB,WAAY;MACrBlC,MAAM,EAAEA,MAAO;MACf4D,YAAY,EAAEvB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,GACA/C,SAAS,CAACqB,IAAI,KAAK5B,SAAS,CAACuB,KAAK,GACpCxB,OAAA,CAACP,WAAW;MACVwB,GAAG,EAAET,SAAS,CAACS,GAAI;MACnBa,KAAK,EAAEtB,SAAS,CAACsB,KAAM;MACvBoC,MAAM,EAAE1D,SAAS,CAACuB,OAAQ;MAC1BgC,OAAO,EAAEvB,WAAY;MACrBwB,OAAO,EAAEzB,WAAY;MACrBlC,MAAM,EAAEA;IAAO;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,GAEFvD,OAAA,CAACV,YAAY;MAACwD,KAAK,EAAEC,MAAM,CAACoB,oBAAqB;MAAAlB,QAAA,GAC/CjD,OAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACqB,eAAgB;QAAAnB,QAAA,EAAC;MAErC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACPvD,OAAA,CAACT,MAAM;QACLoE,IAAI,EAAC,WAAW;QAChBC,OAAO,EAAEA,CAAA,KAAMzD,UAAU,CAACsC,MAAM,CAAC,CAAE;QACnCK,KAAK,EAAEC,MAAM,CAACsB,iBAAkB;QAAApB,QAAA,EACjC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAED,MAAMR,MAAM,GAAG7D,UAAU,CAACoF,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDxB,gBAAgB,EAAE;IAChBuB,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBF,eAAe,EAAE;EACnB,CAAC;EACDhB,WAAW,EAAE;IACXmB,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZzB,KAAK,EAAE;EACT,CAAC;EACDM,cAAc,EAAE;IACdc,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBG,OAAO,EAAE,EAAE;IACXL,eAAe,EAAE;EACnB,CAAC;EACDd,SAAS,EAAE;IACTkB,QAAQ,EAAE,EAAE;IACZzB,KAAK,EAAE,SAAS;IAChB2B,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDlB,WAAW,EAAE;IACXc,SAAS,EAAE;EACb,CAAC;EACDR,oBAAoB,EAAE;IACpBI,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBG,OAAO,EAAE,EAAE;IACXL,eAAe,EAAE;EACnB,CAAC;EACDJ,eAAe,EAAE;IACfQ,QAAQ,EAAE,EAAE;IACZzB,KAAK,EAAE,MAAM;IACb2B,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDV,iBAAiB,EAAE;IACjBM,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAezE,iBAAiB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}