{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\screens\\\\RegisterScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-paper/lib/module/components/TextInput/TextInput\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport HelperText from \"react-native-paper/lib/module/components/HelperText/HelperText\";\nimport { useAuth } from '../hooks/useAuth';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width,\n  height\n} = Dimensions.get('window');\nconst RegisterScreen = ({\n  navigation\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [confirmSecureTextEntry, setConfirmSecureTextEntry] = useState(true);\n  const [usernameError, setUsernameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const {\n    register,\n    user,\n    isLoading,\n    error\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      navigation.replace('Home');\n    }\n  }, [user, navigation]);\n  const validateForm = () => {\n    let isValid = true;\n    if (username.trim() === '') {\n      setUsernameError(t('auth.errorRequired'));\n      isValid = false;\n    } else {\n      setUsernameError('');\n    }\n    if (email.trim() === '') {\n      setEmailError(t('auth.errorRequired'));\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setEmailError(t('auth.errorInvalidEmail'));\n      isValid = false;\n    } else {\n      setEmailError('');\n    }\n    if (password === '') {\n      setPasswordError(t('auth.errorRequired'));\n      isValid = false;\n    } else if (password.length < 6) {\n      setPasswordError(t('auth.errorPasswordShort'));\n      isValid = false;\n    } else {\n      setPasswordError('');\n    }\n    if (confirmPassword === '') {\n      setConfirmPasswordError(t('auth.errorRequired'));\n      isValid = false;\n    } else if (confirmPassword !== password) {\n      setConfirmPasswordError(t('auth.errorPasswordsMatch'));\n      isValid = false;\n    } else {\n      setConfirmPasswordError('');\n    }\n    return isValid;\n  };\n  const handleRegister = async () => {\n    if (validateForm()) {\n      try {\n        await register({\n          username,\n          email,\n          password\n        });\n      } catch (err) {\n        console.error('Registration failed:', err);\n      }\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(StatusBar, {\n      barStyle: \"light-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), _jsxDEV(LinearGradient, {\n      colors: ['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.8)'],\n      style: styles.gradient,\n      children: _jsxDEV(KeyboardAvoidingView, {\n        behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n        style: styles.keyboardView,\n        children: _jsxDEV(ScrollView, {\n          contentContainerStyle: styles.scrollContainer,\n          keyboardShouldPersistTaps: \"handled\",\n          children: [_jsxDEV(View, {\n            style: styles.logoContainer,\n            children: [_jsxDEV(Image, {\n              source: require('../../assets/icon.png'),\n              style: styles.logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.appName,\n              children: t('common.appTitle')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.tagline,\n              children: t('auth.joinCommunity')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.formContainer,\n            children: [error && _jsxDEV(Text, {\n              style: styles.errorText,\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), _jsxDEV(TextInput, {\n              label: t('auth.username'),\n              value: username,\n              onChangeText: setUsername,\n              style: styles.input,\n              autoCapitalize: \"none\",\n              error: !!usernameError,\n              theme: {\n                colors: {\n                  primary: '#8A2BE2'\n                }\n              },\n              mode: \"outlined\",\n              left: _jsxDEV(TextInput.Icon, {\n                icon: \"account\",\n                color: \"#8A2BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), usernameError ? _jsxDEV(HelperText, {\n              type: \"error\",\n              visible: !!usernameError,\n              children: usernameError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this) : null, _jsxDEV(TextInput, {\n              label: t('auth.email'),\n              value: email,\n              onChangeText: setEmail,\n              style: styles.input,\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              error: !!emailError,\n              theme: {\n                colors: {\n                  primary: '#8A2BE2'\n                }\n              },\n              mode: \"outlined\",\n              left: _jsxDEV(TextInput.Icon, {\n                icon: \"email\",\n                color: \"#8A2BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), emailError ? _jsxDEV(HelperText, {\n              type: \"error\",\n              visible: !!emailError,\n              children: emailError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this) : null, _jsxDEV(TextInput, {\n              label: t('auth.password'),\n              value: password,\n              onChangeText: setPassword,\n              secureTextEntry: secureTextEntry,\n              style: styles.input,\n              error: !!passwordError,\n              theme: {\n                colors: {\n                  primary: '#8A2BE2'\n                }\n              },\n              mode: \"outlined\",\n              left: _jsxDEV(TextInput.Icon, {\n                icon: \"lock\",\n                color: \"#8A2BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 25\n              }, this),\n              right: _jsxDEV(TextInput.Icon, {\n                icon: secureTextEntry ? \"eye\" : \"eye-off\",\n                onPress: () => setSecureTextEntry(!secureTextEntry),\n                color: \"#8A2BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), passwordError ? _jsxDEV(HelperText, {\n              type: \"error\",\n              visible: !!passwordError,\n              children: passwordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this) : null, _jsxDEV(TextInput, {\n              label: t('auth.confirmPassword'),\n              value: confirmPassword,\n              onChangeText: setConfirmPassword,\n              secureTextEntry: confirmSecureTextEntry,\n              style: styles.input,\n              error: !!confirmPasswordError,\n              theme: {\n                colors: {\n                  primary: '#8A2BE2'\n                }\n              },\n              mode: \"outlined\",\n              left: _jsxDEV(TextInput.Icon, {\n                icon: \"lock-check\",\n                color: \"#8A2BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this),\n              right: _jsxDEV(TextInput.Icon, {\n                icon: confirmSecureTextEntry ? \"eye\" : \"eye-off\",\n                onPress: () => setConfirmSecureTextEntry(!confirmSecureTextEntry),\n                color: \"#8A2BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), confirmPasswordError ? _jsxDEV(HelperText, {\n              type: \"error\",\n              visible: !!confirmPasswordError,\n              children: confirmPasswordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this) : null, _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: handleRegister,\n              loading: isLoading,\n              disabled: isLoading,\n              style: styles.registerButton,\n              labelStyle: styles.registerButtonText,\n              contentStyle: styles.registerButtonContent,\n              color: \"#8A2BE2\",\n              children: t('auth.createAccount')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.loginContainer,\n              children: [_jsxDEV(Text, {\n                style: styles.loginText,\n                children: [t('auth.alreadyHaveAccount'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), _jsxDEV(TouchableOpacity, {\n                onPress: () => navigation.navigate('Login'),\n                children: _jsxDEV(Text, {\n                  style: styles.loginLink,\n                  children: t('auth.login')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  backgroundImage: {\n    width: '100%',\n    height: '100%'\n  },\n  gradient: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  keyboardView: {\n    flex: 1\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    paddingHorizontal: 24,\n    paddingTop: 60,\n    paddingBottom: 40\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'contain'\n  },\n  appName: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    marginTop: 16\n  },\n  tagline: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 8\n  },\n  formContainer: {\n    width: '100%',\n    maxWidth: 400,\n    alignSelf: 'center'\n  },\n  input: {\n    marginBottom: 16,\n    backgroundColor: 'rgba(255, 255, 255, 0.9)'\n  },\n  registerButton: {\n    borderRadius: 30,\n    marginTop: 8,\n    marginBottom: 24,\n    elevation: 4\n  },\n  registerButtonContent: {\n    paddingVertical: 8\n  },\n  registerButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  errorText: {\n    color: '#FF6B6B',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginVertical: 16\n  },\n  loginText: {\n    color: 'rgba(255, 255, 255, 0.8)'\n  },\n  loginLink: {\n    color: '#8A2BE2',\n    fontWeight: 'bold'\n  },\n  termsContainer: {\n    marginTop: 24,\n    paddingHorizontal: 16\n  },\n  termsText: {\n    color: 'rgba(255, 255, 255, 0.6)',\n    textAlign: 'center',\n    fontSize: 12\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","KeyboardAvoidingView","Platform","TouchableOpacity","Image","ScrollView","Dimensions","StatusBar","TextInput","Button","HelperText","useAuth","LinearGradient","useTranslation","jsxDEV","_jsxDEV","width","height","get","RegisterScreen","navigation","t","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","secureTextEntry","setSecureTextEntry","confirmSecureTextEntry","setConfirmSecureTextEntry","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","register","user","isLoading","error","replace","validateForm","isValid","trim","test","length","handleRegister","err","console","style","styles","container","children","barStyle","fileName","_jsxFileName","lineNumber","columnNumber","colors","gradient","behavior","OS","keyboardView","contentContainerStyle","scrollContainer","keyboardShouldPersistTaps","logoContainer","source","require","logo","appName","tagline","formContainer","errorText","label","value","onChangeText","input","autoCapitalize","theme","primary","mode","left","Icon","icon","color","type","visible","keyboardType","right","onPress","loading","disabled","registerButton","labelStyle","registerButtonText","contentStyle","registerButtonContent","loginContainer","loginText","navigate","loginLink","create","flex","backgroundColor","backgroundImage","flexGrow","paddingHorizontal","paddingTop","paddingBottom","alignItems","marginBottom","resizeMode","fontSize","fontWeight","marginTop","maxWidth","alignSelf","borderRadius","elevation","paddingVertical","textAlign","flexDirection","justifyContent","marginVertical","termsContainer","termsText"],"sources":["D:/All_Projects/Koach-Reader/client/src/screens/RegisterScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  KeyboardAvoidingView, \n  Platform, \n  TouchableOpacity,\n  Image,\n  ScrollView,\n  ImageBackground,\n  Dimensions,\n  StatusBar\n} from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useAuth } from '../hooks/useAuth';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../../App';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useTranslation } from 'react-i18next';\n\ntype RegisterScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Register'>;\n\ninterface RegisterScreenProps {\n  navigation: RegisterScreenNavigationProp;\n}\n\nconst { width, height } = Dimensions.get('window');\n\nconst RegisterScreen: React.FC<RegisterScreenProps> = ({ navigation }) => {\n  const { t } = useTranslation();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [confirmSecureTextEntry, setConfirmSecureTextEntry] = useState(true);\n  \n  // Form validation states\n  const [usernameError, setUsernameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  \n  const { register, user, isLoading, error } = useAuth();\n  \n  useEffect(() => {\n    // Redirect to Home if already logged in\n    if (user) {\n      navigation.replace('Home');\n    }\n  }, [user, navigation]);\n  \n  const validateForm = (): boolean => {\n    let isValid = true;\n    \n    // Username validation\n    if (username.trim() === '') {\n      setUsernameError(t('auth.errorRequired'));\n      isValid = false;\n    } else {\n      setUsernameError('');\n    }\n    \n    // Email validation\n    if (email.trim() === '') {\n      setEmailError(t('auth.errorRequired'));\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setEmailError(t('auth.errorInvalidEmail'));\n      isValid = false;\n    } else {\n      setEmailError('');\n    }\n    \n    // Password validation\n    if (password === '') {\n      setPasswordError(t('auth.errorRequired'));\n      isValid = false;\n    } else if (password.length < 6) {\n      setPasswordError(t('auth.errorPasswordShort'));\n      isValid = false;\n    } else {\n      setPasswordError('');\n    }\n    \n    // Confirm password validation\n    if (confirmPassword === '') {\n      setConfirmPasswordError(t('auth.errorRequired'));\n      isValid = false;\n    } else if (confirmPassword !== password) {\n      setConfirmPasswordError(t('auth.errorPasswordsMatch'));\n      isValid = false;\n    } else {\n      setConfirmPasswordError('');\n    }\n    \n    return isValid;\n  };\n  \n  const handleRegister = async () => {\n    if (validateForm()) {\n      try {\n        await register({ username, email, password });\n      } catch (err) {\n        // Error will be handled by the useAuth hook\n        console.error('Registration failed:', err);\n      }\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <StatusBar barStyle=\"light-content\" />\n      {/* <ImageBackground\n        source={require('../../assets/splash.png')}\n        style={styles.backgroundImage}\n        resizeMode=\"cover\"\n      > */}\n        <LinearGradient\n          colors={['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.8)']}\n          style={styles.gradient}\n        >\n          <KeyboardAvoidingView\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n            style={styles.keyboardView}\n          >\n            <ScrollView\n              contentContainerStyle={styles.scrollContainer}\n              keyboardShouldPersistTaps=\"handled\"\n            >\n              <View style={styles.logoContainer}>\n                <Image\n                  source={require('../../assets/icon.png')}\n                  style={styles.logo}\n                />\n                <Text style={styles.appName}>{t('common.appTitle')}</Text>\n                <Text style={styles.tagline}>{t('auth.joinCommunity')}</Text>\n              </View>\n              \n              <View style={styles.formContainer}>\n                {error && (\n                  <Text style={styles.errorText}>{error}</Text>\n                )}\n                \n                <TextInput\n                  label={t('auth.username')}\n                  value={username}\n                  onChangeText={setUsername}\n                  style={styles.input}\n                  autoCapitalize=\"none\"\n                  error={!!usernameError}\n                  theme={{ colors: { primary: '#8A2BE2' } }}\n                  mode=\"outlined\"\n                  left={<TextInput.Icon icon=\"account\" color=\"#8A2BE2\" />}\n                />\n                {usernameError ? (\n                  <HelperText type=\"error\" visible={!!usernameError}>\n                    {usernameError}\n                  </HelperText>\n                ) : null}\n                \n                <TextInput\n                  label={t('auth.email')}\n                  value={email}\n                  onChangeText={setEmail}\n                  style={styles.input}\n                  autoCapitalize=\"none\"\n                  keyboardType=\"email-address\"\n                  error={!!emailError}\n                  theme={{ colors: { primary: '#8A2BE2' } }}\n                  mode=\"outlined\"\n                  left={<TextInput.Icon icon=\"email\" color=\"#8A2BE2\" />}\n                />\n                {emailError ? (\n                  <HelperText type=\"error\" visible={!!emailError}>\n                    {emailError}\n                  </HelperText>\n                ) : null}\n                \n                <TextInput\n                  label={t('auth.password')}\n                  value={password}\n                  onChangeText={setPassword}\n                  secureTextEntry={secureTextEntry}\n                  style={styles.input}\n                  error={!!passwordError}\n                  theme={{ colors: { primary: '#8A2BE2' } }}\n                  mode=\"outlined\"\n                  left={<TextInput.Icon icon=\"lock\" color=\"#8A2BE2\" />}\n                  right={\n                    <TextInput.Icon \n                      icon={secureTextEntry ? \"eye\" : \"eye-off\"} \n                      onPress={() => setSecureTextEntry(!secureTextEntry)}\n                      color=\"#8A2BE2\"\n                    />\n                  }\n                />\n                {passwordError ? (\n                  <HelperText type=\"error\" visible={!!passwordError}>\n                    {passwordError}\n                  </HelperText>\n                ) : null}\n                \n                <TextInput\n                  label={t('auth.confirmPassword')}\n                  value={confirmPassword}\n                  onChangeText={setConfirmPassword}\n                  secureTextEntry={confirmSecureTextEntry}\n                  style={styles.input}\n                  error={!!confirmPasswordError}\n                  theme={{ colors: { primary: '#8A2BE2' } }}\n                  mode=\"outlined\"\n                  left={<TextInput.Icon icon=\"lock-check\" color=\"#8A2BE2\" />}\n                  right={\n                    <TextInput.Icon \n                      icon={confirmSecureTextEntry ? \"eye\" : \"eye-off\"} \n                      onPress={() => setConfirmSecureTextEntry(!confirmSecureTextEntry)}\n                      color=\"#8A2BE2\"\n                    />\n                  }\n                />\n                {confirmPasswordError ? (\n                  <HelperText type=\"error\" visible={!!confirmPasswordError}>\n                    {confirmPasswordError}\n                  </HelperText>\n                ) : null}\n                \n                <Button \n                  mode=\"contained\" \n                  onPress={handleRegister} \n                  loading={isLoading}\n                  disabled={isLoading}\n                  style={styles.registerButton}\n                  labelStyle={styles.registerButtonText}\n                  contentStyle={styles.registerButtonContent}\n                  color=\"#8A2BE2\"\n                >\n                  {t('auth.createAccount')}\n                </Button>\n                \n                <View style={styles.loginContainer}>\n                  <Text style={styles.loginText}>{t('auth.alreadyHaveAccount')} </Text>\n                  <TouchableOpacity onPress={() => navigation.navigate('Login')}>\n                    <Text style={styles.loginLink}>{t('auth.login')}</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </ScrollView>\n          </KeyboardAvoidingView>\n        </LinearGradient>\n      {/* </ImageBackground> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  backgroundImage: {\n    width: '100%',\n    height: '100%',\n  },\n  gradient: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  keyboardView: {\n    flex: 1,\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    paddingHorizontal: 24,\n    paddingTop: 60,\n    paddingBottom: 40,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'contain',\n  },\n  appName: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    marginTop: 16,\n  },\n  tagline: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 8,\n  },\n  formContainer: {\n    width: '100%',\n    maxWidth: 400,\n    alignSelf: 'center',\n  },\n  input: {\n    marginBottom: 16,\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  },\n  registerButton: {\n    borderRadius: 30,\n    marginTop: 8,\n    marginBottom: 24,\n    elevation: 4,\n  },\n  registerButtonContent: {\n    paddingVertical: 8,\n  },\n  registerButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: '#FF6B6B',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  loginText: {\n    color: 'rgba(255, 255, 255, 0.8)',\n  },\n  loginLink: {\n    color: '#8A2BE2',\n    fontWeight: 'bold',\n  },\n  termsContainer: {\n    marginTop: 24,\n    paddingHorizontal: 16,\n  },\n  termsText: {\n    color: 'rgba(255, 255, 255, 0.6)',\n    textAlign: 'center',\n    fontSize: 12,\n  },\n});\n\nexport default RegisterScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}