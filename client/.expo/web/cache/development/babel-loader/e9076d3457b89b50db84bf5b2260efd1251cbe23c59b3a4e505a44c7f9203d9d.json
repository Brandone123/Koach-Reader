{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\KoachReadsFinal\\\\client\\\\src\\\\screens\\\\ChallengeDetailScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport { Title } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport * as Avatar from \"react-native-paper/lib/module/components/Avatar/Avatar\";\nimport Chip from \"react-native-paper/lib/module/components/Chip/Chip\";\nimport ProgressBar from \"react-native-paper/lib/module/components/ProgressBar\";\nimport Divider from \"react-native-paper/lib/module/components/Divider\";\nimport TextInput from \"react-native-paper/lib/module/components/TextInput/TextInput\";\nimport IconButton from \"react-native-paper/lib/module/components/IconButton/IconButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengeDetailScreen = ({\n  navigation,\n  route\n}) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const {\n    challengeId\n  } = route.params;\n  const [challenge, setChallenge] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [progressUpdateMode, setProgressUpdateMode] = useState(false);\n  const [newProgress, setNewProgress] = useState('');\n  const [newComment, setNewComment] = useState('');\n  const [activeTab, setActiveTab] = useState('details');\n  const [isShareLoading, setIsShareLoading] = useState(false);\n  useEffect(() => {\n    fetchChallengeDetails();\n  }, [challengeId]);\n  const fetchChallengeDetails = async () => {\n    setIsLoading(true);\n    try {\n      const data = await fetchApi(`/api/challenges/${challengeId}`);\n      setChallenge(data);\n      const participantsData = await fetchApi(`/api/challenges/${challengeId}/participants`);\n      setParticipants(participantsData);\n      const commentsData = await fetchApi(`/api/challenges/${challengeId}/comments`);\n      setComments(commentsData);\n    } catch (error) {\n      try {\n        const mockData = await mockFetchApi(`/api/challenges/${challengeId}`);\n        const mockChallenge = {\n          id: challengeId,\n          title: \"30-Day Reading Challenge\",\n          description: \"Read every day for 30 days and track your progress!\",\n          creatorId: 2,\n          creatorName: \"bookworm42\",\n          startDate: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n          endDate: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),\n          goal: 500,\n          goalType: \"pages\",\n          isPrivate: false,\n          participantCount: 8,\n          myProgress: 220,\n          status: \"active\",\n          createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n          updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n        };\n        setChallenge(mockChallenge);\n        const mockParticipants = [{\n          id: 1,\n          userId: 1,\n          username: \"demo\",\n          progress: 220,\n          progressPercentage: 44,\n          status: \"active\",\n          joinedAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString()\n        }, {\n          id: 2,\n          userId: 2,\n          username: \"bookworm42\",\n          progress: 350,\n          progressPercentage: 70,\n          status: \"active\",\n          joinedAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString()\n        }, {\n          id: 3,\n          userId: 3,\n          username: \"readaholic\",\n          progress: 500,\n          progressPercentage: 100,\n          status: \"completed\",\n          joinedAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000).toISOString()\n        }, {\n          id: 4,\n          userId: 4,\n          username: \"bibliophile\",\n          progress: 320,\n          progressPercentage: 64,\n          status: \"active\",\n          joinedAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString()\n        }, {\n          id: 5,\n          userId: 5,\n          username: \"kindlemaster\",\n          progress: 180,\n          progressPercentage: 36,\n          status: \"active\",\n          joinedAt: new Date(Date.now() - 11 * 24 * 60 * 60 * 1000).toISOString()\n        }];\n        setParticipants(mockParticipants);\n        const mockComments = [{\n          id: 1,\n          userId: 2,\n          username: \"bookworm42\",\n          challengeId: challengeId,\n          content: \"Let's all try to read daily and support each other!\",\n          createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString()\n        }, {\n          id: 2,\n          userId: 3,\n          username: \"readaholic\",\n          challengeId: challengeId,\n          content: \"Just finished! It was a great challenge, thanks for organizing!\",\n          createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n        }, {\n          id: 3,\n          userId: 5,\n          username: \"kindlemaster\",\n          challengeId: challengeId,\n          content: \"I'm finding it harder than expected, but I'm not giving up!\",\n          createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString()\n        }];\n        setComments(mockComments);\n      } catch (mockError) {\n        console.error('Failed to fetch challenge details:', mockError);\n        Alert.alert('Error', 'Failed to load challenge details');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const updateProgress = async () => {\n    if (!newProgress || isNaN(Number(newProgress)) || Number(newProgress) < 0) {\n      Alert.alert('Error', 'Please enter a valid progress value');\n      return;\n    }\n    if (!challenge) return;\n    const progress = Number(newProgress);\n    setIsLoading(true);\n    try {\n      await fetchApi(`/api/challenges/${challengeId}/progress`, {\n        method: 'POST',\n        body: {\n          progress\n        }\n      });\n      setChallenge(prev => prev ? Object.assign({}, prev, {\n        myProgress: progress\n      }) : null);\n      setParticipants(prev => prev.map(p => p.userId === user?.id ? Object.assign({}, p, {\n        progress,\n        progressPercentage: Math.min(100, Math.round(progress / (challenge?.goal || 1) * 100)),\n        status: progress >= (challenge?.goal || 0) ? 'completed' : 'active'\n      }) : p));\n      setProgressUpdateMode(false);\n      setNewProgress('');\n      Alert.alert('Success', 'Progress updated successfully!');\n    } catch (error) {\n      try {\n        const updatedProgress = progress;\n        const progressPercentage = Math.min(100, Math.round(progress / (challenge?.goal || 1) * 100));\n        const newStatus = progress >= (challenge?.goal || 0) ? 'completed' : 'active';\n        setChallenge(prev => prev ? Object.assign({}, prev, {\n          myProgress: updatedProgress,\n          status: newStatus\n        }) : null);\n        setParticipants(prev => prev.map(p => p.userId === user?.id ? Object.assign({}, p, {\n          progress: updatedProgress,\n          progressPercentage,\n          status: newStatus\n        }) : p));\n        setProgressUpdateMode(false);\n        setNewProgress('');\n        Alert.alert('Success', 'Progress updated successfully!');\n      } catch (mockError) {\n        console.error('Failed to update progress:', mockError);\n        Alert.alert('Error', 'Failed to update progress');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const addComment = async () => {\n    if (!newComment.trim()) {\n      Alert.alert('Error', 'Please enter a comment');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetchApi(`/api/challenges/${challengeId}/comments`, {\n        method: 'POST',\n        body: {\n          content: newComment\n        }\n      });\n      setComments(prev => [response, ...prev]);\n      setNewComment('');\n    } catch (error) {\n      try {\n        const mockComment = {\n          id: comments.length + 1,\n          userId: user?.id || 0,\n          username: user?.username || 'Anonymous',\n          challengeId,\n          content: newComment,\n          createdAt: new Date().toISOString()\n        };\n        setComments(prev => [mockComment, ...prev]);\n        setNewComment('');\n      } catch (mockError) {\n        console.error('Failed to add comment:', mockError);\n        Alert.alert('Error', 'Failed to add comment');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  const formatCommentDate = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now.getTime() - date.getTime());\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays === 0) {\n      return 'Today';\n    } else if (diffDays === 1) {\n      return 'Yesterday';\n    } else if (diffDays < 7) {\n      return `${diffDays} days ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n  const getTimeRemaining = () => {\n    if (!challenge) return null;\n    const endDate = new Date(challenge.endDate);\n    const now = new Date();\n    if (now > endDate) {\n      return 'Challenge ended';\n    }\n    const diffTime = Math.abs(endDate.getTime() - now.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return `${diffDays} days remaining`;\n  };\n  const getGoalTypeLabel = type => {\n    switch (type) {\n      case 'pages':\n        return 'pages';\n      case 'books':\n        return 'books';\n      case 'minutes':\n        return 'minutes of reading';\n    }\n  };\n  const getUserRank = () => {\n    if (!user || !participants.length) return null;\n    const sortedParticipants = [...participants].sort((a, b) => b.progress - a.progress);\n    const userIndex = sortedParticipants.findIndex(p => p.userId === user.id);\n    if (userIndex === -1) return null;\n    return userIndex + 1;\n  };\n  const shareChallenge = async () => {\n    if (!challenge) return;\n    setIsShareLoading(true);\n    try {\n      const message = `Join me in the \"${challenge.title}\" reading challenge on Koach! Goal: ${challenge.goal} ${getGoalTypeLabel(challenge.goalType)}. ${getTimeRemaining()}!`;\n      const result = await Share.share({\n        message,\n        title: `Koach Reading Challenge: ${challenge.title}`\n      });\n      if (result.action === Share.sharedAction) {\n        if (result.activityType) {\n          console.log(`Shared via ${result.activityType}`);\n        } else {\n          console.log('Shared successfully');\n        }\n      } else if (result.action === Share.dismissedAction) {\n        console.log('Share dismissed');\n      }\n    } catch (error) {\n      console.error('Error sharing:', error);\n      Alert.alert('Share Error', 'There was a problem sharing this challenge');\n    } finally {\n      setIsShareLoading(false);\n    }\n  };\n  const renderParticipant = ({\n    item,\n    index\n  }) => {\n    const isCurrentUser = item.userId === user?.id;\n    return _jsxDEV(Card, {\n      style: [styles.participantCard, isCurrentUser && styles.currentUserCard],\n      children: _jsxDEV(Card.Content, {\n        style: styles.participantContent,\n        children: [_jsxDEV(View, {\n          style: styles.participantRank,\n          children: _jsxDEV(Avatar.Text, {\n            size: 40,\n            label: (index + 1).toString(),\n            style: [styles.rankAvatar, index === 0 ? styles.firstRankAvatar : index === 1 ? styles.secondRankAvatar : index === 2 ? styles.thirdRankAvatar : styles.otherRankAvatar]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.participantInfo,\n          children: [_jsxDEV(Text, {\n            style: [styles.participantName, isCurrentUser && styles.currentUserText],\n            children: [item.username, \" \", isCurrentUser && '(You)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.progressInfo,\n            children: [_jsxDEV(Text, {\n              style: styles.progressValue,\n              children: [item.progress, \" / \", challenge?.goal, \" \", challenge?.goalType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), _jsxDEV(ProgressBar, {\n              progress: item.progressPercentage / 100,\n              color: item.status === 'completed' ? '#4CAF50' : '#6200ee',\n              style: styles.progressBar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), item.status === 'completed' && _jsxDEV(Chip, {\n            icon: \"trophy\",\n            style: styles.completedChip,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this);\n  };\n  const renderComment = ({\n    item\n  }) => {\n    const isCurrentUser = item.userId === user?.id;\n    return _jsxDEV(Card, {\n      style: [styles.commentCard, isCurrentUser && styles.currentUserCommentCard],\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(View, {\n          style: styles.commentHeader,\n          children: [_jsxDEV(Text, {\n            style: [styles.commentUsername, isCurrentUser && styles.currentUserText],\n            children: [item.username, \" \", isCurrentUser && '(You)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.commentDate,\n            children: formatCommentDate(item.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.commentContent,\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this);\n  };\n  if (isLoading && !challenge) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6200ee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Loading challenge details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this);\n  }\n  if (!challenge) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: \"Challenge not found or an error occurred.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: () => navigation.goBack(),\n        style: styles.backButton,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(View, {\n        style: styles.titleContainer,\n        children: [_jsxDEV(Title, {\n          style: styles.title,\n          children: challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), _jsxDEV(IconButton, {\n          icon: \"share\",\n          color: \"white\",\n          size: 22,\n          onPress: shareChallenge,\n          disabled: isShareLoading,\n          loading: isShareLoading,\n          style: styles.shareButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.statsContainer,\n        children: [_jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statValue,\n            children: participants.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statValue,\n            children: challenge.goalType === 'pages' ? challenge.goal : challenge.goal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: getGoalTypeLabel(challenge.goalType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statValue,\n            children: getTimeRemaining()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.tabsContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          style: [styles.tab, activeTab === 'details' && styles.activeTab],\n          onPress: () => setActiveTab('details'),\n          children: _jsxDEV(Text, {\n            style: [styles.tabText, activeTab === 'details' && styles.activeTabText],\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.tab, activeTab === 'participants' && styles.activeTab],\n          onPress: () => setActiveTab('participants'),\n          children: _jsxDEV(Text, {\n            style: [styles.tabText, activeTab === 'participants' && styles.activeTabText],\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.tab, activeTab === 'comments' && styles.activeTab],\n          onPress: () => setActiveTab('comments'),\n          children: _jsxDEV(Text, {\n            style: [styles.tabText, activeTab === 'comments' && styles.activeTabText],\n            children: \"Discussion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), activeTab === 'details' && _jsxDEV(ScrollView, {\n      style: styles.scrollView,\n      children: _jsxDEV(Card, {\n        style: styles.detailsCard,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Text, {\n            style: styles.description,\n            children: challenge.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this), _jsxDEV(Divider, {\n            style: styles.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"Created by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: challenge.creatorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"Start Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: formatDate(challenge.startDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: formatDate(challenge.endDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), challenge.bookTitle && _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"Book:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: challenge.bookTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 17\n          }, this), challenge.categoryName && _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: challenge.categoryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), _jsxDEV(Divider, {\n            style: styles.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.yourProgressLabel,\n            children: \"Your Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), challenge.status === 'active' ? _jsxDEV(View, {\n            children: [_jsxDEV(View, {\n              style: styles.progressContainer,\n              children: [_jsxDEV(Text, {\n                style: styles.progressText,\n                children: [challenge.myProgress || 0, \" / \", challenge.goal, \" \", getGoalTypeLabel(challenge.goalType), \" \", \"(\", Math.round((challenge.myProgress || 0) / challenge.goal * 100), \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this), _jsxDEV(ProgressBar, {\n                progress: (challenge.myProgress || 0) / challenge.goal,\n                color: (challenge.myProgress || 0) >= challenge.goal ? '#4CAF50' : '#6200ee',\n                style: styles.progressBar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this), getUserRank() !== null && _jsxDEV(View, {\n              style: styles.rankInfo,\n              children: _jsxDEV(Text, {\n                style: styles.rankText,\n                children: [\"Your Rank: \", getUserRank(), \" of \", participants.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 21\n            }, this), progressUpdateMode ? _jsxDEV(View, {\n              style: styles.updateProgressContainer,\n              children: [_jsxDEV(TextInput, {\n                label: `Your progress (${getGoalTypeLabel(challenge.goalType)})`,\n                value: newProgress,\n                onChangeText: setNewProgress,\n                keyboardType: \"numeric\",\n                style: styles.progressInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 23\n              }, this), _jsxDEV(View, {\n                style: styles.updateButtons,\n                children: [_jsxDEV(Button, {\n                  mode: \"outlined\",\n                  onPress: () => {\n                    setProgressUpdateMode(false);\n                    setNewProgress('');\n                  },\n                  style: [styles.updateButton, {\n                    marginRight: 8\n                  }],\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 25\n                }, this), _jsxDEV(Button, {\n                  mode: \"contained\",\n                  onPress: updateProgress,\n                  style: styles.updateButton,\n                  loading: isLoading,\n                  disabled: isLoading,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 21\n            }, this) : _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: () => {\n                setProgressUpdateMode(true);\n                setNewProgress(challenge.myProgress?.toString() || '0');\n              },\n              icon: \"pencil\",\n              style: styles.updateProgressButton,\n              children: \"Update Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }, this) : challenge.status === 'completed' ? _jsxDEV(View, {\n            style: styles.completedContainer,\n            children: [_jsxDEV(Avatar.Icon, {\n              size: 60,\n              icon: \"trophy\",\n              style: styles.completedIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.completedText,\n              children: \"Congratulations! You've completed this challenge!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.completedSubtext,\n              children: [\"Final progress: \", challenge.myProgress, \" / \", challenge.goal, \" \", getGoalTypeLabel(challenge.goalType)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 17\n          }, this) : _jsxDEV(View, {\n            style: styles.notJoinedContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.notJoinedText,\n              children: \"You're not participating in this challenge yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 19\n            }, this), _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: () => {\n                Alert.alert('Join Challenge', 'This would join the challenge in a real implementation');\n              },\n              style: styles.joinButton,\n              children: \"Join Challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 9\n    }, this), activeTab === 'participants' && _jsxDEV(View, {\n      style: styles.participantsContainer,\n      children: participants.length > 0 ? _jsxDEV(FlatList, {\n        data: [...participants].sort((a, b) => b.progress - a.progress),\n        renderItem: renderParticipant,\n        keyExtractor: item => item.id.toString(),\n        contentContainerStyle: styles.participantsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 13\n      }, this) : _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"No participants in this challenge yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }, this), activeTab === 'comments' && _jsxDEV(View, {\n      style: styles.commentsContainer,\n      children: [_jsxDEV(Card, {\n        style: styles.commentInputCard,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(TextInput, {\n            label: \"Add a comment\",\n            value: newComment,\n            onChangeText: setNewComment,\n            multiline: true,\n            numberOfLines: 2,\n            style: styles.commentInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this), _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: addComment,\n            style: styles.addCommentButton,\n            disabled: !newComment.trim() || isLoading,\n            loading: isLoading,\n            icon: \"send\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 11\n      }, this), comments.length > 0 ? _jsxDEV(FlatList, {\n        data: comments,\n        renderItem: renderComment,\n        keyExtractor: item => item.id.toString(),\n        contentContainerStyle: styles.commentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 13\n      }, this) : _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"No comments yet. Be the first to start the discussion!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#6200ee',\n    padding: 24,\n    paddingTop: 20,\n    paddingBottom: 0\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  title: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  shareButton: {\n    margin: 0\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginVertical: 16\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statValue: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  statLabel: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 12,\n    marginTop: 2\n  },\n  tabsContainer: {\n    flexDirection: 'row',\n    marginTop: 8\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    borderBottomWidth: 3,\n    borderBottomColor: 'transparent'\n  },\n  activeTab: {\n    borderBottomColor: 'white'\n  },\n  tabText: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontWeight: '500'\n  },\n  activeTabText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  scrollView: {\n    flex: 1\n  },\n  detailsCard: {\n    margin: 16,\n    borderRadius: 12,\n    elevation: 3\n  },\n  description: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    marginBottom: 16\n  },\n  divider: {\n    marginVertical: 16\n  },\n  detailRow: {\n    flexDirection: 'row',\n    marginBottom: 8\n  },\n  detailLabel: {\n    width: 100,\n    fontWeight: 'bold',\n    color: '#666'\n  },\n  detailValue: {\n    flex: 1,\n    color: '#333'\n  },\n  yourProgressLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    color: '#333'\n  },\n  progressContainer: {\n    marginBottom: 16\n  },\n  progressText: {\n    marginBottom: 4,\n    fontSize: 14,\n    color: '#555'\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4\n  },\n  rankInfo: {\n    marginBottom: 16\n  },\n  rankText: {\n    fontSize: 14,\n    color: '#6200ee',\n    fontWeight: 'bold'\n  },\n  updateProgressContainer: {\n    marginBottom: 16\n  },\n  progressInput: {\n    backgroundColor: 'white',\n    marginBottom: 12\n  },\n  updateButtons: {\n    flexDirection: 'row'\n  },\n  updateButton: {\n    flex: 1\n  },\n  updateProgressButton: {\n    marginBottom: 16\n  },\n  completedContainer: {\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  completedIcon: {\n    backgroundColor: '#4CAF50',\n    marginBottom: 12\n  },\n  completedText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  completedSubtext: {\n    fontSize: 14,\n    color: '#388E3C',\n    textAlign: 'center'\n  },\n  notJoinedContainer: {\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#F5F5F5',\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  notJoinedText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 12\n  },\n  joinButton: {\n    marginTop: 8\n  },\n  participantsContainer: {\n    flex: 1\n  },\n  participantsList: {\n    padding: 16\n  },\n  participantCard: {\n    marginBottom: 12,\n    borderRadius: 12,\n    elevation: 2\n  },\n  currentUserCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#6200ee'\n  },\n  participantContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  participantRank: {\n    marginRight: 16\n  },\n  rankAvatar: {\n    marginRight: 8\n  },\n  firstRankAvatar: {\n    backgroundColor: '#FFD700'\n  },\n  secondRankAvatar: {\n    backgroundColor: '#C0C0C0'\n  },\n  thirdRankAvatar: {\n    backgroundColor: '#CD7F32'\n  },\n  otherRankAvatar: {\n    backgroundColor: '#9E9E9E'\n  },\n  participantInfo: {\n    flex: 1\n  },\n  participantName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  currentUserText: {\n    color: '#6200ee'\n  },\n  progressInfo: {\n    marginBottom: 4\n  },\n  progressValue: {\n    fontSize: 14,\n    color: '#555',\n    marginBottom: 4\n  },\n  completedChip: {\n    backgroundColor: '#E8F5E9',\n    alignSelf: 'flex-start',\n    marginTop: 4\n  },\n  commentsContainer: {\n    flex: 1\n  },\n  commentInputCard: {\n    margin: 16,\n    marginBottom: 8,\n    borderRadius: 12,\n    elevation: 3\n  },\n  commentInput: {\n    backgroundColor: 'white',\n    marginBottom: 12\n  },\n  addCommentButton: {\n    alignSelf: 'flex-end'\n  },\n  commentsList: {\n    padding: 16,\n    paddingTop: 8\n  },\n  commentCard: {\n    marginBottom: 12,\n    borderRadius: 12,\n    elevation: 2\n  },\n  currentUserCommentCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#6200ee'\n  },\n  commentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  commentUsername: {\n    fontWeight: 'bold',\n    fontSize: 14\n  },\n  commentDate: {\n    fontSize: 12,\n    color: '#888'\n  },\n  commentContent: {\n    fontSize: 14,\n    lineHeight: 20,\n    color: '#333'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#B00020',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  backButton: {\n    marginTop: 8\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center'\n  }\n});\nexport default ChallengeDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","ScrollView","ActivityIndicator","TouchableOpacity","Alert","FlatList","Share","Card","Title","Button","Avatar","Chip","ProgressBar","Divider","TextInput","IconButton","useDispatch","useSelector","selectUser","fetchApi","mockFetchApi","jsxDEV","_jsxDEV","ChallengeDetailScreen","navigation","route","dispatch","user","challengeId","params","challenge","setChallenge","participants","setParticipants","comments","setComments","isLoading","setIsLoading","progressUpdateMode","setProgressUpdateMode","newProgress","setNewProgress","newComment","setNewComment","activeTab","setActiveTab","isShareLoading","setIsShareLoading","fetchChallengeDetails","data","participantsData","commentsData","error","mockData","mockChallenge","id","title","description","creatorId","creatorName","startDate","Date","now","toISOString","endDate","goal","goalType","isPrivate","participantCount","myProgress","status","createdAt","updatedAt","mockParticipants","userId","username","progress","progressPercentage","joinedAt","mockComments","content","mockError","console","alert","updateProgress","isNaN","Number","method","body","prev","Object","assign","map","p","Math","min","round","updatedProgress","newStatus","addComment","trim","response","mockComment","length","formatDate","dateString","date","toLocaleDateString","formatCommentDate","diffTime","abs","getTime","diffDays","floor","getTimeRemaining","ceil","getGoalTypeLabel","type","getUserRank","sortedParticipants","sort","a","b","userIndex","findIndex","shareChallenge","message","result","share","action","sharedAction","activityType","log","dismissedAction","renderParticipant","item","index","isCurrentUser","style","styles","participantCard","currentUserCard","children","Content","participantContent","participantRank","size","label","toString","rankAvatar","firstRankAvatar","secondRankAvatar","thirdRankAvatar","otherRankAvatar","fileName","_jsxFileName","lineNumber","columnNumber","participantInfo","participantName","currentUserText","progressInfo","progressValue","color","progressBar","icon","completedChip","renderComment","commentCard","currentUserCommentCard","commentHeader","commentUsername","commentDate","commentContent","loadingContainer","loadingText","errorContainer","errorText","mode","onPress","goBack","backButton","container","header","titleContainer","disabled","loading","shareButton","statsContainer","statItem","statValue","statLabel","tabsContainer","tab","tabText","activeTabText","scrollView","detailsCard","divider","detailRow","detailLabel","detailValue","bookTitle","categoryName","yourProgressLabel","progressContainer","progressText","rankInfo","rankText","updateProgressContainer","value","onChangeText","keyboardType","progressInput","updateButtons","updateButton","marginRight","updateProgressButton","completedContainer","Icon","completedIcon","completedText","completedSubtext","notJoinedContainer","notJoinedText","joinButton","participantsContainer","renderItem","keyExtractor","contentContainerStyle","participantsList","emptyContainer","emptyText","commentsContainer","commentInputCard","multiline","numberOfLines","commentInput","addCommentButton","commentsList","create","flex","backgroundColor","padding","paddingTop","paddingBottom","flexDirection","justifyContent","alignItems","fontSize","fontWeight","margin","marginVertical","marginTop","paddingVertical","borderBottomWidth","borderBottomColor","borderRadius","elevation","lineHeight","marginBottom","width","height","textAlign","borderLeftWidth","borderLeftColor","alignSelf"],"sources":["D:/All_Projects/KoachReadsFinal/client/src/screens/ChallengeDetailScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  ActivityIndicator,\n  TouchableOpacity,\n  Alert,\n  FlatList,\n  Share\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Avatar,\n  Chip,\n  ProgressBar,\n  Divider,\n  TextInput,\n  IconButton,\n  List\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RouteProp } from '@react-navigation/native';\nimport { RootStackParamList } from '../../App';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../store';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\n\ntype ChallengeDetailScreenNavigationProp = StackNavigationProp<RootStackParamList, 'ChallengeDetail'>;\ntype ChallengeDetailScreenRouteProp = RouteProp<RootStackParamList, 'ChallengeDetail'>;\n\nexport interface ChallengeDetailScreenProps {\n  navigation: ChallengeDetailScreenNavigationProp;\n  route: ChallengeDetailScreenRouteProp;\n}\n\ninterface Challenge {\n  id: number;\n  title: string;\n  description: string;\n  creatorId: number;\n  creatorName: string;\n  startDate: string;\n  endDate: string;\n  goal: number;\n  goalType: 'pages' | 'books' | 'minutes';\n  bookId?: number;\n  bookTitle?: string;\n  categoryId?: number;\n  categoryName?: string;\n  isPrivate: boolean;\n  participantCount: number;\n  myProgress?: number;\n  status?: 'active' | 'completed' | 'abandoned';\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Participant {\n  id: number;\n  userId: number;\n  username: string;\n  progress: number;\n  progressPercentage: number;\n  status: 'active' | 'completed' | 'abandoned';\n  joinedAt: string;\n}\n\ninterface Comment {\n  id: number;\n  userId: number;\n  username: string;\n  challengeId: number;\n  content: string;\n  createdAt: string;\n}\n\nconst ChallengeDetailScreen = ({ navigation, route }: ChallengeDetailScreenProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const user = useSelector(selectUser);\n  const { challengeId } = route.params;\n  \n  const [challenge, setChallenge] = useState<Challenge | null>(null);\n  const [participants, setParticipants] = useState<Participant[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [progressUpdateMode, setProgressUpdateMode] = useState(false);\n  const [newProgress, setNewProgress] = useState('');\n  const [newComment, setNewComment] = useState('');\n  const [activeTab, setActiveTab] = useState<'details' | 'participants' | 'comments'>('details');\n  const [isShareLoading, setIsShareLoading] = useState(false);\n  \n  useEffect(() => {\n    fetchChallengeDetails();\n  }, [challengeId]);\n  \n  const fetchChallengeDetails = async () => {\n    setIsLoading(true);\n    \n    try {\n      // Try real API first\n      const data = await fetchApi(`/api/challenges/${challengeId}`);\n      setChallenge(data);\n      \n      const participantsData = await fetchApi(`/api/challenges/${challengeId}/participants`);\n      setParticipants(participantsData);\n      \n      const commentsData = await fetchApi(`/api/challenges/${challengeId}/comments`);\n      setComments(commentsData);\n    } catch (error) {\n      try {\n        // Fall back to mock data\n        const mockData = await mockFetchApi(`/api/challenges/${challengeId}`);\n        \n        // Create mock challenge with more detail\n        const mockChallenge: Challenge = {\n          id: challengeId,\n          title: \"30-Day Reading Challenge\",\n          description: \"Read every day for 30 days and track your progress!\",\n          creatorId: 2,\n          creatorName: \"bookworm42\",\n          startDate: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n          endDate: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),\n          goal: 500,\n          goalType: \"pages\",\n          isPrivate: false,\n          participantCount: 8,\n          myProgress: 220,\n          status: \"active\",\n          createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\n          updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n        };\n        \n        setChallenge(mockChallenge);\n        \n        // Mock participants\n        const mockParticipants: Participant[] = [\n          {\n            id: 1,\n            userId: 1,\n            username: \"demo\",\n            progress: 220,\n            progressPercentage: 44,\n            status: \"active\",\n            joinedAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString()\n          },\n          {\n            id: 2,\n            userId: 2,\n            username: \"bookworm42\",\n            progress: 350,\n            progressPercentage: 70,\n            status: \"active\",\n            joinedAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString()\n          },\n          {\n            id: 3,\n            userId: 3,\n            username: \"readaholic\",\n            progress: 500,\n            progressPercentage: 100,\n            status: \"completed\",\n            joinedAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000).toISOString()\n          },\n          {\n            id: 4,\n            userId: 4,\n            username: \"bibliophile\",\n            progress: 320,\n            progressPercentage: 64,\n            status: \"active\",\n            joinedAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString()\n          },\n          {\n            id: 5,\n            userId: 5,\n            username: \"kindlemaster\",\n            progress: 180,\n            progressPercentage: 36,\n            status: \"active\",\n            joinedAt: new Date(Date.now() - 11 * 24 * 60 * 60 * 1000).toISOString()\n          },\n        ];\n        \n        setParticipants(mockParticipants);\n        \n        // Mock comments\n        const mockComments: Comment[] = [\n          {\n            id: 1,\n            userId: 2,\n            username: \"bookworm42\",\n            challengeId: challengeId,\n            content: \"Let's all try to read daily and support each other!\",\n            createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString()\n          },\n          {\n            id: 2,\n            userId: 3,\n            username: \"readaholic\",\n            challengeId: challengeId,\n            content: \"Just finished! It was a great challenge, thanks for organizing!\",\n            createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n          },\n          {\n            id: 3,\n            userId: 5,\n            username: \"kindlemaster\",\n            challengeId: challengeId,\n            content: \"I'm finding it harder than expected, but I'm not giving up!\",\n            createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString()\n          }\n        ];\n        \n        setComments(mockComments);\n      } catch (mockError) {\n        console.error('Failed to fetch challenge details:', mockError);\n        Alert.alert('Error', 'Failed to load challenge details');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const updateProgress = async () => {\n    if (!newProgress || isNaN(Number(newProgress)) || Number(newProgress) < 0) {\n      Alert.alert('Error', 'Please enter a valid progress value');\n      return;\n    }\n    \n    if (!challenge) return;\n    \n    const progress = Number(newProgress);\n    \n    setIsLoading(true);\n    try {\n      // Try real API first\n      await fetchApi(`/api/challenges/${challengeId}/progress`, {\n        method: 'POST',\n        body: { progress }\n      });\n      \n      // Update local state\n      setChallenge(prev => prev ? { ...prev, myProgress: progress } : null);\n      setParticipants(prev => \n        prev.map(p => p.userId === user?.id \n          ? { \n              ...p, \n              progress, \n              progressPercentage: Math.min(100, Math.round((progress / (challenge?.goal || 1)) * 100)),\n              status: progress >= (challenge?.goal || 0) ? 'completed' : 'active'\n            } \n          : p\n        )\n      );\n      \n      setProgressUpdateMode(false);\n      setNewProgress('');\n      \n      Alert.alert('Success', 'Progress updated successfully!');\n    } catch (error) {\n      try {\n        // Fall back to mock API\n        // Update local state\n        const updatedProgress = progress;\n        const progressPercentage = Math.min(100, Math.round((progress / (challenge?.goal || 1)) * 100));\n        const newStatus = progress >= (challenge?.goal || 0) ? 'completed' : 'active';\n        \n        setChallenge(prev => prev ? { ...prev, myProgress: updatedProgress, status: newStatus } : null);\n        \n        setParticipants(prev => \n          prev.map(p => p.userId === user?.id \n            ? { ...p, progress: updatedProgress, progressPercentage, status: newStatus } \n            : p\n          )\n        );\n        \n        setProgressUpdateMode(false);\n        setNewProgress('');\n        \n        Alert.alert('Success', 'Progress updated successfully!');\n      } catch (mockError) {\n        console.error('Failed to update progress:', mockError);\n        Alert.alert('Error', 'Failed to update progress');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const addComment = async () => {\n    if (!newComment.trim()) {\n      Alert.alert('Error', 'Please enter a comment');\n      return;\n    }\n    \n    setIsLoading(true);\n    try {\n      // Try real API first\n      const response = await fetchApi(`/api/challenges/${challengeId}/comments`, {\n        method: 'POST',\n        body: { content: newComment }\n      });\n      \n      // Add new comment to the list\n      setComments(prev => [response, ...prev]);\n      setNewComment('');\n    } catch (error) {\n      try {\n        // Fall back to mock API\n        const mockComment: Comment = {\n          id: comments.length + 1,\n          userId: user?.id || 0,\n          username: user?.username || 'Anonymous',\n          challengeId,\n          content: newComment,\n          createdAt: new Date().toISOString()\n        };\n        \n        setComments(prev => [mockComment, ...prev]);\n        setNewComment('');\n      } catch (mockError) {\n        console.error('Failed to add comment:', mockError);\n        Alert.alert('Error', 'Failed to add comment');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  \n  const formatCommentDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now.getTime() - date.getTime());\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) {\n      return 'Today';\n    } else if (diffDays === 1) {\n      return 'Yesterday';\n    } else if (diffDays < 7) {\n      return `${diffDays} days ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n  \n  const getTimeRemaining = () => {\n    if (!challenge) return null;\n    \n    const endDate = new Date(challenge.endDate);\n    const now = new Date();\n    \n    // Challenge has ended\n    if (now > endDate) {\n      return 'Challenge ended';\n    }\n    \n    const diffTime = Math.abs(endDate.getTime() - now.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    return `${diffDays} days remaining`;\n  };\n  \n  const getGoalTypeLabel = (type: 'pages' | 'books' | 'minutes') => {\n    switch (type) {\n      case 'pages': return 'pages';\n      case 'books': return 'books';\n      case 'minutes': return 'minutes of reading';\n    }\n  };\n  \n  const getUserRank = () => {\n    if (!user || !participants.length) return null;\n    \n    // Sort participants by progress in descending order\n    const sortedParticipants = [...participants].sort((a, b) => b.progress - a.progress);\n    \n    // Find user's rank\n    const userIndex = sortedParticipants.findIndex(p => p.userId === user.id);\n    \n    if (userIndex === -1) return null;\n    \n    return userIndex + 1;\n  };\n  \n  // Function to share challenge\n  const shareChallenge = async () => {\n    if (!challenge) return;\n    \n    setIsShareLoading(true);\n    \n    try {\n      const message = `Join me in the \"${challenge.title}\" reading challenge on Koach! Goal: ${challenge.goal} ${getGoalTypeLabel(challenge.goalType)}. ${getTimeRemaining()}!`;\n      \n      const result = await Share.share({\n        message,\n        title: `Koach Reading Challenge: ${challenge.title}`,\n      });\n      \n      if (result.action === Share.sharedAction) {\n        if (result.activityType) {\n          console.log(`Shared via ${result.activityType}`);\n        } else {\n          console.log('Shared successfully');\n        }\n      } else if (result.action === Share.dismissedAction) {\n        console.log('Share dismissed');\n      }\n    } catch (error) {\n      console.error('Error sharing:', error);\n      Alert.alert('Share Error', 'There was a problem sharing this challenge');\n    } finally {\n      setIsShareLoading(false);\n    }\n  };\n  \n  const renderParticipant = ({ item, index }: { item: Participant, index: number }) => {\n    const isCurrentUser = item.userId === user?.id;\n    \n    return (\n      <Card style={[styles.participantCard, isCurrentUser && styles.currentUserCard]}>\n        <Card.Content style={styles.participantContent}>\n          <View style={styles.participantRank}>\n            <Avatar.Text \n              size={40} \n              label={(index + 1).toString()} \n              style={[\n                styles.rankAvatar,\n                index === 0 ? styles.firstRankAvatar : \n                index === 1 ? styles.secondRankAvatar : \n                index === 2 ? styles.thirdRankAvatar : styles.otherRankAvatar\n              ]} \n            />\n          </View>\n          \n          <View style={styles.participantInfo}>\n            <Text style={[styles.participantName, isCurrentUser && styles.currentUserText]}>\n              {item.username} {isCurrentUser && '(You)'}\n            </Text>\n            \n            <View style={styles.progressInfo}>\n              <Text style={styles.progressValue}>\n                {item.progress} / {challenge?.goal} {challenge?.goalType}\n              </Text>\n              <ProgressBar \n                progress={item.progressPercentage / 100} \n                color={item.status === 'completed' ? '#4CAF50' : '#6200ee'} \n                style={styles.progressBar} \n              />\n            </View>\n            \n            {item.status === 'completed' && (\n              <Chip icon=\"trophy\" style={styles.completedChip}>Completed</Chip>\n            )}\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n  \n  const renderComment = ({ item }: { item: Comment }) => {\n    const isCurrentUser = item.userId === user?.id;\n    \n    return (\n      <Card style={[styles.commentCard, isCurrentUser && styles.currentUserCommentCard]}>\n        <Card.Content>\n          <View style={styles.commentHeader}>\n            <Text style={[styles.commentUsername, isCurrentUser && styles.currentUserText]}>\n              {item.username} {isCurrentUser && '(You)'}\n            </Text>\n            <Text style={styles.commentDate}>{formatCommentDate(item.createdAt)}</Text>\n          </View>\n          \n          <Text style={styles.commentContent}>{item.content}</Text>\n        </Card.Content>\n      </Card>\n    );\n  };\n  \n  if (isLoading && !challenge) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#6200ee\" />\n        <Text style={styles.loadingText}>Loading challenge details...</Text>\n      </View>\n    );\n  }\n  \n  if (!challenge) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>Challenge not found or an error occurred.</Text>\n        <Button \n          mode=\"contained\" \n          onPress={() => navigation.goBack()}\n          style={styles.backButton}\n        >\n          Go Back\n        </Button>\n      </View>\n    );\n  }\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>{challenge.title}</Title>\n          <IconButton\n            icon=\"share\"\n            color=\"white\"\n            size={22}\n            onPress={shareChallenge}\n            disabled={isShareLoading}\n            loading={isShareLoading}\n            style={styles.shareButton}\n          />\n        </View>\n        \n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{participants.length}</Text>\n            <Text style={styles.statLabel}>Participants</Text>\n          </View>\n          \n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{challenge.goalType === 'pages' ? challenge.goal : challenge.goal}</Text>\n            <Text style={styles.statLabel}>{getGoalTypeLabel(challenge.goalType)}</Text>\n          </View>\n          \n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{getTimeRemaining()}</Text>\n            <Text style={styles.statLabel}>Time</Text>\n          </View>\n        </View>\n        \n        <View style={styles.tabsContainer}>\n          <TouchableOpacity\n            style={[styles.tab, activeTab === 'details' && styles.activeTab]}\n            onPress={() => setActiveTab('details')}\n          >\n            <Text style={[styles.tabText, activeTab === 'details' && styles.activeTabText]}>\n              Details\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.tab, activeTab === 'participants' && styles.activeTab]}\n            onPress={() => setActiveTab('participants')}\n          >\n            <Text style={[styles.tabText, activeTab === 'participants' && styles.activeTabText]}>\n              Leaderboard\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.tab, activeTab === 'comments' && styles.activeTab]}\n            onPress={() => setActiveTab('comments')}\n          >\n            <Text style={[styles.tabText, activeTab === 'comments' && styles.activeTabText]}>\n              Discussion\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      \n      {activeTab === 'details' && (\n        <ScrollView style={styles.scrollView}>\n          <Card style={styles.detailsCard}>\n            <Card.Content>\n              <Text style={styles.description}>{challenge.description}</Text>\n              \n              <Divider style={styles.divider} />\n              \n              <View style={styles.detailRow}>\n                <Text style={styles.detailLabel}>Created by:</Text>\n                <Text style={styles.detailValue}>{challenge.creatorName}</Text>\n              </View>\n              \n              <View style={styles.detailRow}>\n                <Text style={styles.detailLabel}>Start Date:</Text>\n                <Text style={styles.detailValue}>{formatDate(challenge.startDate)}</Text>\n              </View>\n              \n              <View style={styles.detailRow}>\n                <Text style={styles.detailLabel}>End Date:</Text>\n                <Text style={styles.detailValue}>{formatDate(challenge.endDate)}</Text>\n              </View>\n              \n              {challenge.bookTitle && (\n                <View style={styles.detailRow}>\n                  <Text style={styles.detailLabel}>Book:</Text>\n                  <Text style={styles.detailValue}>{challenge.bookTitle}</Text>\n                </View>\n              )}\n              \n              {challenge.categoryName && (\n                <View style={styles.detailRow}>\n                  <Text style={styles.detailLabel}>Category:</Text>\n                  <Text style={styles.detailValue}>{challenge.categoryName}</Text>\n                </View>\n              )}\n              \n              <Divider style={styles.divider} />\n              \n              <Text style={styles.yourProgressLabel}>Your Progress</Text>\n              \n              {challenge.status === 'active' ? (\n                <View>\n                  <View style={styles.progressContainer}>\n                    <Text style={styles.progressText}>\n                      {challenge.myProgress || 0} / {challenge.goal} {getGoalTypeLabel(challenge.goalType)}\n                      {\" \"}\n                      ({Math.round(((challenge.myProgress || 0) / challenge.goal) * 100)}%)\n                    </Text>\n                    <ProgressBar \n                      progress={(challenge.myProgress || 0) / challenge.goal} \n                      color={(challenge.myProgress || 0) >= challenge.goal ? '#4CAF50' : '#6200ee'} \n                      style={styles.progressBar} \n                    />\n                  </View>\n                  \n                  {getUserRank() !== null && (\n                    <View style={styles.rankInfo}>\n                      <Text style={styles.rankText}>\n                        Your Rank: {getUserRank()} of {participants.length}\n                      </Text>\n                    </View>\n                  )}\n                  \n                  {progressUpdateMode ? (\n                    <View style={styles.updateProgressContainer}>\n                      <TextInput\n                        label={`Your progress (${getGoalTypeLabel(challenge.goalType)})`}\n                        value={newProgress}\n                        onChangeText={setNewProgress}\n                        keyboardType=\"numeric\"\n                        style={styles.progressInput}\n                      />\n                      \n                      <View style={styles.updateButtons}>\n                        <Button \n                          mode=\"outlined\" \n                          onPress={() => {\n                            setProgressUpdateMode(false);\n                            setNewProgress('');\n                          }}\n                          style={[styles.updateButton, { marginRight: 8 }]}\n                        >\n                          Cancel\n                        </Button>\n                        \n                        <Button \n                          mode=\"contained\" \n                          onPress={updateProgress}\n                          style={styles.updateButton}\n                          loading={isLoading}\n                          disabled={isLoading}\n                        >\n                          Update\n                        </Button>\n                      </View>\n                    </View>\n                  ) : (\n                    <Button \n                      mode=\"contained\" \n                      onPress={() => {\n                        setProgressUpdateMode(true);\n                        setNewProgress(challenge.myProgress?.toString() || '0');\n                      }}\n                      icon=\"pencil\"\n                      style={styles.updateProgressButton}\n                    >\n                      Update Progress\n                    </Button>\n                  )}\n                </View>\n              ) : challenge.status === 'completed' ? (\n                <View style={styles.completedContainer}>\n                  <Avatar.Icon \n                    size={60} \n                    icon=\"trophy\" \n                    style={styles.completedIcon} \n                  />\n                  <Text style={styles.completedText}>\n                    Congratulations! You've completed this challenge!\n                  </Text>\n                  <Text style={styles.completedSubtext}>\n                    Final progress: {challenge.myProgress} / {challenge.goal} {getGoalTypeLabel(challenge.goalType)}\n                  </Text>\n                </View>\n              ) : (\n                <View style={styles.notJoinedContainer}>\n                  <Text style={styles.notJoinedText}>\n                    You're not participating in this challenge yet.\n                  </Text>\n                  <Button \n                    mode=\"contained\" \n                    onPress={() => {\n                      // Join challenge function would be called here\n                      Alert.alert('Join Challenge', 'This would join the challenge in a real implementation');\n                    }}\n                    style={styles.joinButton}\n                  >\n                    Join Challenge\n                  </Button>\n                </View>\n              )}\n            </Card.Content>\n          </Card>\n        </ScrollView>\n      )}\n      \n      {activeTab === 'participants' && (\n        <View style={styles.participantsContainer}>\n          {participants.length > 0 ? (\n            <FlatList\n              data={[...participants].sort((a, b) => b.progress - a.progress)}\n              renderItem={renderParticipant}\n              keyExtractor={item => item.id.toString()}\n              contentContainerStyle={styles.participantsList}\n            />\n          ) : (\n            <View style={styles.emptyContainer}>\n              <Text style={styles.emptyText}>No participants in this challenge yet.</Text>\n            </View>\n          )}\n        </View>\n      )}\n      \n      {activeTab === 'comments' && (\n        <View style={styles.commentsContainer}>\n          <Card style={styles.commentInputCard}>\n            <Card.Content>\n              <TextInput\n                label=\"Add a comment\"\n                value={newComment}\n                onChangeText={setNewComment}\n                multiline\n                numberOfLines={2}\n                style={styles.commentInput}\n              />\n              \n              <Button \n                mode=\"contained\" \n                onPress={addComment}\n                style={styles.addCommentButton}\n                disabled={!newComment.trim() || isLoading}\n                loading={isLoading}\n                icon=\"send\"\n              >\n                Post\n              </Button>\n            </Card.Content>\n          </Card>\n          \n          {comments.length > 0 ? (\n            <FlatList\n              data={comments}\n              renderItem={renderComment}\n              keyExtractor={item => item.id.toString()}\n              contentContainerStyle={styles.commentsList}\n            />\n          ) : (\n            <View style={styles.emptyContainer}>\n              <Text style={styles.emptyText}>No comments yet. Be the first to start the discussion!</Text>\n            </View>\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#6200ee',\n    padding: 24,\n    paddingTop: 20,\n    paddingBottom: 0,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  shareButton: {\n    margin: 0,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginVertical: 16,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  statLabel: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 12,\n    marginTop: 2,\n  },\n  tabsContainer: {\n    flexDirection: 'row',\n    marginTop: 8,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    borderBottomWidth: 3,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: 'white',\n  },\n  tabText: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontWeight: '500',\n  },\n  activeTabText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  detailsCard: {\n    margin: 16,\n    borderRadius: 12,\n    elevation: 3,\n  },\n  description: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    marginBottom: 8,\n  },\n  detailLabel: {\n    width: 100,\n    fontWeight: 'bold',\n    color: '#666',\n  },\n  detailValue: {\n    flex: 1,\n    color: '#333',\n  },\n  yourProgressLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    color: '#333',\n  },\n  progressContainer: {\n    marginBottom: 16,\n  },\n  progressText: {\n    marginBottom: 4,\n    fontSize: 14,\n    color: '#555',\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rankInfo: {\n    marginBottom: 16,\n  },\n  rankText: {\n    fontSize: 14,\n    color: '#6200ee',\n    fontWeight: 'bold',\n  },\n  updateProgressContainer: {\n    marginBottom: 16,\n  },\n  progressInput: {\n    backgroundColor: 'white',\n    marginBottom: 12,\n  },\n  updateButtons: {\n    flexDirection: 'row',\n  },\n  updateButton: {\n    flex: 1,\n  },\n  updateProgressButton: {\n    marginBottom: 16,\n  },\n  completedContainer: {\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  completedIcon: {\n    backgroundColor: '#4CAF50',\n    marginBottom: 12,\n  },\n  completedText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  completedSubtext: {\n    fontSize: 14,\n    color: '#388E3C',\n    textAlign: 'center',\n  },\n  notJoinedContainer: {\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#F5F5F5',\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  notJoinedText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  joinButton: {\n    marginTop: 8,\n  },\n  participantsContainer: {\n    flex: 1,\n  },\n  participantsList: {\n    padding: 16,\n  },\n  participantCard: {\n    marginBottom: 12,\n    borderRadius: 12,\n    elevation: 2,\n  },\n  currentUserCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#6200ee',\n  },\n  participantContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  participantRank: {\n    marginRight: 16,\n  },\n  rankAvatar: {\n    marginRight: 8,\n  },\n  firstRankAvatar: {\n    backgroundColor: '#FFD700',\n  },\n  secondRankAvatar: {\n    backgroundColor: '#C0C0C0',\n  },\n  thirdRankAvatar: {\n    backgroundColor: '#CD7F32',\n  },\n  otherRankAvatar: {\n    backgroundColor: '#9E9E9E',\n  },\n  participantInfo: {\n    flex: 1,\n  },\n  participantName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  currentUserText: {\n    color: '#6200ee',\n  },\n  progressInfo: {\n    marginBottom: 4,\n  },\n  progressValue: {\n    fontSize: 14,\n    color: '#555',\n    marginBottom: 4,\n  },\n  completedChip: {\n    backgroundColor: '#E8F5E9',\n    alignSelf: 'flex-start',\n    marginTop: 4,\n  },\n  commentsContainer: {\n    flex: 1,\n  },\n  commentInputCard: {\n    margin: 16,\n    marginBottom: 8,\n    borderRadius: 12,\n    elevation: 3,\n  },\n  commentInput: {\n    backgroundColor: 'white',\n    marginBottom: 12,\n  },\n  addCommentButton: {\n    alignSelf: 'flex-end',\n  },\n  commentsList: {\n    padding: 16,\n    paddingTop: 8,\n  },\n  commentCard: {\n    marginBottom: 12,\n    borderRadius: 12,\n    elevation: 2,\n  },\n  currentUserCommentCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#6200ee',\n  },\n  commentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  commentUsername: {\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  commentDate: {\n    fontSize: 12,\n    color: '#888',\n  },\n  commentContent: {\n    fontSize: 14,\n    lineHeight: 20,\n    color: '#333',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#B00020',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  backButton: {\n    marginTop: 8,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n  },\n});\n\nexport default ChallengeDetailScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}