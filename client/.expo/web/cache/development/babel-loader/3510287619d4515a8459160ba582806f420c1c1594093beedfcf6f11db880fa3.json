{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\KoachReadsFinal\\\\client\\\\src\\\\screens\\\\ChallengesScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport { Title } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport { Paragraph } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport * as Avatar from \"react-native-paper/lib/module/components/Avatar/Avatar\";\nimport Chip from \"react-native-paper/lib/module/components/Chip/Chip\";\nimport ProgressBar from \"react-native-paper/lib/module/components/ProgressBar\";\nimport FAB from \"react-native-paper/lib/module/components/FAB\";\nimport Modal from \"react-native-paper/lib/module/components/Modal\";\nimport Portal from \"react-native-paper/lib/module/components/Portal/Portal\";\nimport TextInput from \"react-native-paper/lib/module/components/TextInput/TextInput\";\nimport RadioButton from \"react-native-paper/lib/module/components/RadioButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengesScreen = ({\n  navigation\n}) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const [challenges, setChallenges] = useState([]);\n  const [myChallenges, setMyChallenges] = useState([]);\n  const [publicChallenges, setPublicChallenges] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('my');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [challengeTitle, setChallengeTitle] = useState('');\n  const [challengeDescription, setChallengeDescription] = useState('');\n  const [goalType, setGoalType] = useState('pages');\n  const [goalValue, setGoalValue] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [isPrivate, setIsPrivate] = useState(false);\n  useEffect(() => {\n    fetchChallenges();\n  }, []);\n  const fetchChallenges = async () => {\n    setIsLoading(true);\n    try {\n      const data = await fetchApi('/api/challenges');\n      handleChallengesData(data);\n    } catch (error) {\n      try {\n        const mockData = await mockFetchApi('/api/challenges');\n        handleChallengesData(mockData);\n      } catch (mockError) {\n        console.error('Failed to fetch challenges:', mockError);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleChallengesData = data => {\n    setChallenges(data);\n    const userChallenges = data.filter(challenge => challenge.creatorId === user?.id || challenge.status === 'active');\n    setMyChallenges(userChallenges);\n    const otherChallenges = data.filter(challenge => !challenge.isPrivate && challenge.creatorId !== user?.id && challenge.status !== 'active');\n    setPublicChallenges(otherChallenges);\n  };\n  const createChallenge = async () => {\n    if (!challengeTitle.trim()) {\n      Alert.alert('Error', 'Please enter a challenge title');\n      return;\n    }\n    if (!goalValue || isNaN(Number(goalValue)) || Number(goalValue) <= 0) {\n      Alert.alert('Error', 'Please enter a valid goal value');\n      return;\n    }\n    const endDateObj = new Date(endDate);\n    const now = new Date();\n    if (endDate && endDateObj <= now) {\n      Alert.alert('Error', 'End date must be in the future');\n      return;\n    }\n    const newChallenge = {\n      title: challengeTitle,\n      description: challengeDescription,\n      creatorId: user?.id || 0,\n      startDate: new Date().toISOString(),\n      endDate: endDate || new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n      goal: Number(goalValue),\n      goalType,\n      isPrivate\n    };\n    setIsLoading(true);\n    try {\n      const response = await fetchApi('/api/challenges', {\n        method: 'POST',\n        body: newChallenge\n      });\n      fetchChallenges();\n      resetForm();\n      setModalVisible(false);\n      Alert.alert('Success', 'Challenge created successfully!');\n    } catch (error) {\n      try {\n        const mockResponse = await mockFetchApi('/api/challenges', {\n          method: 'POST',\n          body: newChallenge\n        });\n        const updatedChallenges = [...challenges, mockResponse];\n        handleChallengesData(updatedChallenges);\n        resetForm();\n        setModalVisible(false);\n        Alert.alert('Success', 'Challenge created successfully!');\n      } catch (mockError) {\n        console.error('Failed to create challenge:', mockError);\n        Alert.alert('Error', 'Failed to create challenge');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const joinChallenge = async challengeId => {\n    setIsLoading(true);\n    try {\n      await fetchApi(`/api/challenges/${challengeId}/join`, {\n        method: 'POST'\n      });\n      fetchChallenges();\n      Alert.alert('Success', 'You have joined the challenge!');\n    } catch (error) {\n      try {\n        await mockFetchApi(`/api/challenges/${challengeId}/join`, {\n          method: 'POST'\n        });\n        const updatedChallenges = challenges.map(challenge => challenge.id === challengeId ? Object.assign({}, challenge, {\n          status: 'active',\n          myProgress: 0\n        }) : challenge);\n        handleChallengesData(updatedChallenges);\n        Alert.alert('Success', 'You have joined the challenge!');\n      } catch (mockError) {\n        console.error('Failed to join challenge:', mockError);\n        Alert.alert('Error', 'Failed to join challenge');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const resetForm = () => {\n    setChallengeTitle('');\n    setChallengeDescription('');\n    setGoalType('pages');\n    setGoalValue('');\n    setEndDate('');\n    setIsPrivate(false);\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  const calculateProgress = challenge => {\n    return challenge.myProgress ? challenge.myProgress / challenge.goal * 100 : 0;\n  };\n  const getGoalTypeLabel = type => {\n    switch (type) {\n      case 'pages':\n        return 'pages';\n      case 'books':\n        return 'books';\n      case 'minutes':\n        return 'minutes of reading';\n    }\n  };\n  const renderChallengeItem = ({\n    item\n  }) => {\n    const isCreator = item.creatorId === user?.id;\n    const progress = calculateProgress(item);\n    const isActive = item.status === 'active' || isCreator;\n    return _jsxDEV(Card, {\n      style: [styles.challengeCard, isCreator && styles.creatorCard, item.status === 'completed' && styles.completedCard],\n      onPress: () => navigation.navigate('ChallengeDetail', {\n        challengeId: item.id\n      }),\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(View, {\n          style: styles.cardHeader,\n          children: [_jsxDEV(Title, {\n            style: styles.challengeTitle,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), isCreator && _jsxDEV(Chip, {\n            icon: \"crown\",\n            style: styles.creatorChip,\n            children: \"Creator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), item.status === 'completed' && _jsxDEV(Chip, {\n            icon: \"check-circle\",\n            style: styles.completedChip,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), _jsxDEV(Paragraph, {\n          style: styles.challengeDescription,\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.challengeDetails,\n          children: [_jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: [item.goal, \" \", getGoalTypeLabel(item.goalType)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: formatDate(item.endDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.detailRow,\n            children: [_jsxDEV(Text, {\n              style: styles.detailLabel,\n              children: \"Participants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.detailValue,\n              children: item.participantCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), isActive && _jsxDEV(View, {\n          style: styles.progressContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.progressText,\n            children: [\"Progress: \", item.myProgress || 0, \" / \", item.goal, \" (\", Math.round(progress), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), _jsxDEV(ProgressBar, {\n            progress: progress / 100,\n            color: progress >= 100 ? '#4CAF50' : '#6200ee',\n            style: styles.progressBar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), activeTab === 'public' && !isActive && _jsxDEV(Button, {\n          mode: \"contained\",\n          onPress: () => joinChallenge(item.id),\n          style: styles.joinButton,\n          children: \"Join Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  };\n  const renderEmptyState = () => _jsxDEV(View, {\n    style: styles.emptyContainer,\n    children: [_jsxDEV(Avatar.Icon, {\n      size: 80,\n      icon: \"trophy\",\n      style: styles.emptyIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.emptyText,\n      children: activeTab === 'my' ? \"You haven't joined any challenges yet!\" : \"No public challenges available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), activeTab === 'my' && _jsxDEV(Button, {\n      mode: \"contained\",\n      onPress: () => setModalVisible(true),\n      style: styles.createButtonEmpty,\n      children: \"Create Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Title, {\n        style: styles.title,\n        children: \"Reading Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.subtitle,\n        children: \"Compete and achieve your reading goals!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.tabsContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          style: [styles.tab, activeTab === 'my' && styles.activeTab],\n          onPress: () => setActiveTab('my'),\n          children: _jsxDEV(Text, {\n            style: [styles.tabText, activeTab === 'my' && styles.activeTabText],\n            children: \"My Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.tab, activeTab === 'public' && styles.activeTab],\n          onPress: () => setActiveTab('public'),\n          children: _jsxDEV(Text, {\n            style: [styles.tabText, activeTab === 'public' && styles.activeTabText],\n            children: \"Public Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), isLoading ? _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6200ee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Loading challenges...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this) : activeTab === 'my' ? myChallenges.length > 0 ? _jsxDEV(FlatList, {\n      data: myChallenges,\n      renderItem: renderChallengeItem,\n      keyExtractor: item => item.id.toString(),\n      contentContainerStyle: styles.challengesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this) : renderEmptyState() : publicChallenges.length > 0 ? _jsxDEV(FlatList, {\n      data: publicChallenges,\n      renderItem: renderChallengeItem,\n      keyExtractor: item => item.id.toString(),\n      contentContainerStyle: styles.challengesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }, this) : renderEmptyState(), _jsxDEV(Portal, {\n      children: _jsxDEV(Modal, {\n        visible: modalVisible,\n        onDismiss: () => setModalVisible(false),\n        contentContainerStyle: styles.modalContainer,\n        children: _jsxDEV(ScrollView, {\n          style: styles.modalScrollView,\n          children: [_jsxDEV(Title, {\n            style: styles.modalTitle,\n            children: \"Create New Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            label: \"Challenge Title\",\n            value: challengeTitle,\n            onChangeText: setChallengeTitle,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            label: \"Description\",\n            value: challengeDescription,\n            onChangeText: setChallengeDescription,\n            multiline: true,\n            numberOfLines: 3,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.sectionLabel,\n            children: \"Challenge Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.goalTypeContainer,\n            children: _jsxDEV(RadioButton.Group, {\n              onValueChange: value => setGoalType(value),\n              value: goalType,\n              children: [_jsxDEV(View, {\n                style: styles.radioOption,\n                children: [_jsxDEV(RadioButton, {\n                  value: \"pages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  children: \"Pages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: styles.radioOption,\n                children: [_jsxDEV(RadioButton, {\n                  value: \"books\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  children: \"Books\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: styles.radioOption,\n                children: [_jsxDEV(RadioButton, {\n                  value: \"minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  children: \"Minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            label: \"Goal Value\",\n            value: goalValue,\n            onChangeText: setGoalValue,\n            keyboardType: \"numeric\",\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            label: \"End Date (YYYY-MM-DD)\",\n            value: endDate,\n            onChangeText: setEndDate,\n            placeholder: \"Optional (defaults to 30 days)\",\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.switchContainer,\n            children: [_jsxDEV(Text, {\n              children: \"Private Challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), _jsxDEV(Switch, {\n              value: isPrivate,\n              onValueChange: setIsPrivate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.privateHint,\n            children: \"Private challenges are invite-only and won't appear in public listing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(Button, {\n              mode: \"outlined\",\n              onPress: () => {\n                resetForm();\n                setModalVisible(false);\n              },\n              style: [styles.modalButton, {\n                marginRight: 8\n              }],\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: createChallenge,\n              style: styles.modalButton,\n              loading: isLoading,\n              disabled: isLoading,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), activeTab === 'my' && _jsxDEV(FAB, {\n      style: styles.fab,\n      icon: \"plus\",\n      onPress: () => setModalVisible(true),\n      label: \"New Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\nconst Switch = ({\n  value,\n  onValueChange\n}) => {\n  return _jsxDEV(TouchableOpacity, {\n    style: [styles.switchTrack, value && styles.switchTrackOn],\n    onPress: () => onValueChange(!value),\n    children: _jsxDEV(View, {\n      style: [styles.switchThumb, value && styles.switchThumbOn]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 516,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#6200ee',\n    padding: 24,\n    paddingTop: 36,\n    paddingBottom: 16\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 4,\n    marginBottom: 16\n  },\n  tabsContainer: {\n    flexDirection: 'row',\n    marginTop: 8\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    borderBottomWidth: 3,\n    borderBottomColor: 'transparent'\n  },\n  activeTab: {\n    borderBottomColor: 'white'\n  },\n  tabText: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontWeight: '500'\n  },\n  activeTabText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666'\n  },\n  challengesList: {\n    padding: 16\n  },\n  challengeCard: {\n    marginBottom: 16,\n    borderRadius: 12,\n    elevation: 3\n  },\n  creatorCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#ffd700'\n  },\n  completedCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#4CAF50'\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  challengeTitle: {\n    flex: 1,\n    fontSize: 18,\n    marginBottom: 8\n  },\n  creatorChip: {\n    backgroundColor: '#FFF8E1',\n    marginLeft: 8\n  },\n  completedChip: {\n    backgroundColor: '#E8F5E9',\n    marginLeft: 8\n  },\n  challengeDescription: {\n    marginBottom: 16,\n    color: '#555'\n  },\n  challengeDetails: {\n    marginBottom: 16\n  },\n  detailRow: {\n    flexDirection: 'row',\n    marginBottom: 4\n  },\n  detailLabel: {\n    width: 100,\n    fontWeight: 'bold',\n    color: '#666'\n  },\n  detailValue: {\n    flex: 1,\n    color: '#333'\n  },\n  progressContainer: {\n    marginBottom: 8\n  },\n  progressText: {\n    marginBottom: 4,\n    fontSize: 14,\n    color: '#555'\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4\n  },\n  joinButton: {\n    marginTop: 8\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24\n  },\n  emptyIcon: {\n    backgroundColor: '#6200ee',\n    opacity: 0.8,\n    marginBottom: 16\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  createButtonEmpty: {\n    marginTop: 8\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#6200ee'\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 12,\n    padding: 20,\n    maxHeight: '80%'\n  },\n  modalScrollView: {\n    flex: 1\n  },\n  modalTitle: {\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  input: {\n    marginBottom: 16,\n    backgroundColor: 'white'\n  },\n  sectionLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#333'\n  },\n  goalTypeContainer: {\n    marginBottom: 16\n  },\n  radioOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 4\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n    paddingVertical: 8\n  },\n  switchTrack: {\n    width: 50,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: '#DDD',\n    justifyContent: 'center',\n    padding: 2\n  },\n  switchTrackOn: {\n    backgroundColor: 'rgba(98, 0, 238, 0.5)'\n  },\n  switchThumb: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    backgroundColor: 'white',\n    elevation: 2\n  },\n  switchThumbOn: {\n    transform: [{\n      translateX: 26\n    }],\n    backgroundColor: '#6200ee'\n  },\n  privateHint: {\n    fontSize: 12,\n    color: '#666',\n    fontStyle: 'italic',\n    marginBottom: 16\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 8,\n    marginBottom: 8\n  },\n  modalButton: {\n    flex: 1\n  }\n});\nexport default ChallengesScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","FlatList","TouchableOpacity","ActivityIndicator","ScrollView","Alert","Card","Title","Paragraph","Button","Avatar","Chip","ProgressBar","FAB","Modal","Portal","TextInput","RadioButton","useDispatch","useSelector","selectUser","fetchApi","mockFetchApi","jsxDEV","_jsxDEV","ChallengesScreen","navigation","dispatch","user","challenges","setChallenges","myChallenges","setMyChallenges","publicChallenges","setPublicChallenges","isLoading","setIsLoading","activeTab","setActiveTab","modalVisible","setModalVisible","challengeTitle","setChallengeTitle","challengeDescription","setChallengeDescription","goalType","setGoalType","goalValue","setGoalValue","endDate","setEndDate","isPrivate","setIsPrivate","fetchChallenges","data","handleChallengesData","error","mockData","mockError","console","userChallenges","filter","challenge","creatorId","id","status","otherChallenges","createChallenge","trim","alert","isNaN","Number","endDateObj","Date","now","newChallenge","title","description","startDate","toISOString","getTime","goal","response","method","body","resetForm","mockResponse","updatedChallenges","joinChallenge","challengeId","map","Object","assign","myProgress","formatDate","dateString","date","toLocaleDateString","calculateProgress","getGoalTypeLabel","type","renderChallengeItem","item","isCreator","progress","isActive","style","styles","challengeCard","creatorCard","completedCard","onPress","navigate","children","Content","cardHeader","fileName","_jsxFileName","lineNumber","columnNumber","icon","creatorChip","completedChip","challengeDetails","detailRow","detailLabel","detailValue","participantCount","progressContainer","progressText","Math","round","color","progressBar","mode","joinButton","renderEmptyState","emptyContainer","Icon","size","emptyIcon","emptyText","createButtonEmpty","container","header","subtitle","tabsContainer","tab","tabText","activeTabText","loadingContainer","loadingText","length","renderItem","keyExtractor","toString","contentContainerStyle","challengesList","visible","onDismiss","modalContainer","modalScrollView","modalTitle","label","value","onChangeText","input","multiline","numberOfLines","sectionLabel","goalTypeContainer","Group","onValueChange","radioOption","keyboardType","placeholder","switchContainer","Switch","privateHint","modalButtons","modalButton","marginRight","loading","disabled","fab","switchTrack","switchTrackOn","switchThumb","switchThumbOn","create","flex","backgroundColor","padding","paddingTop","paddingBottom","fontSize","fontWeight","marginTop","marginBottom","flexDirection","paddingVertical","alignItems","borderBottomWidth","borderBottomColor","justifyContent","borderRadius","elevation","borderLeftWidth","borderLeftColor","flexWrap","marginLeft","width","height","opacity","textAlign","position","margin","right","bottom","maxHeight","marginVertical","transform","translateX","fontStyle"],"sources":["D:/All_Projects/KoachReadsFinal/client/src/screens/ChallengesScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  ActivityIndicator,\n  ScrollView,\n  Alert\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Avatar,\n  Chip,\n  ProgressBar,\n  FAB,\n  Modal,\n  Portal,\n  TextInput,\n  Divider,\n  RadioButton,\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../../App';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../store';\nimport { selectUser } from '../slices/authSlice';\nimport { fetchApi } from '../utils/api';\nimport { mockFetchApi } from '../utils/mockApi';\n\ntype ChallengesScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Challenges'>;\n\ninterface ChallengesScreenProps {\n  navigation: ChallengesScreenNavigationProp;\n}\n\ninterface Challenge {\n  id: number;\n  title: string;\n  description: string;\n  creatorId: number;\n  startDate: string;\n  endDate: string;\n  goal: number;\n  goalType: 'pages' | 'books' | 'minutes';\n  bookId?: number;\n  categoryId?: number;\n  isPrivate: boolean;\n  participantCount: number;\n  myProgress?: number;\n  status?: 'active' | 'completed' | 'abandoned';\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst ChallengesScreen: React.FC<ChallengesScreenProps> = ({ navigation }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const user = useSelector(selectUser);\n  \n  const [challenges, setChallenges] = useState<Challenge[]>([]);\n  const [myChallenges, setMyChallenges] = useState<Challenge[]>([]);\n  const [publicChallenges, setPublicChallenges] = useState<Challenge[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'my' | 'public'>('my');\n  const [modalVisible, setModalVisible] = useState(false);\n  \n  // New challenge form\n  const [challengeTitle, setChallengeTitle] = useState('');\n  const [challengeDescription, setChallengeDescription] = useState('');\n  const [goalType, setGoalType] = useState<'pages' | 'books' | 'minutes'>('pages');\n  const [goalValue, setGoalValue] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [isPrivate, setIsPrivate] = useState(false);\n  \n  useEffect(() => {\n    fetchChallenges();\n  }, []);\n  \n  const fetchChallenges = async () => {\n    setIsLoading(true);\n    try {\n      // Try to fetch from real API first\n      const data = await fetchApi('/api/challenges');\n      handleChallengesData(data);\n    } catch (error) {\n      try {\n        // Fall back to mock API\n        const mockData = await mockFetchApi('/api/challenges');\n        handleChallengesData(mockData);\n      } catch (mockError) {\n        console.error('Failed to fetch challenges:', mockError);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleChallengesData = (data: Challenge[]) => {\n    setChallenges(data);\n    // Filter for user's challenges\n    const userChallenges = data.filter(challenge => \n      challenge.creatorId === user?.id || challenge.status === 'active'\n    );\n    setMyChallenges(userChallenges);\n    \n    // Filter for public challenges user is not part of\n    const otherChallenges = data.filter(challenge => \n      !challenge.isPrivate && \n      challenge.creatorId !== user?.id && \n      challenge.status !== 'active'\n    );\n    setPublicChallenges(otherChallenges);\n  };\n  \n  const createChallenge = async () => {\n    if (!challengeTitle.trim()) {\n      Alert.alert('Error', 'Please enter a challenge title');\n      return;\n    }\n    \n    if (!goalValue || isNaN(Number(goalValue)) || Number(goalValue) <= 0) {\n      Alert.alert('Error', 'Please enter a valid goal value');\n      return;\n    }\n    \n    const endDateObj = new Date(endDate);\n    const now = new Date();\n    if (endDate && endDateObj <= now) {\n      Alert.alert('Error', 'End date must be in the future');\n      return;\n    }\n    \n    const newChallenge = {\n      title: challengeTitle,\n      description: challengeDescription,\n      creatorId: user?.id || 0,\n      startDate: new Date().toISOString(),\n      endDate: endDate || new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString(), // Default 30 days\n      goal: Number(goalValue),\n      goalType,\n      isPrivate,\n    };\n    \n    setIsLoading(true);\n    try {\n      // Try to use real API first\n      const response = await fetchApi('/api/challenges', {\n        method: 'POST',\n        body: newChallenge\n      });\n      \n      // Update challenge lists\n      fetchChallenges();\n      \n      // Reset form and close modal\n      resetForm();\n      setModalVisible(false);\n      \n      Alert.alert('Success', 'Challenge created successfully!');\n    } catch (error) {\n      try {\n        // Fall back to mock API\n        const mockResponse = await mockFetchApi('/api/challenges', {\n          method: 'POST',\n          body: newChallenge\n        });\n        \n        // Update challenge lists\n        const updatedChallenges = [...challenges, mockResponse];\n        handleChallengesData(updatedChallenges);\n        \n        // Reset form and close modal\n        resetForm();\n        setModalVisible(false);\n        \n        Alert.alert('Success', 'Challenge created successfully!');\n      } catch (mockError) {\n        console.error('Failed to create challenge:', mockError);\n        Alert.alert('Error', 'Failed to create challenge');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const joinChallenge = async (challengeId: number) => {\n    setIsLoading(true);\n    try {\n      // Try to use real API first\n      await fetchApi(`/api/challenges/${challengeId}/join`, {\n        method: 'POST'\n      });\n      \n      // Refetch challenges to update the lists\n      fetchChallenges();\n      \n      Alert.alert('Success', 'You have joined the challenge!');\n    } catch (error) {\n      try {\n        // Fall back to mock API\n        await mockFetchApi(`/api/challenges/${challengeId}/join`, {\n          method: 'POST'\n        });\n        \n        // Update the challenge in our lists\n        const updatedChallenges = challenges.map(challenge => \n          challenge.id === challengeId \n            ? { ...challenge, status: 'active', myProgress: 0 } \n            : challenge\n        );\n        handleChallengesData(updatedChallenges);\n        \n        Alert.alert('Success', 'You have joined the challenge!');\n      } catch (mockError) {\n        console.error('Failed to join challenge:', mockError);\n        Alert.alert('Error', 'Failed to join challenge');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const resetForm = () => {\n    setChallengeTitle('');\n    setChallengeDescription('');\n    setGoalType('pages');\n    setGoalValue('');\n    setEndDate('');\n    setIsPrivate(false);\n  };\n  \n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  \n  const calculateProgress = (challenge: Challenge) => {\n    return challenge.myProgress ? (challenge.myProgress / challenge.goal) * 100 : 0;\n  };\n  \n  const getGoalTypeLabel = (type: 'pages' | 'books' | 'minutes') => {\n    switch (type) {\n      case 'pages': return 'pages';\n      case 'books': return 'books';\n      case 'minutes': return 'minutes of reading';\n    }\n  };\n  \n  const renderChallengeItem = ({ item }: { item: Challenge }) => {\n    const isCreator = item.creatorId === user?.id;\n    const progress = calculateProgress(item);\n    const isActive = item.status === 'active' || isCreator;\n    \n    return (\n      <Card \n        style={[\n          styles.challengeCard, \n          isCreator && styles.creatorCard,\n          item.status === 'completed' && styles.completedCard\n        ]}\n        onPress={() => navigation.navigate('ChallengeDetail', { challengeId: item.id })}\n      >\n        <Card.Content>\n          <View style={styles.cardHeader}>\n            <Title style={styles.challengeTitle}>{item.title}</Title>\n            {isCreator && (\n              <Chip icon=\"crown\" style={styles.creatorChip}>Creator</Chip>\n            )}\n            {item.status === 'completed' && (\n              <Chip icon=\"check-circle\" style={styles.completedChip}>Completed</Chip>\n            )}\n          </View>\n          \n          <Paragraph style={styles.challengeDescription}>{item.description}</Paragraph>\n          \n          <View style={styles.challengeDetails}>\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>Goal:</Text>\n              <Text style={styles.detailValue}>\n                {item.goal} {getGoalTypeLabel(item.goalType)}\n              </Text>\n            </View>\n            \n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>End Date:</Text>\n              <Text style={styles.detailValue}>{formatDate(item.endDate)}</Text>\n            </View>\n            \n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>Participants:</Text>\n              <Text style={styles.detailValue}>{item.participantCount}</Text>\n            </View>\n          </View>\n          \n          {isActive && (\n            <View style={styles.progressContainer}>\n              <Text style={styles.progressText}>\n                Progress: {item.myProgress || 0} / {item.goal} ({Math.round(progress)}%)\n              </Text>\n              <ProgressBar \n                progress={progress / 100} \n                color={progress >= 100 ? '#4CAF50' : '#6200ee'} \n                style={styles.progressBar} \n              />\n            </View>\n          )}\n          \n          {activeTab === 'public' && !isActive && (\n            <Button \n              mode=\"contained\" \n              onPress={() => joinChallenge(item.id)}\n              style={styles.joinButton}\n            >\n              Join Challenge\n            </Button>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  };\n  \n  const renderEmptyState = () => (\n    <View style={styles.emptyContainer}>\n      <Avatar.Icon size={80} icon=\"trophy\" style={styles.emptyIcon} />\n      <Text style={styles.emptyText}>\n        {activeTab === 'my' \n          ? \"You haven't joined any challenges yet!\"\n          : \"No public challenges available at the moment.\"}\n      </Text>\n      {activeTab === 'my' && (\n        <Button \n          mode=\"contained\" \n          onPress={() => setModalVisible(true)}\n          style={styles.createButtonEmpty}\n        >\n          Create Challenge\n        </Button>\n      )}\n    </View>\n  );\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Title style={styles.title}>Reading Challenges</Title>\n        <Text style={styles.subtitle}>Compete and achieve your reading goals!</Text>\n        \n        <View style={styles.tabsContainer}>\n          <TouchableOpacity\n            style={[styles.tab, activeTab === 'my' && styles.activeTab]}\n            onPress={() => setActiveTab('my')}\n          >\n            <Text style={[styles.tabText, activeTab === 'my' && styles.activeTabText]}>\n              My Challenges\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.tab, activeTab === 'public' && styles.activeTab]}\n            onPress={() => setActiveTab('public')}\n          >\n            <Text style={[styles.tabText, activeTab === 'public' && styles.activeTabText]}>\n              Public Challenges\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      \n      {isLoading ? (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#6200ee\" />\n          <Text style={styles.loadingText}>Loading challenges...</Text>\n        </View>\n      ) : (\n        activeTab === 'my' ? (\n          myChallenges.length > 0 ? (\n            <FlatList\n              data={myChallenges}\n              renderItem={renderChallengeItem}\n              keyExtractor={item => item.id.toString()}\n              contentContainerStyle={styles.challengesList}\n            />\n          ) : renderEmptyState()\n        ) : (\n          publicChallenges.length > 0 ? (\n            <FlatList\n              data={publicChallenges}\n              renderItem={renderChallengeItem}\n              keyExtractor={item => item.id.toString()}\n              contentContainerStyle={styles.challengesList}\n            />\n          ) : renderEmptyState()\n        )\n      )}\n      \n      <Portal>\n        <Modal\n          visible={modalVisible}\n          onDismiss={() => setModalVisible(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          <ScrollView style={styles.modalScrollView}>\n            <Title style={styles.modalTitle}>Create New Challenge</Title>\n            \n            <TextInput\n              label=\"Challenge Title\"\n              value={challengeTitle}\n              onChangeText={setChallengeTitle}\n              style={styles.input}\n            />\n            \n            <TextInput\n              label=\"Description\"\n              value={challengeDescription}\n              onChangeText={setChallengeDescription}\n              multiline\n              numberOfLines={3}\n              style={styles.input}\n            />\n            \n            <Text style={styles.sectionLabel}>Challenge Goal</Text>\n            <View style={styles.goalTypeContainer}>\n              <RadioButton.Group \n                onValueChange={value => setGoalType(value as 'pages' | 'books' | 'minutes')} \n                value={goalType}\n              >\n                <View style={styles.radioOption}>\n                  <RadioButton value=\"pages\" />\n                  <Text>Pages</Text>\n                </View>\n                \n                <View style={styles.radioOption}>\n                  <RadioButton value=\"books\" />\n                  <Text>Books</Text>\n                </View>\n                \n                <View style={styles.radioOption}>\n                  <RadioButton value=\"minutes\" />\n                  <Text>Minutes</Text>\n                </View>\n              </RadioButton.Group>\n            </View>\n            \n            <TextInput\n              label=\"Goal Value\"\n              value={goalValue}\n              onChangeText={setGoalValue}\n              keyboardType=\"numeric\"\n              style={styles.input}\n            />\n            \n            <TextInput\n              label=\"End Date (YYYY-MM-DD)\"\n              value={endDate}\n              onChangeText={setEndDate}\n              placeholder=\"Optional (defaults to 30 days)\"\n              style={styles.input}\n            />\n            \n            <View style={styles.switchContainer}>\n              <Text>Private Challenge</Text>\n              <Switch\n                value={isPrivate}\n                onValueChange={setIsPrivate}\n              />\n            </View>\n            \n            <Text style={styles.privateHint}>\n              Private challenges are invite-only and won't appear in public listing\n            </Text>\n            \n            <View style={styles.modalButtons}>\n              <Button \n                mode=\"outlined\" \n                onPress={() => {\n                  resetForm();\n                  setModalVisible(false);\n                }}\n                style={[styles.modalButton, { marginRight: 8 }]}\n              >\n                Cancel\n              </Button>\n              \n              <Button \n                mode=\"contained\" \n                onPress={createChallenge}\n                style={styles.modalButton}\n                loading={isLoading}\n                disabled={isLoading}\n              >\n                Create\n              </Button>\n            </View>\n          </ScrollView>\n        </Modal>\n      </Portal>\n      \n      {activeTab === 'my' && (\n        <FAB\n          style={styles.fab}\n          icon=\"plus\"\n          onPress={() => setModalVisible(true)}\n          label=\"New Challenge\"\n        />\n      )}\n    </View>\n  );\n};\n\nconst Switch = ({ value, onValueChange }) => {\n  return (\n    <TouchableOpacity \n      style={[styles.switchTrack, value && styles.switchTrackOn]}\n      onPress={() => onValueChange(!value)}\n    >\n      <View style={[styles.switchThumb, value && styles.switchThumbOn]} />\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#6200ee',\n    padding: 24,\n    paddingTop: 36,\n    paddingBottom: 16,\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 4,\n    marginBottom: 16,\n  },\n  tabsContainer: {\n    flexDirection: 'row',\n    marginTop: 8,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    borderBottomWidth: 3,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: 'white',\n  },\n  tabText: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontWeight: '500',\n  },\n  activeTabText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  challengesList: {\n    padding: 16,\n  },\n  challengeCard: {\n    marginBottom: 16,\n    borderRadius: 12,\n    elevation: 3,\n  },\n  creatorCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#ffd700',\n  },\n  completedCard: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#4CAF50',\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  challengeTitle: {\n    flex: 1,\n    fontSize: 18,\n    marginBottom: 8,\n  },\n  creatorChip: {\n    backgroundColor: '#FFF8E1',\n    marginLeft: 8,\n  },\n  completedChip: {\n    backgroundColor: '#E8F5E9',\n    marginLeft: 8,\n  },\n  challengeDescription: {\n    marginBottom: 16,\n    color: '#555',\n  },\n  challengeDetails: {\n    marginBottom: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    marginBottom: 4,\n  },\n  detailLabel: {\n    width: 100,\n    fontWeight: 'bold',\n    color: '#666',\n  },\n  detailValue: {\n    flex: 1,\n    color: '#333',\n  },\n  progressContainer: {\n    marginBottom: 8,\n  },\n  progressText: {\n    marginBottom: 4,\n    fontSize: 14,\n    color: '#555',\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  joinButton: {\n    marginTop: 8,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  emptyIcon: {\n    backgroundColor: '#6200ee',\n    opacity: 0.8,\n    marginBottom: 16,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  createButtonEmpty: {\n    marginTop: 8,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#6200ee',\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 12,\n    padding: 20,\n    maxHeight: '80%',\n  },\n  modalScrollView: {\n    flex: 1,\n  },\n  modalTitle: {\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 16,\n    backgroundColor: 'white',\n  },\n  sectionLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#333',\n  },\n  goalTypeContainer: {\n    marginBottom: 16,\n  },\n  radioOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 4,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n    paddingVertical: 8,\n  },\n  switchTrack: {\n    width: 50,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: '#DDD',\n    justifyContent: 'center',\n    padding: 2,\n  },\n  switchTrackOn: {\n    backgroundColor: 'rgba(98, 0, 238, 0.5)',\n  },\n  switchThumb: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    backgroundColor: 'white',\n    elevation: 2,\n  },\n  switchThumbOn: {\n    transform: [{ translateX: 26 }],\n    backgroundColor: '#6200ee',\n  },\n  privateHint: {\n    fontSize: 12,\n    color: '#666',\n    fontStyle: 'italic',\n    marginBottom: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  modalButton: {\n    flex: 1,\n  },\n});\n\nexport default ChallengesScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}