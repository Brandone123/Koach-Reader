{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\components\\\\LanguageSelector.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport RadioButton from \"react-native-paper/lib/module/components/RadioButton\";\nimport { Title } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLanguage, selectUser } from '../slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LANGUAGES = [{\n  code: 'en',\n  name: 'English',\n  flag: 'ðŸ‡¬ðŸ‡§'\n}, {\n  code: 'fr',\n  name: 'FranÃ§ais',\n  flag: 'ðŸ‡«ðŸ‡·'\n}];\nconst LanguageSelector = ({\n  onSelect,\n  showTitle = true\n}) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const [selectedLanguage, setSelectedLanguage] = useState(user?.preferences?.language || 'en');\n  useEffect(() => {\n    if (user?.preferences?.language) {\n      setSelectedLanguage(user.preferences.language);\n    }\n  }, [user?.preferences?.language]);\n  const handleLanguageSelect = languageCode => {\n    setSelectedLanguage(languageCode);\n    dispatch(setLanguage(languageCode));\n    if (onSelect) {\n      onSelect(languageCode);\n    }\n  };\n  const renderLanguageItem = ({\n    item\n  }) => _jsxDEV(TouchableOpacity, {\n    style: styles.languageItem,\n    onPress: () => handleLanguageSelect(item.code),\n    children: [_jsxDEV(View, {\n      style: styles.flagContainer,\n      children: _jsxDEV(Text, {\n        style: styles.flag,\n        children: item.flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.languageInfo,\n      children: _jsxDEV(Text, {\n        style: styles.languageName,\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), _jsxDEV(RadioButton, {\n      value: item.code,\n      status: selectedLanguage === item.code ? 'checked' : 'unchecked',\n      onPress: () => handleLanguageSelect(item.code),\n      color: \"#8A2BE2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [showTitle && _jsxDEV(Title, {\n      style: styles.title,\n      children: \"Select Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this), _jsxDEV(FlatList, {\n      data: LANGUAGES,\n      renderItem: renderLanguageItem,\n      keyExtractor: item => item.code,\n      contentContainerStyle: styles.list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    marginBottom: 20,\n    textAlign: 'center',\n    color: '#333',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  list: {\n    paddingBottom: 16\n  },\n  languageItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  flagContainer: {\n    marginRight: 16\n  },\n  flag: {\n    fontSize: 24\n  },\n  languageInfo: {\n    flex: 1\n  },\n  languageName: {\n    fontSize: 16,\n    color: '#333'\n  }\n});\nexport default LanguageSelector;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","TouchableOpacity","FlatList","Text","RadioButton","Title","useDispatch","useSelector","setLanguage","selectUser","jsxDEV","_jsxDEV","LANGUAGES","code","name","flag","LanguageSelector","onSelect","showTitle","dispatch","user","selectedLanguage","setSelectedLanguage","preferences","language","handleLanguageSelect","languageCode","renderLanguageItem","item","style","styles","languageItem","onPress","children","flagContainer","fileName","_jsxFileName","lineNumber","columnNumber","languageInfo","languageName","value","status","color","container","title","data","renderItem","keyExtractor","contentContainerStyle","list","create","flex","padding","marginBottom","textAlign","fontSize","fontWeight","paddingBottom","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor","marginRight"],"sources":["D:/All_Projects/Koach-Reader/client/src/components/LanguageSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, FlatList } from 'react-native';\r\nimport { Text, RadioButton, Title } from 'react-native-paper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLanguage, selectUser } from '../slices/authSlice';\r\n\r\n// Liste des langues disponibles\r\nexport const LANGUAGES = [\r\n  { code: 'en', name: 'English', flag: 'ðŸ‡¬ðŸ‡§' },\r\n  { code: 'fr', name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' }\r\n];\r\n\r\ninterface LanguageSelectorProps {\r\n  onSelect?: (language: string) => void;\r\n  showTitle?: boolean;\r\n}\r\n\r\nconst LanguageSelector: React.FC<LanguageSelectorProps> = ({\r\n  onSelect,\r\n  showTitle = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(\r\n    user?.preferences?.language || 'en'\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Update the selected language if user preferences change\r\n    if (user?.preferences?.language) {\r\n      setSelectedLanguage(user.preferences.language);\r\n    }\r\n  }, [user?.preferences?.language]);\r\n\r\n  const handleLanguageSelect = (languageCode: string) => {\r\n    setSelectedLanguage(languageCode);\r\n    dispatch(setLanguage(languageCode));\r\n    if (onSelect) {\r\n      onSelect(languageCode);\r\n    }\r\n  };\r\n\r\n  const renderLanguageItem = ({ item }: { item: typeof LANGUAGES[0] }) => (\r\n    <TouchableOpacity\r\n      style={styles.languageItem}\r\n      onPress={() => handleLanguageSelect(item.code)}\r\n    >\r\n      <View style={styles.flagContainer}>\r\n        <Text style={styles.flag}>{item.flag}</Text>\r\n      </View>\r\n      <View style={styles.languageInfo}>\r\n        <Text style={styles.languageName}>{item.name}</Text>\r\n      </View>\r\n      <RadioButton\r\n        value={item.code}\r\n        status={selectedLanguage === item.code ? 'checked' : 'unchecked'}\r\n        onPress={() => handleLanguageSelect(item.code)}\r\n        color=\"#8A2BE2\"\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {showTitle && <Title style={styles.title}>Select Language</Title>}\r\n      \r\n      <FlatList\r\n        data={LANGUAGES}\r\n        renderItem={renderLanguageItem}\r\n        keyExtractor={(item) => item.code}\r\n        contentContainerStyle={styles.list}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: '#333',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  list: {\r\n    paddingBottom: 16,\r\n  },\r\n  languageItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  flagContainer: {\r\n    marginRight: 16,\r\n  },\r\n  flag: {\r\n    fontSize: 24,\r\n  },\r\n  languageInfo: {\r\n    flex: 1,\r\n  },\r\n  languageName: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  }\r\n});\r\n\r\nexport default LanguageSelector; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}