{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\screens\\\\HomeScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport { Title } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport { Paragraph } from \"react-native-paper/lib/module/components/Typography/v2\";\nimport Chip from \"react-native-paper/lib/module/components/Chip/Chip\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport Searchbar from \"react-native-paper/lib/module/components/Searchbar\";\nimport ProgressBar from \"react-native-paper/lib/module/components/ProgressBar\";\nimport Divider from \"react-native-paper/lib/module/components/Divider\";\nimport FAB from \"react-native-paper/lib/module/components/FAB\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBooks, selectBooks, selectBooksLoading } from '../slices/booksSlice';\nimport { fetchReadingPlans, selectReadingPlans, selectReadingPlansLoading } from '../slices/readingPlansSlice';\nimport { selectUser } from '../slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = ({\n  navigation\n}) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const books = useSelector(selectBooks);\n  const readingPlans = useSelector(selectReadingPlans);\n  const isBooksLoading = useSelector(selectBooksLoading);\n  const isPlansLoading = useSelector(selectReadingPlansLoading);\n  const [refreshing, setRefreshing] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    dispatch(fetchBooks({}));\n    dispatch(fetchReadingPlans({}));\n  }, [dispatch]);\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await Promise.all([dispatch(fetchBooks({})), dispatch(fetchReadingPlans({}))]);\n    setRefreshing(false);\n  };\n  const calculateProgress = plan => {\n    return plan.currentPage / plan.totalPages * 100;\n  };\n  const renderBookItem = ({\n    item\n  }) => _jsxDEV(Card, {\n    style: styles.bookCard,\n    onPress: () => navigation.navigate('BookDetail', {\n      bookId: item.id\n    }),\n    children: [_jsxDEV(Card.Cover, {\n      source: {\n        uri: item.coverImageUrl || 'https://via.placeholder.com/150'\n      },\n      style: styles.bookCover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), _jsxDEV(Card.Content, {\n      children: [_jsxDEV(Title, {\n        numberOfLines: 1,\n        style: styles.bookTitle,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), _jsxDEV(Paragraph, {\n        numberOfLines: 1,\n        children: item.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.chipContainer,\n        children: [_jsxDEV(Chip, {\n          style: styles.chip,\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), _jsxDEV(Chip, {\n          style: styles.chip,\n          children: [item.pageCount, \" pages\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n  const renderPlanItem = ({\n    item\n  }) => _jsxDEV(Card, {\n    style: styles.planCard,\n    onPress: () => navigation.navigate('ReadingPlan', {\n      planId: item.id\n    }),\n    children: _jsxDEV(Card.Content, {\n      children: [_jsxDEV(Title, {\n        numberOfLines: 1,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), _jsxDEV(Paragraph, {\n        numberOfLines: 1,\n        children: [item.book?.title, \" by \", item.book?.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.progressContainer,\n        children: [_jsxDEV(View, {\n          style: styles.progressTextContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.progressText,\n            children: [item.currentPage, \" of \", item.totalPages, \" pages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.progressPercent,\n            children: [Math.round(item.currentPage / item.totalPages * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), _jsxDEV(ProgressBar, {\n          progress: item.currentPage / item.totalPages,\n          color: \"#6200ee\",\n          style: styles.progressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.planDetails,\n        children: [_jsxDEV(Text, {\n          style: styles.planDetailText,\n          children: [item.pagesPerSession, \" pages \", item.frequency === 'daily' ? 'per day' : 'per week']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          mode: \"text\",\n          compact: true,\n          onPress: () => navigation.navigate('ReadingPlan', {\n            planId: item.id\n          }),\n          children: \"Log Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n  const filteredBooks = searchQuery ? books.filter(book => book.title.toLowerCase().includes(searchQuery.toLowerCase()) || book.author.toLowerCase().includes(searchQuery.toLowerCase()) || book.category.toLowerCase().includes(searchQuery.toLowerCase())) : books;\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(ScrollView, {\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this),\n      style: styles.scrollView,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.welcomeText,\n          children: [\"Welcome back, \", user?.username || 'Reader', \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statsContainer,\n          children: [_jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statValue,\n              children: user?.koachPoints || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: \"Koach Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statValue,\n              children: user?.readingStreak || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: \"Day Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), _jsxDEV(Searchbar, {\n        placeholder: \"Search books...\",\n        onChangeText: setSearchQuery,\n        value: searchQuery,\n        style: styles.searchbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.section,\n        children: [_jsxDEV(View, {\n          style: styles.sectionHeader,\n          children: [_jsxDEV(Text, {\n            style: styles.sectionTitle,\n            children: \"My Reading Plans\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            mode: \"text\",\n            onPress: () => navigation.navigate('ReadingPlan', {}),\n            disabled: isPlansLoading,\n            children: \"New Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), readingPlans.length === 0 ? _jsxDEV(Card, {\n          style: styles.emptyCard,\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Text, {\n              style: styles.emptyText,\n              children: \"You don't have any reading plans yet. Create your first one!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: () => navigation.navigate('ReadingPlan', {}),\n              style: styles.emptyButton,\n              children: \"Create Reading Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this) : _jsxDEV(FlatList, {\n          data: readingPlans,\n          renderItem: renderPlanItem,\n          keyExtractor: item => item.id.toString(),\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          contentContainerStyle: styles.plansList,\n          ListEmptyComponent: isPlansLoading ? _jsxDEV(Text, {\n            style: styles.loadingText,\n            children: \"Loading your reading plans...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), _jsxDEV(Divider, {\n        style: styles.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.section,\n        children: [_jsxDEV(View, {\n          style: styles.sectionHeader,\n          children: _jsxDEV(Text, {\n            style: styles.sectionTitle,\n            children: searchQuery ? 'Search Results' : 'Discover Books'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), filteredBooks.length === 0 ? _jsxDEV(Card, {\n          style: styles.emptyCard,\n          children: _jsxDEV(Card.Content, {\n            children: _jsxDEV(Text, {\n              style: styles.emptyText,\n              children: searchQuery ? 'No books found matching your search.' : 'No books available at the moment.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : _jsxDEV(FlatList, {\n          data: filteredBooks,\n          renderItem: renderBookItem,\n          keyExtractor: item => item.id.toString(),\n          horizontal: false,\n          numColumns: 2,\n          columnWrapperStyle: styles.bookGrid,\n          showsVerticalScrollIndicator: false,\n          scrollEnabled: false,\n          ListEmptyComponent: isBooksLoading ? _jsxDEV(Text, {\n            style: styles.loadingText,\n            children: \"Loading books...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), _jsxDEV(FAB, {\n      style: styles.fab,\n      icon: \"plus\",\n      label: \"Add Book\",\n      onPress: () => navigation.navigate('BookDetail', {\n        bookId: 0\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollView: {\n    flex: 1\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#6200ee',\n    borderBottomLeftRadius: 16,\n    borderBottomRightRadius: 16\n  },\n  welcomeText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 16\n  },\n  statsContainer: {\n    flexDirection: 'row'\n  },\n  statItem: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 8,\n    padding: 12,\n    marginRight: 12,\n    minWidth: 100\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  statLabel: {\n    fontSize: 12,\n    color: 'white',\n    opacity: 0.8\n  },\n  searchbar: {\n    margin: 16,\n    elevation: 2\n  },\n  section: {\n    padding: 16\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  emptyCard: {\n    marginVertical: 8,\n    elevation: 2\n  },\n  emptyText: {\n    textAlign: 'center',\n    margin: 16,\n    color: '#666'\n  },\n  emptyButton: {\n    marginTop: 16\n  },\n  loadingText: {\n    textAlign: 'center',\n    margin: 16,\n    color: '#666'\n  },\n  plansList: {\n    paddingEnd: 16\n  },\n  planCard: {\n    width: 280,\n    marginRight: 16,\n    elevation: 2\n  },\n  progressContainer: {\n    marginVertical: 8\n  },\n  progressTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4\n  },\n  progressText: {\n    fontSize: 12,\n    color: '#666'\n  },\n  progressPercent: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#6200ee'\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4\n  },\n  planDetails: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8\n  },\n  planDetailText: {\n    fontSize: 12,\n    color: '#666'\n  },\n  bookGrid: {\n    justifyContent: 'space-between',\n    marginBottom: 16\n  },\n  bookCard: {\n    width: '48%',\n    marginBottom: 16,\n    elevation: 2\n  },\n  bookCover: {\n    height: 150\n  },\n  bookTitle: {\n    fontSize: 16\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 8\n  },\n  chip: {\n    marginRight: 8,\n    marginTop: 8,\n    height: 24\n  },\n  divider: {\n    marginVertical: 8\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#6200ee'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","ScrollView","RefreshControl","FlatList","Card","Title","Paragraph","Chip","Button","Searchbar","ProgressBar","Divider","FAB","useDispatch","useSelector","fetchBooks","selectBooks","selectBooksLoading","fetchReadingPlans","selectReadingPlans","selectReadingPlansLoading","selectUser","jsxDEV","_jsxDEV","HomeScreen","navigation","dispatch","user","books","readingPlans","isBooksLoading","isPlansLoading","refreshing","setRefreshing","searchQuery","setSearchQuery","onRefresh","Promise","all","calculateProgress","plan","currentPage","totalPages","renderBookItem","item","style","styles","bookCard","onPress","navigate","bookId","id","children","Cover","source","uri","coverImageUrl","bookCover","fileName","_jsxFileName","lineNumber","columnNumber","Content","numberOfLines","bookTitle","title","author","chipContainer","chip","category","pageCount","renderPlanItem","planCard","planId","book","progressContainer","progressTextContainer","progressText","progressPercent","Math","round","progress","color","progressBar","planDetails","planDetailText","pagesPerSession","frequency","mode","compact","filteredBooks","filter","toLowerCase","includes","container","refreshControl","scrollView","header","welcomeText","username","statsContainer","statItem","statValue","koachPoints","statLabel","readingStreak","placeholder","onChangeText","value","searchbar","section","sectionHeader","sectionTitle","disabled","length","emptyCard","emptyText","emptyButton","data","renderItem","keyExtractor","toString","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","plansList","ListEmptyComponent","loadingText","divider","numColumns","columnWrapperStyle","bookGrid","showsVerticalScrollIndicator","scrollEnabled","fab","icon","label","create","flex","backgroundColor","padding","borderBottomLeftRadius","borderBottomRightRadius","fontSize","fontWeight","marginBottom","flexDirection","borderRadius","marginRight","minWidth","opacity","margin","elevation","justifyContent","alignItems","marginVertical","textAlign","marginTop","paddingEnd","width","height","flexWrap","position","right","bottom"],"sources":["D:/All_Projects/Koach-Reader/client/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  ScrollView, \n  TouchableOpacity,\n  RefreshControl,\n  FlatList,\n  Image\n} from 'react-native';\nimport { \n  Card, \n  Title, \n  Paragraph, \n  Chip, \n  Button, \n  Searchbar,\n  ProgressBar,\n  Divider,\n  FAB\n} from 'react-native-paper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBooks, selectBooks, selectBooksLoading } from '../slices/booksSlice';\nimport { \n  fetchReadingPlans, \n  selectReadingPlans, \n  selectReadingPlansLoading \n} from '../slices/readingPlansSlice';\nimport { selectUser } from '../slices/authSlice';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../../App';\nimport { AppDispatch } from '../store';\n\ntype HomeScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;\n\ninterface HomeScreenProps {\n  navigation: HomeScreenNavigationProp;\n}\n\nconst HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const user = useSelector(selectUser);\n  const books = useSelector(selectBooks);\n  const readingPlans = useSelector(selectReadingPlans);\n  const isBooksLoading = useSelector(selectBooksLoading);\n  const isPlansLoading = useSelector(selectReadingPlansLoading);\n  \n  const [refreshing, setRefreshing] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  useEffect(() => {\n    // Fetch initial data\n    dispatch(fetchBooks({}));\n    dispatch(fetchReadingPlans({}));\n  }, [dispatch]);\n  \n  const onRefresh = async () => {\n    setRefreshing(true);\n    await Promise.all([\n      dispatch(fetchBooks({})),\n      dispatch(fetchReadingPlans({}))\n    ]);\n    setRefreshing(false);\n  };\n  \n  const calculateProgress = (plan: any) => {\n    return (plan.currentPage / plan.totalPages) * 100;\n  };\n  \n  const renderBookItem = ({ item }: { item: any }) => (\n    <Card \n      style={styles.bookCard}\n      onPress={() => navigation.navigate('BookDetail', { bookId: item.id })}\n    >\n      <Card.Cover \n        source={{ uri: item.coverImageUrl || 'https://via.placeholder.com/150' }} \n        style={styles.bookCover}\n      />\n      <Card.Content>\n        <Title numberOfLines={1} style={styles.bookTitle}>{item.title}</Title>\n        <Paragraph numberOfLines={1}>{item.author}</Paragraph>\n        <View style={styles.chipContainer}>\n          <Chip style={styles.chip}>{item.category}</Chip>\n          <Chip style={styles.chip}>{item.pageCount} pages</Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n  \n  const renderPlanItem = ({ item }: { item: any }) => (\n    <Card \n      style={styles.planCard}\n      onPress={() => navigation.navigate('ReadingPlan', { planId: item.id })}\n    >\n      <Card.Content>\n        <Title numberOfLines={1}>{item.title}</Title>\n        <Paragraph numberOfLines={1}>\n          {item.book?.title} by {item.book?.author}\n        </Paragraph>\n        <View style={styles.progressContainer}>\n          <View style={styles.progressTextContainer}>\n            <Text style={styles.progressText}>\n              {item.currentPage} of {item.totalPages} pages\n            </Text>\n            <Text style={styles.progressPercent}>\n              {Math.round((item.currentPage / item.totalPages) * 100)}%\n            </Text>\n          </View>\n          <ProgressBar \n            progress={item.currentPage / item.totalPages} \n            color=\"#6200ee\"\n            style={styles.progressBar}\n          />\n        </View>\n        <View style={styles.planDetails}>\n          <Text style={styles.planDetailText}>\n            {item.pagesPerSession} pages {item.frequency === 'daily' ? 'per day' : 'per week'}\n          </Text>\n          <Button \n            mode=\"text\" \n            compact \n            onPress={() => navigation.navigate('ReadingPlan', { planId: item.id })}\n          >\n            Log Progress\n          </Button>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n  \n  const filteredBooks = searchQuery\n    ? books.filter(book => \n        book.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        book.author.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        book.category.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    : books;\n  \n  return (\n    <View style={styles.container}>\n      <ScrollView\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n          />\n        }\n        style={styles.scrollView}\n      >\n        <View style={styles.header}>\n          <Text style={styles.welcomeText}>\n            Welcome back, {user?.username || 'Reader'}!\n          </Text>\n          <View style={styles.statsContainer}>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{user?.koachPoints || 0}</Text>\n              <Text style={styles.statLabel}>Koach Points</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{user?.readingStreak || 0}</Text>\n              <Text style={styles.statLabel}>Day Streak</Text>\n            </View>\n          </View>\n        </View>\n        \n        <Searchbar\n          placeholder=\"Search books...\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n        \n        {/* Reading Plans Section */}\n        <View style={styles.section}>\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>My Reading Plans</Text>\n            <Button \n              mode=\"text\" \n              onPress={() => navigation.navigate('ReadingPlan', {})}\n              disabled={isPlansLoading}\n            >\n              New Plan\n            </Button>\n          </View>\n          \n          {readingPlans.length === 0 ? (\n            <Card style={styles.emptyCard}>\n              <Card.Content>\n                <Text style={styles.emptyText}>\n                  You don't have any reading plans yet. Create your first one!\n                </Text>\n                <Button \n                  mode=\"contained\" \n                  onPress={() => navigation.navigate('ReadingPlan', {})}\n                  style={styles.emptyButton}\n                >\n                  Create Reading Plan\n                </Button>\n              </Card.Content>\n            </Card>\n          ) : (\n            <FlatList\n              data={readingPlans}\n              renderItem={renderPlanItem}\n              keyExtractor={item => item.id.toString()}\n              horizontal\n              showsHorizontalScrollIndicator={false}\n              contentContainerStyle={styles.plansList}\n              ListEmptyComponent={\n                isPlansLoading ? (\n                  <Text style={styles.loadingText}>Loading your reading plans...</Text>\n                ) : null\n              }\n            />\n          )}\n        </View>\n        \n        <Divider style={styles.divider} />\n        \n        {/* Books Section */}\n        <View style={styles.section}>\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>\n              {searchQuery ? 'Search Results' : 'Discover Books'}\n            </Text>\n          </View>\n          \n          {filteredBooks.length === 0 ? (\n            <Card style={styles.emptyCard}>\n              <Card.Content>\n                <Text style={styles.emptyText}>\n                  {searchQuery \n                    ? 'No books found matching your search.' \n                    : 'No books available at the moment.'}\n                </Text>\n              </Card.Content>\n            </Card>\n          ) : (\n            <FlatList\n              data={filteredBooks}\n              renderItem={renderBookItem}\n              keyExtractor={item => item.id.toString()}\n              horizontal={false}\n              numColumns={2}\n              columnWrapperStyle={styles.bookGrid}\n              showsVerticalScrollIndicator={false}\n              scrollEnabled={false}\n              ListEmptyComponent={\n                isBooksLoading ? (\n                  <Text style={styles.loadingText}>Loading books...</Text>\n                ) : null\n              }\n            />\n          )}\n        </View>\n      </ScrollView>\n      \n      <FAB\n        style={styles.fab}\n        icon=\"plus\"\n        label=\"Add Book\"\n        onPress={() => navigation.navigate('BookDetail', { bookId: 0 })}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#6200ee',\n    borderBottomLeftRadius: 16,\n    borderBottomRightRadius: 16,\n  },\n  welcomeText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n  },\n  statItem: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 8,\n    padding: 12,\n    marginRight: 12,\n    minWidth: 100,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: 'white',\n    opacity: 0.8,\n  },\n  searchbar: {\n    margin: 16,\n    elevation: 2,\n  },\n  section: {\n    padding: 16,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  emptyCard: {\n    marginVertical: 8,\n    elevation: 2,\n  },\n  emptyText: {\n    textAlign: 'center',\n    margin: 16,\n    color: '#666',\n  },\n  emptyButton: {\n    marginTop: 16,\n  },\n  loadingText: {\n    textAlign: 'center',\n    margin: 16,\n    color: '#666',\n  },\n  plansList: {\n    paddingEnd: 16,\n  },\n  planCard: {\n    width: 280,\n    marginRight: 16,\n    elevation: 2,\n  },\n  progressContainer: {\n    marginVertical: 8,\n  },\n  progressTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4,\n  },\n  progressText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  progressPercent: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#6200ee',\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  planDetails: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  planDetailText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  bookGrid: {\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  bookCard: {\n    width: '48%',\n    marginBottom: 16,\n    elevation: 2,\n  },\n  bookCover: {\n    height: 150,\n  },\n  bookTitle: {\n    fontSize: 16,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 8,\n  },\n  chip: {\n    marginRight: 8,\n    marginTop: 8,\n    height: 24,\n  },\n  divider: {\n    marginVertical: 8,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#6200ee',\n  },\n});\n\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}