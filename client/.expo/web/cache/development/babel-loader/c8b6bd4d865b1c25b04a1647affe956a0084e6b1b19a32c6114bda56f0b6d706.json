{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\components\\\\DatePickerField.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTranslation } from 'react-i18next';\nimport CustomDatePicker from './CustomDatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatePickerField = ({\n  label,\n  value,\n  onChange,\n  error\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const [isPickerVisible, setIsPickerVisible] = useState(false);\n  const formatDate = date => {\n    return date.toLocaleDateString();\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.dateField, error ? styles.errorField : {}],\n      onPress: () => setIsPickerVisible(true),\n      children: _jsxDEV(Text, {\n        style: styles.dateText,\n        children: formatDate(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error ? _jsxDEV(Text, {\n      style: styles.errorText,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null, _jsxDEV(CustomDatePicker, {\n      value: value,\n      onChange: onChange,\n      isVisible: isPickerVisible,\n      onClose: () => setIsPickerVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n    width: '100%'\n  },\n  label: {\n    marginBottom: 8,\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#333'\n  },\n  dateField: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    padding: 12,\n    backgroundColor: '#f9f9f9'\n  },\n  dateText: {\n    fontSize: 16,\n    color: '#333'\n  },\n  errorField: {\n    borderColor: '#e53935'\n  },\n  errorText: {\n    color: '#e53935',\n    fontSize: 12,\n    marginTop: 4\n  }\n});\nexport default DatePickerField;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","useTranslation","CustomDatePicker","jsxDEV","_jsxDEV","DatePickerField","label","value","onChange","error","t","isPickerVisible","setIsPickerVisible","formatDate","date","toLocaleDateString","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","dateField","errorField","onPress","dateText","errorText","isVisible","onClose","create","marginBottom","width","fontSize","fontWeight","color","borderWidth","borderColor","borderRadius","padding","backgroundColor","marginTop"],"sources":["D:/All_Projects/Koach-Reader/client/src/components/DatePickerField.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CustomDatePicker from './CustomDatePicker';\r\n\r\ninterface DatePickerFieldProps {\r\n  label: string;\r\n  value: Date;\r\n  onChange: (date: Date) => void;\r\n  error?: string;\r\n}\r\n\r\nconst DatePickerField: React.FC<DatePickerFieldProps> = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [isPickerVisible, setIsPickerVisible] = useState(false);\r\n\r\n  const formatDate = (date: Date): string => {\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>{label}</Text>\r\n      \r\n      <TouchableOpacity \r\n        style={[styles.dateField, error ? styles.errorField : {}]} \r\n        onPress={() => setIsPickerVisible(true)}\r\n      >\r\n        <Text style={styles.dateText}>\r\n          {formatDate(value)}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      \r\n      {error ? (\r\n        <Text style={styles.errorText}>{error}</Text>\r\n      ) : null}\r\n      \r\n      <CustomDatePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        isVisible={isPickerVisible}\r\n        onClose={() => setIsPickerVisible(false)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 16,\r\n    width: '100%',\r\n  },\r\n  label: {\r\n    marginBottom: 8,\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    color: '#333',\r\n  },\r\n  dateField: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    padding: 12,\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  dateText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  errorField: {\r\n    borderColor: '#e53935',\r\n  },\r\n  errorText: {\r\n    color: '#e53935',\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nexport default DatePickerField; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}