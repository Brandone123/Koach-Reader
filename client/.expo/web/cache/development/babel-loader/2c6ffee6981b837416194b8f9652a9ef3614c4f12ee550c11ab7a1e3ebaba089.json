{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\context\\\\LanguageContext.tsx\";\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getStoredLanguage, setLanguage } from '../utils/i18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = createContext(undefined);\nexport const LanguageProvider = ({\n  children\n}) => {\n  const {\n    i18n\n  } = useTranslation();\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'en');\n  const [isChangingLanguage, setIsChangingLanguage] = useState(false);\n  useEffect(() => {\n    const initLanguage = async () => {\n      const storedLanguage = await getStoredLanguage();\n      setCurrentLanguage(storedLanguage);\n    };\n    initLanguage();\n  }, []);\n  const changeLanguage = async language => {\n    setIsChangingLanguage(true);\n    await setLanguage(language);\n    setCurrentLanguage(language);\n    setIsChangingLanguage(false);\n  };\n  return _jsxDEV(LanguageContext.Provider, {\n    value: {\n      currentLanguage,\n      changeLanguage,\n      isChangingLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useTranslation","getStoredLanguage","setLanguage","jsxDEV","_jsxDEV","LanguageContext","undefined","LanguageProvider","children","i18n","currentLanguage","setCurrentLanguage","language","isChangingLanguage","setIsChangingLanguage","initLanguage","storedLanguage","changeLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","useLanguage","context","Error"],"sources":["D:/All_Projects/Koach-Reader/client/src/context/LanguageContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getStoredLanguage, setLanguage } from '../utils/i18n';\r\n\r\ninterface LanguageContextType {\r\n  currentLanguage: string;\r\n  changeLanguage: (language: string) => Promise<void>;\r\n  isChangingLanguage: boolean;\r\n}\r\n\r\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\r\n\r\ninterface LanguageProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {\r\n  const { i18n } = useTranslation();\r\n  const [currentLanguage, setCurrentLanguage] = useState<string>(i18n.language || 'en');\r\n  const [isChangingLanguage, setIsChangingLanguage] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const initLanguage = async () => {\r\n      const storedLanguage = await getStoredLanguage();\r\n      setCurrentLanguage(storedLanguage);\r\n    };\r\n\r\n    initLanguage();\r\n  }, []);\r\n\r\n  const changeLanguage = async (language: string) => {\r\n    setIsChangingLanguage(true);\r\n    await setLanguage(language);\r\n    setCurrentLanguage(language);\r\n    setIsChangingLanguage(false);\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{\r\n        currentLanguage,\r\n        changeLanguage,\r\n        isChangingLanguage\r\n      }}\r\n    >\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = (): LanguageContextType => {\r\n  const context = useContext(LanguageContext);\r\n  if (context === undefined) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/D,MAAMC,eAAe,GAAGT,aAAa,CAAkCU,SAAS,CAAC;AAMjF,OAAO,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjF,MAAM;IAAEC;EAAK,CAAC,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAASY,IAAI,CAACG,QAAQ,IAAI,IAAI,CAAC;EACrF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EAE5EE,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,cAAc,GAAG,MAAMf,iBAAiB,CAAC,CAAC;MAChDU,kBAAkB,CAACK,cAAc,CAAC;IACpC,CAAC;IAEDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAG,MAAOL,QAAgB,IAAK;IACjDE,qBAAqB,CAAC,IAAI,CAAC;IAC3B,MAAMZ,WAAW,CAACU,QAAQ,CAAC;IAC3BD,kBAAkB,CAACC,QAAQ,CAAC;IAC5BE,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,OACEV,OAAA,CAACC,eAAe,CAACa,QAAQ;IACvBC,KAAK,EAAE;MACLT,eAAe;MACfO,cAAc;MACdJ;IACF,CAAE;IAAAL,QAAA,EAEDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAA2B;EACpD,MAAMC,OAAO,GAAG3B,UAAU,CAACO,eAAe,CAAC;EAC3C,IAAIoB,OAAO,KAAKnB,SAAS,EAAE;IACzB,MAAM,IAAIoB,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}