{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\src\\\\components\\\\BottomNavigationBar.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport BottomNavigation from \"react-native-paper/lib/module/components/BottomNavigation/BottomNavigation\";\nimport Badge from \"react-native-paper/lib/module/components/Badge\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BottomNavigationBar = () => {\n  const [index, setIndex] = React.useState(0);\n  const navigation = useNavigation();\n  const unreadNotificationsCount = useSelector(state => state.notifications?.unreadCount || 0);\n  const routes = [{\n    key: 'home',\n    title: 'Home',\n    icon: 'home'\n  }, {\n    key: 'badges',\n    title: 'Badges',\n    icon: 'trophy'\n  }, {\n    key: 'stats',\n    title: 'Stats',\n    icon: 'chart-bar'\n  }, {\n    key: 'challenges',\n    title: 'Challenges',\n    icon: 'flag'\n  }, {\n    key: 'profile',\n    title: 'Profile',\n    icon: 'account'\n  }];\n  const renderScene = BottomNavigation.SceneMap({\n    home: () => null,\n    badges: () => null,\n    stats: () => null,\n    challenges: () => null,\n    profile: () => null\n  });\n  const handleIndexChange = newIndex => {\n    setIndex(newIndex);\n    switch (routes[newIndex].key) {\n      case 'home':\n        navigation.navigate('Home');\n        break;\n      case 'badges':\n        navigation.navigate('Badges');\n        break;\n      case 'stats':\n        navigation.navigate('Stats');\n        break;\n      case 'challenges':\n        navigation.navigate('Challenges');\n        break;\n      case 'profile':\n        navigation.navigate('Profile');\n        break;\n    }\n  };\n  const renderBadge = ({\n    route\n  }) => {\n    if (route.key === 'profile' && unreadNotificationsCount > 0) {\n      return _jsxDEV(Badge, {\n        visible: true,\n        size: 16,\n        style: styles.badge,\n        children: unreadNotificationsCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(BottomNavigation, {\n      navigationState: {\n        index,\n        routes\n      },\n      onIndexChange: handleIndexChange,\n      renderScene: renderScene,\n      shifting: true,\n      compact: false,\n      labeled: true,\n      renderBadge: renderBadge,\n      sceneAnimationType: \"shifting\",\n      sceneAnimationEnabled: true,\n      theme: {\n        colors: {\n          secondaryContainer: 'transparent'\n        }\n      },\n      barStyle: styles.bar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'transparent'\n  },\n  bar: {\n    backgroundColor: '#FFFFFF',\n    height: Platform.OS === 'ios' ? 80 : 64,\n    paddingBottom: Platform.OS === 'ios' ? 30 : 0,\n    borderTopWidth: 1,\n    borderTopColor: '#EBEBEB',\n    elevation: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: '#FF6B6B'\n  }\n});\nexport default BottomNavigationBar;","map":{"version":3,"names":["React","View","StyleSheet","Platform","BottomNavigation","Badge","useNavigation","useSelector","jsxDEV","_jsxDEV","BottomNavigationBar","index","setIndex","useState","navigation","unreadNotificationsCount","state","notifications","unreadCount","routes","key","title","icon","renderScene","SceneMap","home","badges","stats","challenges","profile","handleIndexChange","newIndex","navigate","renderBadge","route","visible","size","style","styles","badge","children","fileName","_jsxFileName","lineNumber","columnNumber","container","navigationState","onIndexChange","shifting","compact","labeled","sceneAnimationType","sceneAnimationEnabled","theme","colors","secondaryContainer","barStyle","bar","create","position","bottom","left","right","backgroundColor","height","OS","paddingBottom","borderTopWidth","borderTopColor","elevation","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","top"],"sources":["D:/All_Projects/Koach-Reader/client/src/components/BottomNavigationBar.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Platform } from 'react-native';\r\nimport { BottomNavigation, Text, Badge } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nconst BottomNavigationBar = () => {\r\n  const [index, setIndex] = React.useState(0);\r\n  const navigation = useNavigation();\r\n  const unreadNotificationsCount = useSelector((state: RootState) => \r\n    state.notifications?.unreadCount || 0\r\n  );\r\n\r\n  const routes = [\r\n    { key: 'home', title: 'Home', icon: 'home' },\r\n    { key: 'badges', title: 'Badges', icon: 'trophy' },\r\n    { key: 'stats', title: 'Stats', icon: 'chart-bar' },\r\n    { key: 'challenges', title: 'Challenges', icon: 'flag' },\r\n    { key: 'profile', title: 'Profile', icon: 'account' },\r\n  ];\r\n\r\n  const renderScene = BottomNavigation.SceneMap({\r\n    home: () => null,\r\n    badges: () => null,\r\n    stats: () => null,\r\n    challenges: () => null,\r\n    profile: () => null,\r\n  });\r\n\r\n  const handleIndexChange = (newIndex: number) => {\r\n    setIndex(newIndex);\r\n    \r\n    switch (routes[newIndex].key) {\r\n      case 'home':\r\n        navigation.navigate('Home');\r\n        break;\r\n      case 'badges':\r\n        navigation.navigate('Badges');\r\n        break;\r\n      case 'stats':\r\n        navigation.navigate('Stats');\r\n        break;\r\n      case 'challenges':\r\n        navigation.navigate('Challenges');\r\n        break;\r\n      case 'profile':\r\n        navigation.navigate('Profile');\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Customize rendering of badge for notifications\r\n  const renderBadge = ({ route }: { route: { key: string } }) => {\r\n    if (route.key === 'profile' && unreadNotificationsCount > 0) {\r\n      return (\r\n        <Badge\r\n          visible={true}\r\n          size={16}\r\n          style={styles.badge}\r\n        >\r\n          {unreadNotificationsCount}\r\n        </Badge>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BottomNavigation\r\n        navigationState={{ index, routes }}\r\n        onIndexChange={handleIndexChange}\r\n        renderScene={renderScene}\r\n        shifting={true}\r\n        compact={false}\r\n        labeled={true}\r\n        renderBadge={renderBadge}\r\n        sceneAnimationType=\"shifting\"\r\n        sceneAnimationEnabled={true}\r\n        theme={{\r\n          colors: {\r\n            secondaryContainer: 'transparent',\r\n          }\r\n        }}\r\n        barStyle={styles.bar}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  bar: {\r\n    backgroundColor: '#FFFFFF',\r\n    height: Platform.OS === 'ios' ? 80 : 64,\r\n    paddingBottom: Platform.OS === 'ios' ? 30 : 0,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#EBEBEB',\r\n    elevation: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: -2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n  },\r\n  badge: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: '#FF6B6B',\r\n  },\r\n});\r\n\r\nexport default BottomNavigationBar; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}