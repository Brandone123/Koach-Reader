{"ast":null,"code":"var _jsxFileName = \"D:\\\\All_Projects\\\\Koach-Reader\\\\client\\\\App.tsx\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport PaperProvider from \"react-native-paper/lib/module/core/PaperProvider\";\nimport { DefaultTheme } from \"react-native-paper/lib/module/core/theming\";\nimport IconButton from \"react-native-paper/lib/module/components/IconButton/IconButton\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './src/store';\nimport HomeScreen from './src/screens/HomeScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\nimport BookDetailScreen from './src/screens/BookDetailScreen';\nimport ReadingPlanScreen from './src/screens/ReadingPlanScreen';\nimport LoginScreen from './src/screens/LoginScreen';\nimport RegisterScreen from './src/screens/RegisterScreen';\nimport ReadingSessionScreen from './src/screens/ReadingSessionScreen';\nimport BadgesScreen from './src/screens/BadgesScreen';\nimport StatsScreen from './src/screens/StatsScreen';\nimport LeaderboardScreen from './src/screens/LeaderboardScreen';\nimport ChallengesScreen from './src/screens/ChallengesScreen';\nimport ChallengeDetailScreen from './src/screens/ChallengeDetailScreen';\nimport MediaViewerScreen from './src/screens/MediaViewerScreen';\nimport { AuthProvider, useAuth } from './src/hooks/useAuth';\nimport NotificationsScreen from './src/screens/NotificationsScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport OnboardingScreen from './src/screens/OnboardingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLogBox.ignoreLogs(['Require cycle:']);\nconst Stack = createStackNavigator();\nconst theme = Object.assign({}, DefaultTheme, {\n  colors: Object.assign({}, DefaultTheme.colors, {\n    primary: '#6200ee',\n    accent: '#03dac4',\n    background: '#f5f5f5',\n    surface: 'white',\n    text: '#000000',\n    disabled: '#bbbbbb',\n    placeholder: '#888888',\n    backdrop: 'rgba(0, 0, 0, 0.5)'\n  })\n});\nconst AuthNavigator = () => {\n  return _jsxDEV(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\nconst AppNavigator = () => {\n  const auth = useAuth();\n  if (!auth.user) {\n    return _jsxDEV(AuthNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#6200ee'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      cardStyleInterpolator: ({\n        current,\n        layouts\n      }) => {\n        return {\n          cardStyle: {\n            transform: [{\n              translateX: current.progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [layouts.screen.width, 0]\n              })\n            }],\n            opacity: current.progress.interpolate({\n              inputRange: [0, 0.5, 0.9, 1],\n              outputRange: [0, 0.25, 0.7, 1]\n            })\n          },\n          overlayStyle: {\n            opacity: current.progress.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, 0.5]\n            })\n          }\n        };\n      }\n    },\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: ({\n        navigation\n      }) => ({\n        title: 'Koach Reading',\n        headerRight: () => _jsxDEV(ProfileButton, {\n          navigation: navigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 30\n        }, this)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Onboarding\",\n      component: OnboardingScreen,\n      options: {\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"BookDetail\",\n      component: BookDetailScreen,\n      options: {\n        title: 'Book Details'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ReadingPlan\",\n      component: ReadingPlanScreen,\n      options: ({\n        route\n      }) => ({\n        title: route.params?.planId && !route.params?.isEdit ? 'Reading Plan' : route.params?.isEdit ? 'Edit Plan' : 'Create Plan'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'My Profile'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ReadingSession\",\n      component: ReadingSessionScreen,\n      options: {\n        title: 'Log Reading Session'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Badges\",\n      component: BadgesScreen,\n      options: {\n        title: 'Badges & Achievements'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Stats\",\n      component: StatsScreen,\n      options: {\n        title: 'Reading Statistics'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Leaderboard\",\n      component: LeaderboardScreen,\n      options: {\n        title: 'Leaderboard'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Challenges\",\n      component: ChallengesScreen,\n      options: {\n        title: 'Reading Challenges'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ChallengeDetail\",\n      component: ChallengeDetailScreen,\n      options: {\n        title: 'Challenge Details'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"MediaViewer\",\n      component: MediaViewerScreen,\n      options: {\n        title: 'Media Viewer',\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreen,\n      options: {\n        title: 'Notifications'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Settings'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\nfunction ProfileButton({\n  navigation\n}) {\n  return _jsxDEV(IconButton, {\n    icon: \"account-circle\",\n    size: 24,\n    onPress: () => navigation.navigate('Profile'),\n    style: {\n      marginRight: 10\n    },\n    color: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  return _jsxDEV(SafeAreaProvider, {\n    children: _jsxDEV(ReduxProvider, {\n      store: store,\n      children: _jsxDEV(AuthProvider, {\n        children: _jsxDEV(PaperProvider, {\n          theme: theme,\n          children: _jsxDEV(NavigationContainer, {\n            children: [_jsxDEV(AppNavigator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), _jsxDEV(StatusBar, {\n              style: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","SafeAreaProvider","StatusBar","PaperProvider","DefaultTheme","IconButton","NavigationContainer","createStackNavigator","Provider","ReduxProvider","store","HomeScreen","ProfileScreen","BookDetailScreen","ReadingPlanScreen","LoginScreen","RegisterScreen","ReadingSessionScreen","BadgesScreen","StatsScreen","LeaderboardScreen","ChallengesScreen","ChallengeDetailScreen","MediaViewerScreen","AuthProvider","useAuth","NotificationsScreen","SettingsScreen","OnboardingScreen","jsxDEV","_jsxDEV","LogBox","ignoreLogs","Stack","theme","Object","assign","colors","primary","accent","background","surface","text","disabled","placeholder","backdrop","AuthNavigator","Navigator","initialRouteName","screenOptions","headerShown","children","Screen","name","component","fileName","_jsxFileName","lineNumber","columnNumber","AppNavigator","auth","user","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","cardStyleInterpolator","current","layouts","cardStyle","transform","translateX","progress","interpolate","inputRange","outputRange","screen","width","opacity","overlayStyle","options","navigation","title","headerRight","ProfileButton","route","params","planId","isEdit","icon","size","onPress","navigate","style","marginRight","color","App"],"sources":["D:/All_Projects/Koach-Reader/client/App.tsx"],"sourcesContent":["// import 'react-native-get-random-values'; // Déplacé dans index.js\nimport { LogBox, StyleSheet } from 'react-native';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { Provider as PaperProvider, DefaultTheme, IconButton } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './src/store';\nimport HomeScreen from './src/screens/HomeScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\nimport BookDetailScreen from './src/screens/BookDetailScreen';\nimport ReadingPlanScreen from './src/screens/ReadingPlanScreen';\nimport LoginScreen from './src/screens/LoginScreen';\nimport RegisterScreen from './src/screens/RegisterScreen';\nimport ReadingSessionScreen from './src/screens/ReadingSessionScreen';\nimport BadgesScreen from './src/screens/BadgesScreen';\nimport StatsScreen from './src/screens/StatsScreen';\nimport LeaderboardScreen from './src/screens/LeaderboardScreen';\nimport ChallengesScreen from './src/screens/ChallengesScreen';\nimport ChallengeDetailScreen from './src/screens/ChallengeDetailScreen';\nimport MediaViewerScreen from './src/screens/MediaViewerScreen';\nimport { AuthProvider, useAuth } from './src/hooks/useAuth';\nimport NotificationsScreen from './src/screens/NotificationsScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport OnboardingScreen from './src/screens/OnboardingScreen';\n\nLogBox.ignoreLogs(['Require cycle:']);\n\nexport type RootStackParamList = {\n  Login: undefined;\n  Register: undefined;\n  Onboarding: undefined;\n  Home: undefined;\n  BookDetail: { bookId: number };\n  ReadingPlan: { planId?: number; bookId?: number; isEdit?: boolean };\n  Profile: undefined;\n  ReadingSession: { bookId: number; planId?: number };\n  MediaViewer: { bookId: number; mediaType: 'pdf' | 'audio' };\n  Badges: undefined;\n  Stats: undefined;\n  Leaderboard: undefined;\n  Challenges: undefined;\n  ChallengeDetail: { challengeId: number };\n  Settings: undefined;\n  Notifications: undefined;\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\n// Define main theme\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#6200ee',\n    accent: '#03dac4',\n    background: '#f5f5f5',\n    surface: 'white',\n    text: '#000000',\n    disabled: '#bbbbbb',\n    placeholder: '#888888',\n    backdrop: 'rgba(0, 0, 0, 0.5)',\n  },\n};\n\n// Auth navigation wrapper\nconst AuthNavigator = () => {\n  return (\n    <Stack.Navigator initialRouteName=\"Login\" screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// Main app navigation wrapper\nconst AppNavigator = () => {\n  const auth = useAuth();\n  \n  // If not authenticated, show auth screens\n  if (!auth.user) {\n    return <AuthNavigator />;\n  }\n  \n  return (\n    <Stack.Navigator \n      initialRouteName=\"Home\"\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#6200ee',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n        // Ajouter des animations de transition entre les écrans\n        cardStyleInterpolator: ({ current, layouts }) => {\n          return {\n            cardStyle: {\n              transform: [\n                {\n                  translateX: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layouts.screen.width, 0],\n                  }),\n                },\n              ],\n              opacity: current.progress.interpolate({\n                inputRange: [0, 0.5, 0.9, 1],\n                outputRange: [0, 0.25, 0.7, 1],\n              }),\n            },\n            overlayStyle: {\n              opacity: current.progress.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, 0.5],\n              }),\n            },\n          };\n        },\n      }}\n    >\n      <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen} \n        options={({ navigation }) => ({\n          title: 'Koach Reading',\n          headerRight: () => <ProfileButton navigation={navigation} />,\n        })}\n      />\n      <Stack.Screen \n        name=\"Onboarding\" \n        component={OnboardingScreen} \n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen \n        name=\"BookDetail\" \n        component={BookDetailScreen} \n        options={{\n          title: 'Book Details',\n        }}\n      />\n      <Stack.Screen \n        name=\"ReadingPlan\" \n        component={ReadingPlanScreen} \n        options={({ route }) => ({\n          title: route.params?.planId && !route.params?.isEdit \n            ? 'Reading Plan' \n            : (route.params?.isEdit ? 'Edit Plan' : 'Create Plan'),\n        })}\n      />\n      <Stack.Screen \n        name=\"Profile\" \n        component={ProfileScreen} \n        options={{\n          title: 'My Profile',\n        }}\n      />\n      <Stack.Screen \n        name=\"ReadingSession\" \n        component={ReadingSessionScreen} \n        options={{\n          title: 'Log Reading Session',\n        }}\n      />\n      <Stack.Screen \n        name=\"Badges\" \n        component={BadgesScreen} \n        options={{\n          title: 'Badges & Achievements',\n        }}\n      />\n      <Stack.Screen \n        name=\"Stats\" \n        component={StatsScreen} \n        options={{\n          title: 'Reading Statistics',\n        }}\n      />\n      <Stack.Screen \n        name=\"Leaderboard\" \n        component={LeaderboardScreen} \n        options={{\n          title: 'Leaderboard',\n        }}\n      />\n      <Stack.Screen \n        name=\"Challenges\" \n        component={ChallengesScreen} \n        options={{\n          title: 'Reading Challenges',\n        }}\n      />\n      <Stack.Screen \n        name=\"ChallengeDetail\" \n        component={ChallengeDetailScreen} \n        options={{\n          title: 'Challenge Details',\n        }}\n      />\n      <Stack.Screen \n        name=\"MediaViewer\" \n        component={MediaViewerScreen} \n        options={{\n          title: 'Media Viewer',\n          headerShown: false, // Hide header for full-screen experience\n        }}\n      />\n      <Stack.Screen \n        name=\"Notifications\" \n        component={NotificationsScreen} \n        options={{\n          title: 'Notifications',\n        }}\n      />\n      <Stack.Screen \n        name=\"Settings\" \n        component={SettingsScreen} \n        options={{\n          title: 'Settings',\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\ntype ProfileButtonProps = {\n  navigation: StackNavigationProp<RootStackParamList, 'Home'>;\n};\n\nfunction ProfileButton({ navigation }: ProfileButtonProps) {\n  return (\n    <IconButton\n      icon=\"account-circle\"\n      size={24}\n      onPress={() => navigation.navigate('Profile')}\n      style={{ marginRight: 10 }}\n      // @ts-ignore - IconButton from react-native-paper should accept color\n      color=\"white\"\n    />\n  );\n}\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <ReduxProvider store={store}>\n        <AuthProvider>\n          <PaperProvider theme={theme}>\n            <NavigationContainer>\n              <AppNavigator />\n              <StatusBar style=\"auto\" />\n            </NavigationContainer>\n          </PaperProvider>\n        </AuthProvider>\n      </ReduxProvider>\n    </SafeAreaProvider>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}